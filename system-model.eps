%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: figure source 3.pdf
%%Creator: Adobe Acrobat 10.1.5
%%For: miyen
%%CreationDate: 13/2/22, 下午7:20
%%BoundingBox: -1 0 441 294
%%HiResBoundingBox: 0 0 440.2255 293.1408
%%CropBox: 0 0 440.2255 293.1408
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 941 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2013-02-22T19:19:12+08:00"
   xmp:CreateDate="2013-02-22T19:19:09+08:00"
   xmp:MetadataDate="2013-02-22T19:19:12+08:00"
   xmp:CreatorTool="PowerPoint"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:d6f3df8b-9018-a146-8b7e-5eb8115e1eeb"
   xmpMM:InstanceID="uuid:1394b0d7-4753-8d42-b65e-cc74304835fe"
   pdf:Producer="Mac OS X 10.7.5 Quartz PDFContext">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>miyen </rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -293.141 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 293.141 li
440.225 293.141 li
440.225 0 li
cp
clp
-117.256 -128.57 mo
602.743 -128.57 li
602.743 411.429 li
-117.256 411.429 li
-117.256 -128.57 li
false sop
0 0 0 0 cmyk
ef
1.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
16.7478 69.7263 mo
17.1968 67.4593 17.6867 65.1922 18.6256 64.8144 cv
19.5646 64.4365 21.3608 67.2973 22.2997 67.2973 cv
23.2387 67.2973 23.2387 64.8144 24.1776 64.8144 cv
25.1165 64.8144 26.3412 67.2973 27.8925 67.2973 cv
29.4438 67.2973 31.2809 64.8144 33.4445 64.8144 cv
35.6081 64.8144 39.2822 67.7291 40.8335 67.2973 cv
42.3848 66.8655 42.0582 62.3854 42.6705 62.3854 cv
43.2829 62.3854 43.3237 66.9195 44.5484 67.2973 cv
45.7731 67.6752 48.8757 67.2433 50.1004 64.8144 cv
51.3251 62.3854 50.3861 52.6155 51.9374 52.6155 cv
53.4887 52.6155 56.9179 64.0047 59.3673 64.8144 cv
61.8167 65.624 64.3069 59.5246 66.7563 57.4734 cv
69.2057 55.4223 71.9817 51.8058 74.1453 52.6155 cv
76.3089 53.4252 78.1868 60.3343 79.7381 62.3854 cv
81.2894 64.4365 82.1875 65.624 83.4122 64.8144 cv
84.6369 64.0047 85.29 56.232 87.1271 57.4734 cv
88.9641 58.7149 91.4135 73.7746 94.5161 72.1553 cv
97.6187 70.5359 102.273 49.3229 105.661 47.7036 cv
109.049 46.0843 111.499 60.3343 114.887 62.3854 cv
118.275 64.4365 123.541 62.8172 126.032 59.9564 cv
128.522 57.0956 129.093 51.1581 129.706 45.2746 cv
0 0 0 1 cmyk
@
14.9563 86.4006 mo
17.006 79.2648 19.0558 72.1844 20.6454 71.3546 cv
22.2351 70.5249 23.1972 76.8309 24.4522 81.4221 cv
25.7072 86.0134 26.9621 99.3999 28.2171 98.9574 cv
29.4721 98.5149 30.7689 80.5371 32.0238 78.8776 cv
33.2788 77.2181 33.9481 88.9452 35.8306 88.9452 cv
37.713 88.9452 41.1851 79.7074 43.4022 78.8776 cv
45.6193 78.0479 46.5815 81.8094 49.0914 83.9114 cv
51.6013 86.0134 56.0774 92.2641 58.5873 91.4344 cv
61.0973 90.6046 61.0973 79.3201 64.2765 78.8776 cv
67.4558 78.4351 75.0693 88.5026 77.5792 88.9452 cv
80.0891 89.3877 77.5792 81.4221 79.4617 81.4221 cv
81.3441 81.4221 85.7783 88.5026 88.9576 88.9452 cv
92.1369 89.3877 95.9436 84.3539 98.4536 83.9114 cv
100.963 83.4688 102.26 84.7411 104.143 86.4006 cv
106.025 88.0601 107.28 94.3661 109.832 93.9789 cv
112.384 93.5917 115.856 86.0134 119.328 83.9114 cv
122.8 81.8094 126.732 81.5881 130.706 81.4221 cv
@
14.9552 211.14 mo
16.2081 213.307 17.5026 215.474 18.7555 216.701 cv
20.0083 217.927 21.5534 218.868 22.5139 218.541 cv
23.4744 218.214 23.4744 215.106 24.4349 214.82 cv
25.3954 214.534 27.2329 216.987 28.1934 216.701 cv
29.1539 216.415 29.4879 212.98 30.1143 212.98 cv
30.7408 212.98 30.4067 215.76 31.9936 216.701 cv
33.5805 217.641 37.3807 219.154 39.594 218.541 cv
41.8073 217.927 42.7678 213.266 45.2734 212.98 cv
47.7791 212.694 49.6583 216.415 54.7113 216.701 cv
59.7644 216.987 71.1232 214.82 75.5499 214.82 cv
79.9765 214.82 79.6424 218.541 81.2293 216.701 cv
82.8162 214.861 83.1503 202.472 85.0295 203.698 cv
86.9088 204.925 90.4166 223.815 92.6299 224.101 cv
94.8433 224.388 96.0961 206.765 98.3094 205.538 cv
100.523 204.312 101.776 216.374 105.868 216.701 cv
109.961 217.028 119.733 210.527 122.906 207.419 cv
126.08 204.312 125.454 201.204 124.827 198.138 cv
@
14.9557 244.858 mo
16.9235 239.422 18.8914 234.027 20.4175 233.395 cv
21.9436 232.763 22.8673 237.567 24.0721 241.065 cv
25.277 244.563 26.4818 254.763 27.6866 254.426 cv
28.8914 254.088 30.1364 240.391 31.3412 239.127 cv
32.546 237.862 33.1886 246.797 34.9958 246.797 cv
36.803 246.797 40.1364 239.759 42.2649 239.127 cv
44.3934 238.494 45.3171 241.36 47.7267 242.962 cv
50.1364 244.563 54.4336 249.326 56.8432 248.694 cv
59.2528 248.062 59.2528 239.464 62.305 239.127 cv
65.3573 238.79 72.6665 246.46 75.0761 246.797 cv
77.4858 247.134 75.0761 241.065 76.8833 241.065 cv
78.6906 241.065 82.9476 246.46 85.9998 246.797 cv
89.052 247.134 92.7066 243.299 95.1163 242.962 cv
97.5259 242.625 98.7709 243.594 100.578 244.858 cv
102.385 246.123 103.59 250.927 106.04 250.632 cv
108.49 250.337 111.823 244.563 115.156 242.962 cv
118.49 241.36 122.265 241.192 126.08 241.065 cv
@
14.9552 231.523 mo
17.6872 231.847 20.4191 232.218 22.227 231.523 cv
24.0349 230.829 24.6777 226.617 25.8829 227.311 cv
27.0882 228.006 27.972 235.736 29.4987 235.736 cv
31.0254 235.736 33.4761 228.376 35.0027 227.311 cv
36.5294 226.247 37.4133 228.746 38.6185 229.44 cv
39.8238 230.135 41.0692 232.218 42.2745 231.523 cv
43.4797 230.829 44.7252 224.164 45.9304 225.228 cv
47.1357 226.293 48.3409 238.143 49.5462 237.819 cv
50.7515 237.495 51.9969 224.534 53.2021 223.145 cv
54.4074 221.757 54.7288 228.376 56.8581 229.44 cv
58.9874 230.505 63.8486 230.829 65.9779 229.44 cv
68.1072 228.052 67.7858 220.692 69.5937 221.016 cv
71.4016 221.34 74.4951 231.894 76.9056 231.523 cv
79.3161 231.153 82.6507 220.322 84.1773 218.933 cv
85.704 217.544 85.1014 220.692 86.0254 223.145 cv
86.9494 225.599 88.4359 230.829 89.6412 233.606 cv
90.8464 236.384 92.3731 241.013 93.2971 239.948 cv
94.2211 238.883 94.181 230.459 95.105 227.311 cv
96.029 224.164 97.2343 220.646 98.761 221.016 cv
100.288 221.386 102.417 228.052 104.225 229.44 cv
106.033 230.829 106.957 230.829 109.689 229.44 cv
112.421 228.052 117.884 223.84 120.616 221.016 cv
123.348 218.192 124.714 215.415 126.08 212.638 cv
@
307.182 236.123 mo
308.261 233.573 309.342 231.024 310.379 229.009 cv
310.899 228 311.406 227.125 311.916 226.435 cv
312.434 225.75 312.924 225.218 313.606 224.961 cv
313.78 224.899 313.967 224.865 314.152 224.865 cv
314.517 224.864 314.855 224.998 315.119 225.184 cv
315.585 225.515 315.9 225.978 316.201 226.517 cv
316.644 227.328 317.024 228.341 317.406 229.41 cv
317.785 230.478 318.161 231.597 318.556 232.579 cv
318.909 233.458 319.234 234.66 319.563 236 cv
320.054 238.005 320.541 240.307 321.02 242.082 cv
321.257 242.967 321.497 243.723 321.712 244.209 cv
321.817 244.451 321.921 244.624 321.975 244.688 cv
321.999 244.715 li
321.943 244.774 li
321.99 244.709 li
321.999 244.715 li
321.943 244.774 li
321.99 244.709 li
321.756 245.032 li
321.756 244.642 li
321.882 244.641 321.971 244.693 321.99 244.709 cv
321.756 245.032 li
321.756 244.642 li
321.756 245.118 li
321.645 244.655 li
321.756 244.642 li
321.756 245.118 li
321.645 244.655 li
321.747 245.075 li
321.471 244.737 li
321.494 244.718 321.549 244.678 321.646 244.655 cv
321.747 245.075 li
321.471 244.737 li
321.571 244.86 li
321.455 244.751 li
321.471 244.737 li
321.571 244.86 li
321.455 244.751 li
321.468 244.753 321.636 244.469 321.772 244.059 cv
322.028 243.331 322.307 242.181 322.583 240.879 cv
322.999 238.922 323.42 236.609 323.843 234.676 cv
324.055 233.709 324.267 232.838 324.487 232.136 cv
324.597 231.785 324.709 231.476 324.834 231.207 cv
324.963 230.937 325.085 230.706 325.324 230.483 cv
325.496 230.324 325.765 230.175 326.079 230.177 cv
326.354 230.176 326.591 230.29 326.749 230.413 cv
327.047 230.652 327.193 230.919 327.347 231.218 cv
327.602 231.741 327.815 232.398 328.037 233.119 cv
328.367 234.194 328.709 235.403 329.084 236.293 cv
329.269 236.736 329.468 237.097 329.631 237.295 cv
329.711 237.394 329.78 237.451 329.814 237.471 cv
329.84 237.484 li
329.829 237.52 li
329.829 237.483 li
329.84 237.484 li
329.829 237.52 li
329.829 237.483 li
329.864 237.487 330.023 237.453 330.25 237.31 cv
330.648 237.068 331.202 236.546 331.788 235.9 cv
332.672 234.93 333.653 233.686 334.621 232.616 cv
335.106 232.081 335.588 231.587 336.073 231.185 cv
336.561 230.785 337.045 230.463 337.608 230.315 cv
337.889 230.243 338.166 230.207 338.435 230.207 cv
339.066 230.206 339.636 230.408 340.119 230.696 cv
340.846 231.132 341.43 231.738 342.058 232.335 cv
342.684 232.933 343.343 233.528 344.148 233.985 cv
345.478 234.745 347.158 236.099 348.856 237.261 cv
349.7 237.84 350.543 238.368 351.31 238.74 cv
352.075 239.115 352.766 239.319 353.255 239.315 cv
353.383 239.315 353.498 239.302 353.601 239.279 cv
353.749 239.245 353.905 239.158 354.095 238.956 cv
354.427 238.609 354.778 237.925 355.096 237.098 cv
355.583 235.854 356.024 234.311 356.649 232.994 cv
356.965 232.334 357.328 231.724 357.812 231.229 cv
358.291 230.737 358.928 230.362 359.679 230.295 cv
359.776 230.286 359.873 230.281 359.971 230.281 cv
361.08 230.293 362.265 230.779 363.567 231.448 cv
365.507 232.458 367.662 233.94 369.573 235.191 cv
370.527 235.816 371.419 236.382 372.17 236.796 cv
372.914 237.213 373.548 237.463 373.831 237.488 cv
373.944 237.495 li
374.054 237.494 374.075 237.475 374.08 237.473 cv
374.082 237.472 374.129 237.445 374.182 237.264 cv
374.232 237.092 374.26 236.808 374.259 236.478 cv
374.26 235.842 374.167 235.053 374.165 234.322 cv
374.169 233.862 374.191 233.419 374.388 232.968 cv
374.488 232.746 374.652 232.515 374.896 232.35 cv
375.139 232.183 375.439 232.107 375.722 232.109 cv
376.129 232.112 376.5 232.228 376.878 232.388 cv
377.536 232.672 378.229 233.12 378.979 233.637 cv
380.098 234.412 381.33 235.347 382.532 236.101 cv
383.728 236.859 384.905 237.411 385.78 237.486 cv
385.896 237.497 386.014 237.502 386.135 237.502 cv
387.505 237.514 389.196 236.756 390.842 235.893 cv
391.668 235.464 392.486 235.017 393.278 234.649 cv
394.073 234.283 394.839 233.987 395.609 233.892 cv
395.995 233.846 396.361 233.824 396.71 233.824 cv
397.817 233.822 398.755 234.056 399.603 234.421 cv
400.454 234.785 401.219 235.265 402.067 235.771 cv
402.69 236.149 403.172 236.699 403.63 237.291 cv
404.31 238.181 404.931 239.193 405.575 239.937 cv
405.896 240.31 406.218 240.61 406.526 240.804 cv
406.837 240.997 407.118 241.089 407.431 241.09 cv
407.589 241.082 li
408.027 241.045 408.675 240.733 409.402 240.194 cv
410.497 239.393 411.761 238.144 413.095 236.942 cv
414.435 235.741 415.844 234.576 417.369 233.943 cv
421.193 232.376 425.418 232.231 429.601 232.109 cv
429.644 233.609 li
425.466 233.724 421.42 233.895 417.939 235.331 cv
416.315 235.987 414.507 237.661 412.806 239.243 cv
411.95 240.033 411.114 240.798 410.289 241.404 cv
409.462 242.004 408.647 242.473 407.743 242.574 cv
407.638 242.585 407.533 242.59 407.431 242.59 cv
406.578 242.592 405.845 242.221 405.259 241.733 cv
404.374 240.996 403.707 239.98 403.064 239.067 cv
402.434 238.151 401.81 237.351 401.297 237.059 cv
400.435 236.542 399.719 236.1 399.014 235.8 cv
398.307 235.5 397.614 235.326 396.71 235.324 cv
396.425 235.324 396.119 235.342 395.787 235.382 cv
395.292 235.438 394.637 235.67 393.91 236.01 cv
392.815 236.517 391.556 237.249 390.242 237.867 cv
388.926 238.481 387.547 238.998 386.135 239.002 cv
385.97 239.002 385.804 238.995 385.639 238.979 cv
384.633 238.88 383.641 238.458 382.654 237.916 cv
381.178 237.099 379.711 235.984 378.438 235.089 cv
377.804 234.642 377.219 234.251 376.733 233.986 cv
376.251 233.716 375.854 233.599 375.722 233.609 cv
375.7 233.61 li
375.7 233.61 li
375.7 233.61 li
375.7 233.61 li
375.7 233.61 li
375.7 233.61 li
375.666 233.484 li
375.761 233.572 li
375.7 233.61 li
375.666 233.484 li
375.761 233.572 li
375.743 233.555 li
375.764 233.569 li
375.761 233.572 li
375.743 233.555 li
375.764 233.569 li
375.757 233.577 375.721 233.654 375.7 233.788 cv
375.677 233.923 375.664 234.108 375.665 234.322 cv
375.663 234.922 375.757 235.717 375.759 236.478 cv
375.753 237.013 375.724 237.541 375.481 238.056 cv
375.358 238.311 375.161 238.565 374.884 238.74 cv
374.607 238.916 374.274 238.997 373.944 238.995 cv
373.848 238.995 373.75 238.989 373.652 238.977 cv
373.191 238.919 372.737 238.748 372.232 238.514 cv
370.489 237.692 368.118 235.991 365.772 234.492 cv
364.604 233.744 363.451 233.05 362.43 232.554 cv
361.413 232.054 360.514 231.773 359.971 231.781 cv
359.82 231.788 li
359.553 231.815 359.334 231.907 359.099 232.086 cv
358.692 232.395 358.282 233.014 357.926 233.806 cv
357.382 234.992 356.947 236.514 356.418 237.833 cv
356.151 238.494 355.862 239.108 355.482 239.627 cv
355.107 240.139 354.606 240.589 353.929 240.742 cv
353.707 240.792 353.481 240.815 353.255 240.815 cv
352.393 240.81 351.533 240.512 350.655 240.089 cv
349.342 239.451 347.983 238.5 346.712 237.581 cv
345.447 236.664 344.263 235.774 343.406 235.289 cv
342.096 234.541 341.186 233.559 340.411 232.836 cv
340.026 232.473 339.675 232.176 339.354 231.987 cv
339.03 231.797 338.755 231.709 338.435 231.707 cv
338.297 231.708 338.148 231.725 337.978 231.768 cv
337.824 231.805 337.582 231.924 337.303 232.128 cv
336.811 232.483 336.215 233.079 335.601 233.769 cv
334.675 234.806 333.696 236.048 332.762 237.056 cv
332.293 237.562 331.837 238.01 331.374 238.357 cv
330.909 238.695 330.434 238.972 329.829 238.982 cv
329.337 238.983 328.932 238.732 328.654 238.448 cv
328.16 237.942 327.852 237.266 327.554 236.505 cv
327.118 235.368 326.764 234.03 326.428 233.003 cv
326.263 232.492 326.097 232.056 325.962 231.804 cv
325.897 231.679 325.836 231.603 325.828 231.597 cv
325.889 231.537 li
325.837 231.605 li
325.828 231.597 li
325.889 231.537 li
325.837 231.605 li
326.079 231.285 li
326.079 231.677 li
325.952 231.678 325.857 231.622 325.837 231.605 cv
326.079 231.285 li
326.079 231.677 li
326.079 231.324 li
326.326 231.6 li
326.326 231.602 326.228 231.678 326.079 231.677 cv
326.079 231.324 li
326.326 231.6 li
326.279 231.547 li
326.333 231.593 li
326.326 231.6 li
326.279 231.547 li
326.333 231.593 li
326.298 231.619 326.128 231.936 325.984 232.382 cv
325.717 233.172 325.43 234.395 325.144 235.763 cv
324.714 237.819 324.28 240.213 323.842 242.139 cv
323.622 243.104 323.403 243.949 323.17 244.605 cv
323.051 244.935 322.932 245.216 322.782 245.465 cv
322.706 245.59 322.621 245.709 322.504 245.824 cv
322.387 245.936 322.228 246.056 321.995 246.114 cv
321.756 246.142 li
321.443 246.141 321.191 245.999 321.027 245.858 cv
320.718 245.584 320.554 245.271 320.374 244.891 cv
320.074 244.229 319.805 243.348 319.533 242.328 cv
319.127 240.801 318.727 238.975 318.329 237.287 cv
317.934 235.603 317.531 234.045 317.165 233.139 cv
316.528 231.556 315.975 229.742 315.41 228.366 cv
315.13 227.68 314.842 227.105 314.585 226.757 cv
314.458 226.582 314.34 226.468 314.263 226.416 cv
314.152 226.365 li
314.107 226.375 li
313.953 226.414 313.546 226.737 313.122 227.326 cv
312.472 228.203 311.723 229.604 310.951 231.25 cv
310.177 232.898 309.371 234.797 308.563 236.707 cv
307.182 236.123 li
f
307.872 250.796 mo
310.866 251.1 313.859 251.448 315.839 250.796 cv
317.82 250.145 318.524 246.192 319.845 246.844 cv
321.165 247.495 322.134 254.749 323.806 254.749 cv
325.479 254.749 328.164 247.843 329.837 246.844 cv
331.509 245.845 332.478 248.19 333.798 248.842 cv
335.119 249.493 336.483 251.448 337.804 250.796 cv
339.124 250.145 340.489 243.89 341.809 244.889 cv
343.13 245.888 344.45 257.007 345.771 256.703 cv
347.091 256.399 348.456 244.238 349.776 242.935 cv
351.097 241.632 351.449 247.843 353.782 248.842 cv
356.115 249.841 361.441 250.145 363.774 248.842 cv
366.106 247.539 365.754 240.633 367.735 240.937 cv
369.716 241.241 373.105 251.144 375.746 250.796 cv
378.387 250.449 382.04 240.285 383.713 238.982 cv
385.386 237.679 384.725 240.633 385.738 242.935 cv
386.75 245.237 388.379 250.145 389.699 252.751 cv
391.02 255.357 392.692 259.7 393.705 258.701 cv
394.717 257.702 394.673 249.797 395.686 246.844 cv
396.698 243.89 398.018 240.589 399.691 240.937 cv
401.364 241.284 403.697 247.539 405.677 248.842 cv
407.658 250.145 408.671 250.145 411.664 248.842 cv
414.657 247.539 420.643 243.586 423.636 240.937 cv
426.629 238.287 428.126 235.681 429.622 233.075 cv
@
gsave
-117.256 411.429 mo
602.743 411.429 li
602.743 -128.571 li
-117.256 -128.571 li
-117.256 411.429 li
72.8302 131.92 mo
72.8302 135.596 87.2559 138.576 105.051 138.576 cv
122.846 138.576 137.271 135.596 137.271 131.92 cv
137.271 171.855 li
137.271 175.531 122.846 178.511 105.051 178.511 cv
87.2557 178.511 72.8302 175.531 72.8302 171.855 cv
72.8302 131.92 li
72.8302 131.92 mo
72.8302 128.244 87.2559 125.264 105.051 125.264 cv
122.846 125.264 137.271 128.244 137.271 131.92 cv
137.271 135.596 122.846 138.576 105.051 138.576 cv
87.2559 138.576 72.8302 135.596 72.8302 131.92 cv
eclp
134.089 183.975 mo
68.9618 183.975 li
68.9618 122.775 li
141.289 122.775 li
141.289 182.666 li
134.089 182.666 li
134.089 183.975 li
99.4495 178.411 mo
101.269 178.477 103.14 178.511 105.051 178.511 cv
106.961 178.511 108.833 178.477 110.652 178.411 cv
123.616 178.411 li
123.616 177.296 li
131.877 176.091 137.271 174.103 137.271 171.855 cv
137.271 131.92 li
137.271 131.92 li
137.271 131.92 li
137.271 131.92 li
137.271 128.244 122.846 125.264 105.051 125.264 cv
87.2559 125.264 72.8302 128.244 72.8302 131.92 cv
72.8302 131.92 li
72.8302 171.855 li
72.8302 174.087 78.1471 176.062 86.3072 177.27 cv
86.3072 178.411 li
99.4495 178.411 li
105.051 138.576 mo
87.2559 138.576 72.8302 135.596 72.8302 131.92 cv
72.8302 131.92 li
72.8302 135.596 87.2559 138.576 105.051 138.576 cv
122.846 138.576 137.271 135.596 137.271 131.92 cv
137.271 131.92 li
137.271 135.596 122.846 138.576 105.051 138.576 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[72.9818 0 0 61.8545 -48.6217 108.839 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 189 
/M[223 0 0 -189 0 189 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN.X
JcLB&^B!?rhuJ?/JcLB&JcLB&JcO-tjoP&TjoP2VJcLB&JcLB&JcLB&fDtLDp&`nLo`Fmhr;hWQJcLB&
JcLB&JcOU,pAt*lqZHZtq?>d]q??a!q?$^!qZ?KmOoU(6JcLB&JcLB&i;iZSquZcur<3'&rW`<+r<W<-
r!MTpq[39.r<W?,r<E3(r<3'$qZ?Qoc2`FrJcLB&JcLB&Z2j_%r;up"rWN3(rs&H-rs8W2rX/Z5rXAc8
rsnu<!"f/Ar"8]:r"Ji<r=Su>rX\u<rXJl9rX8`5rsAZ1rs/N-rWW9(rWE'"q>o1JJcLB&JcLB&JcN.X
qZ6Wsrr`6'+pA,S"pYA=#RLeE$4@7N%1NdX%hK9a&eYik'GM8s()@]&rYYVPrYkYQoGmcJrYkbRrYYYO
rtbVLrY-.^&eYcg&.f?^%LijU$O[:K#mgkB#6kD3"oe`)"8r;u!T*m/!.k3&!.k3&!4Dn)!WE-M!s8Z/
"U,)7#6tM@#mq%K$k3[W%hK<c',2,q()Ic()&aG5*$$%@+!2U0+<_mP+sS?3,lT+f-M/\a-N,7j,lT#>
+sJ0R+<M[H*ZZ4?)]BV4(`*r''bh;o&ePZc%LrpV$O[:J#RCY>"pG/5"TAN&!rN)]!.k3&!.k3&!.k3[
!;lls!\=EU"9\l3"pYD>#mq%K%1Wm[&J>`k'c%T&)&aG6*?H:F+X/-V,palc-n-SM.P!##/M/S-r\+:*
rA"4*p+uV%r\=C+1bUL7/hJY+/1W2".4?Sl-7'o^+sJ0Q+!)FB)]BS1()7Ms&ePZc%LigS$47(F#6kA9
"U+f,rrW*!m/V_<JcLB&ZiG[XK`M)Q!!3'#2?O$a"U,)8#RLhG$k3[W&/#Wj'c.]))]Tk>+<_pS,pjuf
.4Zr$/MAb20etOA2)R9N2`NfXr]:'@r]L-BqEFgAqEFmAr]L0A)`g#?3B/uW2E!EL1c$mA0J>%1/1W2!
-mp;d,97sO+!)FA)As>,'bh8m&.]3Y$OR1G#R:P;"9\f/rW<$!VZ;;KJcLB&JcLK)rW,._!WiH+"9eu7
#RLhG$k3^Y&JGio(E"/3*ZlOL,UOle.P!)'0/54<1c70N3B9,^4?Ykm5<qM$6:4+.7/fXS7fGpU8FoFM
8H)-Y7MnQ_6psC06:*t(5X.Fr4Zkee3B/rU2)I*90eb74/1W.t-7'l\+<MUC)Aj8*'G:ug%LidQ#m^b?
"U,#2!s/Q&!Nc?R!.k3&!.k3)!<*![!WiH+"9eu7#RLhG%1Wp]',;<$)B9e@+sSB].4Zr%0JP@?2E*WW
4$5Yj5X@_(6psI57n?0B8kMbU9`Iid:B"&e;!V!V;#O2i:B!ru9MA)P8kMZG7n6$;6pj:,/3lE`4Zked
3&`]O1,1F6/1N%p,U4HS*?,n6().An%h9!U#m^b?"U"r1!Wr<$ZN,RWJcLB&JcLK)rW,(]!WrN-"U52;
$4@:R&/#Zm(`FA9+X89\.4Zu'0f([G3'',a5!VD$6q'R884cEH9MJ5V:JXe`;,U<k;uTbq<Vohm=7fVj
=8Z+t<W5r);c?Rl;,L.d:JOY?9h\2Q8kDQD7RTU15sIOq4#o5X1bpa;/1N%p,U+?P)]9G,'+kcc$k!@I
#6k>7!s/Q'!Or,]!.k3&!.k3(!<3'[!<N<)"9eu7#mq(N&/#Zn)&jV>,:+]e/1rY52)dNW4[21u6UaI8
8P2WL9hnJ\;,U:j<)cjt<`]3$r`K/&qc`c!ls0<ir*'&%r`B5'=&q7\<E3!t;c?Rk:f'q_9h\2O84Q-;
6U<t$4?>G[1bpa:.k)ej+Wh^C(`!bs%h/mR#R:P:!s8W(!Ug#?!.k3&!.k3&!71`F!Aso\!sAf5#n%.P
&JGos)]g+H-7LGt0JbUH3]oSk6:=:58P2ZN:/=\`;H$Op<E<1&=BJ^/r`]8)rET2)ra+;bq-Er(r`fA*
r`M*\=BAO(<E)pr;Gg7d:/";Q84Q*95sRRq3B&fN0.eY$,pFEO)Aa,$&.T*U#R1G8!s/N)!V?AD!.k3&
!.k3&!7(ZE!AX]Y"9eu8$4ICV'GhW,+!W*]/2&_72`a&c5sn(28P2ZN:Jand<)cju='/R-=^#!5>Q.n*
?2It'?iFEg@.[h'?N"1/>lIq_>$>'3=BAR)<E)mp;,C"^91h`E6pa.%4#o2T0J+b%,U"3J(_mYp%1<II
"p>#0!W`>t!.k3&!.k3&!.k3q!&+ES!WrQ/"pbSG&/,fs*?ZRS.P<G42`a)e6:FC992//X;,U@n<``C*
=^#!5>?kG4?2S%*?hRn$@-1n`@/=7/?N+70>Us#_>$5!1=&r=#;c6Ff9h\/M7RTO,4?5;U0J"Y!+s%[?
'bLrb$4$h=!s8H&rW%NMJcLB&JcLB&b5a'o!<N?,"pbSH&JQ'$+!W-`0/>FG4?l/$7nQHM:Jk%i<E<1'
=^#$6>[1Q?rEfD/oO.Q)`*r=Hqd9>/r`psX>[(B8=]ea+<Dudl:JFJR7RTO+4#f&O/L_ti*Z>e-%h&dM
"U"o/!<<.Q!.k3&!42`X!13a$!<E6'"9f&<%1s<m*?caZ/i#=G5!]fL7nHBL:f:7m<``C+>$G6:?![G9
rEo;,W+#^6qI'5.ra$sX?!LT<>$4s/<`E!p:JFJQ7RKC&3AiNB-mTlR(D@;f#mUV9!W`>4!.k3&!.k3&
!1!Tu!<E6(":#5A&/6!&+t"or2*!id&k,>a9i+_d<EE:*>$G6:?!UcCrEoD/TOIV(q-a/.-!jn`?!LT<
>$4p-<)ZXi9M%]@5Wh"^0.J7j)]'+s$O?n=!W`>8!.k3&!.k3&!0[Bo!<N?,#7:qR(E=VH/M]7I5S-=S
928;]<E<4)>$G6;?!^k:?i"0$@I@S$@/XFU?=$oB>[(B6=&i3s:JFDM69[Ff0Ie@j)ANel#mLM6!<L":
JcLB&JcLB&OT5jl!WrT2$P*pi+=8Wp2a%[;7S6BO;cQn$>$G6;?!^k:?i4<#@HM"q@/aLS?=$oB>?Y02
<`Dpl91VH83]/Q>,97R5%1*4A!W`>@!.k3&!.k3&!07*g!<E6)#7D%W)^6^b2@qu;7S?KR<*!+)>?kH?
?=.(;@$kBZ@JjO4?Q*6V?!LQ9=&i0q9h@`;3\r?7*uGV"#mLJ5!VueJ!.k3&!.k3&!8.>j!<NB.$4djk
,:bN05Xe:@;H6e$>?kH??=.(<@*)iR@JjLO?XI,F?!CK7<`Dmi84,Nu0..k[&e,*M!s&H%!.k3&!.k3&
!.k4&!#P_;!sJr>'H88I1d")q9i=tn>$G9=?=.(=@)ucJ@JsRM?XI,F>[(?3<)?4W5<(>F*u>Ls#6Y)/
JcLB&JcLB&JcO:#'`e@=#7D+\+Y#916qU6S='Ag6?=.(=@)ucD@JsRG?X@&D>?P!)9h.H.0.%\S%LE4@
!s&FW!.k3&!.k3&!7:cZ!<NE1%M^!30fhZp:fUV%?!^n;@)uc>@K'XC?XI,E>$"Wt7mAm_+pJns$O-_8
!Jpf.!.k3X!.k3A!#,G8!sT)D(a:Lh5Y4dP=^,3>?XR:=@=hqA@K'XH?X@#B=&Vg^4>J9)'Fb<N!Wg"8
JcLB&JcLB&RK*s$!WrZ9&fW,N4%2nD=^,3>?srn@Jmm/;&n#*S?!:<,8jP?c+VtXq"Tnc+_>o/fJcLB&
JcM,;&HMq9#7V@g-o=.[;--t-?XR:@@=hq7@1cmT?<gW49gh#q,8h(#"p4o-`;kJiJcLB&JcM#8&HMq9
#S%Um.Q0Rc;cm:2?X[Ap@E`-k?sd5E<_u:L0d[hP$O-\7!QY7m!.k3&!.k35!"K#3"UGVT+Y5T?9iP;%
?N=Jd@E;jf?s[)?;+Wr--QEd-"p=u.r;_ELJcLB&JcLB&gAh`b!sJuA(EtFk6r$`c?!h!L@?Y+2?sd/@
;G'22-lis0#6Y)/!.k3&!.k3&!.k4'!"T)4"UP_W+tYfC:/tJ(?XUKSOC8T+?X6f58jG3]*>Ane"9AQ)
KE-T(JcLB&JcO=$%flb9#nRpu/ilEs<a/m;@(p'/@1$CL?!1*!5rC)4'EegL"9JUZ!.k3&!.k3&!7CiX
!<WK3&/ZWE3^lhF>@(ZE_-r40#@LnE=]7sZ2$YQO'FY3L!We/YJcLB&ZiG[XSH'0$!sJuB(aCXo78Hrg
?=.+6@=hq;@1QaQ?!1*!5rC)4'FY3L!Wg%9JcLB&JcLB&RK*j!!sJuB(aCXo78Hrg?=.+9@=hq8@1QaQ
?!1*!5rC)4'FY3L!Wg.<JcLB&JcLB&QN.Ns!sJuB(aCXo78Hrg?=.+<@=hq5@1QaQ?!1*!5rC)4'FY3L
!Wg7?JcLB&JcLB&PQ29r!sJuB(aCXo78Hrg?=.)K@=hq2@1QaQ?!1*!5rC)4'FY3L!Wg@BJcLB&JcLB&
OT5jl!sJuB(aCXo78Hrg?=*\?K42i0%q&aM=]7sZ2(9R\$jQn:!W<"M!.k3&!.k3&!8@Ja!<WK3&/ZWE
3^lhF>@(ZE\7(S0&7AjN=]7sZ2(9R\$jQn:!<@]OJcLB&JcLB&fDlE_!sJuB(aCXo78Hrg?=.*P@?=n,
?sd2B;bKD6.3903#6Y&/!JCH)!.k3&!.k4$!"T)4"UP_W,;)#G:KC\+?XUTVNF<0%?X6f590kEa*Y\_c
#6Y)/LB)o+JcLB&JcO4!%flb9#nRpu/ilEs<a/m;@)69/@0^1I?!1*!5rAlr*Y]"f"9JU]!.k3&!42`X
!1a*#!<WK3&/ZWE3^lhF>@(ZEp0iP]e6rkq?X6f590kEa*Y]"f"9JV=!.k3&!.k3&!1Elu!<WK3&/ZWE
3^lhF>@(ZEq-ek`d:!Pn?X6f590kEa*Y]"f"9JV@!.k3&!.k3&!1*Zr!<WK3&/ZWE3^lhF>@(ZEr*b1c
c=%5k?X6f590kEa*Y]"f"9JVC!.k3&!.k3&!0dHq!<WK3&/ZWE3^lhF>@(ZE@:=arb@(oh?X6f590kEa
*Y]"f"9JVF!.k3&!.k3&!0I6k!<WK3&/ZWE3^lhF>@(Y:@"Vn/@1QaQ?!1*!5rC)4'FY3L!Wi6"JcLB&
JcLB&JcOO*%flb9#nRpu/ilEs<a/m;@(9X/@1ZgR?!1*!5rC)4'FY3L!W`:Q!.k3&!.k3&!8%8^!<WK3
&/ZWE3^lhF>@(ZE]4$e0%:EOK=]7sZ2(9R\$jQn9!WdrSJcLB&JcLB&eGp*\!sJuB(aCXo78Hrg?=.*S
@?"\&?sd2B;bKD6.390+$jQn:!J^Z,!.k3&!.k4!!"T)4"UP_W,;)#G:KC\+?XU]YMI?`t?X6f590kE?
.3903#6Y)/M?&5.JcN.XJcM>A%flb9#nRpu/ilEs<a/m;@.n#\@FS]r?sd2B;bKD6.3903#6Y)/^Aric
JcLB&JcM5>%flb9#nRpu/ilEs<a/m;@/45_@F8Ko?sd2B;bKD6.3903#6Y)/_>o/fJcLB&JcM,;%flb9
#nRpu/ilEs<a/m;@/OGb@Er9l?sd2B;bKD6.3903#6Y)/`;kJiJcLB&JcM#8&HMt;#nRpu/ilEs<a/m;
?t!Jq@EW'i?sd2B;bKD6.3903#6Y)/a8gelJcLB&JcLo5%KQY8#nRpu/ilEs<a/m;!+:FfaC,Te?X6f5
90kEa*Y]"f"9JW&!.k3&!.k3&!.k4*!"T)4"UP_W,;)#G:KC\+?XUBPP@5#1?X6f590kEa*Y]"f"9JT(
JcLB&JcLB&JcOF'%flb9#nRpu/ilEs<a/m;@(Tj/@1?UO?!1*!5rC)4'FY3L!<N:T!.k3&!.k3&!7_&[
!<WK3&/ZWE3^lhF>@(ZE^1!"0$=I4H=]7sZ2(9R\":PM<!We&VJcLB&JcLB&dJsdY!sJuB(aCXo78Hrg
?=.*V@>\Iu?sd2B;bKD6#:U].$jQn:!K$l/!.k3X!.k3A!"T)4"UP_W,;)#G:KC\+?XWS9Jmm/;%q&aM
=]7sZ2(9R\$jQn:!P\Vd!.k3&!.k3>!"T)4"UP_W,;)#G:KC\+?XW\<Jmm&8%q&aM=]7sZ2(9R\$jQn:
!Q"hg!.k3&!.k3;!"T)4"UP_W,;)#G:KC\+?XWe?Jmlr5%q&aM=]7sZ2(9R\$jQn:!Q>%j!.k3&!.k38
!"f56"UP_W,;)#G:KC\+?XR;NJmli2%q&aM=]7sZ2(9R\$jQn:!QY7m!.k3&!.k35!"K#3"UP_W,;)#G
:KC\+?N=Jd@E;jf?sd2B;bKD6.3903#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuB(aCXo78Hrg?=.*M@?Y+2
?sd2B;bKD6.3903#6Y)/!.k3&!.k3&!.k4'!"T)4"UP_W,;)#G:KC\+?XUKSOC8T+?X6f590kEa*Y]"f
"9AQ)KE-T(JcLB&JcO=$%flb9#nRpu/ilEs<a/m;@(p'/@1$CL?!1*!5rC)4'EegL"9JUZ!.k3&!.k3&
!7CiX!<WK3&/ZWE3^lhF>@(ZE_-r40#@LnE=]7sZ2$YQO'FY3L!We/YJcLB&ZiG[XSH'0$!sJuB(aCXo
78Hrg?=.+6@=hq;@1QaQ?!1*!5rC)4'FY3L!Wg%9JcLB&JcLB&RK*j!!sJuB(aCXo78Hrg?=.+9@=hq8
@1QaQ?!1*!5rC)4'FY3L!Wg.<JcLB&JcLB&QN.Ns!sJuB(aCXo78Hrg?=.+<@=hq5@1QaQ?!1*!5rC)4
'FY3L!Wg7?JcLB&JcLB&PQ29r!sJuB(aCXo78Hrg?=.)K@=hq2@1QaQ?!1*!5rC)4'FY3L!Wg@BJcLB&
JcLB&OT5jl!sJuB(aCXo78Hrg?=*\?K42i0%q&aM=]7sZ2(9R\$jQn:!W<"M!.k3&!.k3&!8@Ja!<WK3
&/ZWE3^lhF>@(ZE\7(S0&7AjN=]7sZ2(9R\$jQn:!<@]OJcLB&JcLB&fDlE_!sJuB(aCXo78Hrg?=.*P
@?=n,?sd2B;bKD6.3903#6Y&/!JCH)!.k3&!.k4$!"T)4"UP_W,;)#G:KC\+?XUTVNF<0%?X6f590kEa
*Y\_c#6Y)/LB)o+JcLB&JcO4!%flb9#nRpu/ilEs<a/m;@)69/@0^1I?!1*!5rAlr*Y]"f"9JU]!.k3&
!42`X!1a*#!<WK3&/ZWE3^lhF>@(ZEp0iP]e6rkq?X6f590kEa*Y]"f"9JV=!.k3&!.k3&!1Elu!<WK3
&/ZWE3^lhF>@(ZEq-ek`d:!Pn?X6f590kEa*Y]"f"9JV@!.k3&!.k3&!1*Zr!<WK3&/ZWE3^lhF>@(ZE
r*b1cc=%5k?X6f590kEa*Y]"f"9JVC!.k3&!.k3&!0dHq!<WK3&/ZWE3^lhF>@(ZE@:=arb@(oh?X6f5
90kEa*Y]"f"9JVF!.k3&!.k3&!0I6k!<WK3&/ZWE3^lhF>@(Y:@"Vn/@1QaQ?!1*!5rC)4'FY3L!Wi6"
JcLB&JcLB&JcOO*%flb9#nRpu/ilEs<a/m;@(9X/@1ZgR?!1*!5rC)4'FY3L!W`:Q!.k3&!.k3&!8%8^
!<WK3&/ZWE3^lhF>@(ZE]4$e0%:EOK=]7sZ2(9R\$jQn9!WdrSJcLB&JcLB&eGp*\!sJuB(aCXo78Hrg
?=.*S@?"\&?sd2B;bKD6.390+$jQn:!J^Z,!.k3&!.k4!!"T)4"UP_W,;)#G:KC\+?XU]YMI?`t?X6f5
90kE?.3903#6Y)/M?&5.JcN.XJcM>A%flb9#nRpu/ilEs<a/m;@.n#\@FS]r?sd2B;bKD6.3903#6Y)/
^AricJcLB&JcM5>%flb9#nRpu/ilEs<a/m;@/45_@F8Ko?sd2B;bKD6.3903#6Y)/_>o/fJcLB&JcM,;
%flb9#nRpu/ilEs<a/m;@/OGb@Er9l?sd2B;bKD6.3903#6Y)/`;kJiJcLB&JcM#8&HMt;#nRpu/ilEs
<a/m;?t!Jq@EW'i?sd2B;bKD6.3903#6Y)/a8gelJcLB&JcLo5%KQY8#nRpu/ilEs<a/m;!+:FfaC,Te
?X6f590kEa*Y]"f"9JW&!.k3&!.k3&!.k4*!"T)4"UP_W,;)#G:KC\+?XUBPP@5#1?X6f590kEa*Y]"f
"9JT(JcLB&JcLB&JcOF'%flb9#nRpu/ilEs<a/m;@(Tj/@1?UO?!1*!5rC)4'FY3L!<N:T!.k3&!.k3&
!7_&[!<WK3&/ZWE3^lhF>@(ZE^1!"0$=I4H=]7sZ2(9R\":PM<!We&VJcLB&JcLB&dJsdY!sJuB(aCXo
78Hrg?=.*V@>\Iu?sd2B;bKD6#:U].$jQn:!K$l/!.k3X!.k3A!"T)4"UP_W,;)#G:KC\+?XWS9Jmm/;
%q&aM=]7sZ2(9R\$jQn:!P\Vd!.k3&!.k3>!"T)4"UP_W,;)#G:KC\+?XW\<Jmm&8%q&aM=]7sZ2(9R\
$jQn:!Q"hg!.k3&!.k3;!"T)4"UP_W,;)#G:KC\+?XWe?Jmlr5%q&aM=]7sZ2(9R\$jQn:!Q>%j!.k3&
!.k38!"f56"UP_W,;)#G:KC\+?XR;NJmli2%q&aM=]7sZ2(9R\$jQn:!QY7m!.k3&!.k35!"K#3"UP_W
,;)#G:KC\+?N=Jd@E;jf?sd2B;bKD6.3903#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuB(aCXo78Hrg?=.*M
@?Y+2?sd2B;bKD6.3903#6Y)/!.k3&!.k3&!.k4'!"T)4"UP_W,;)#G:KC\+?XUKSOC8T+?X6f590kEa
*Y]"f"9AQ)KE-T(JcLB&JcO=$%flb9#nRpu/ilEs<a/m;@(p'/@1$CL?!1*!5rC)4'EegL"9JUZ!.k3&
!.k3&!7CiX!<WK3&/ZWE3^lhF>@(ZE_-r40#@LnE=]7sZ2$YQO'FY3L!We/YJcLB&ZiG[XSH'0$!sJuB
(aCXo78Hrg?=.+6@=hq;@1QaQ?!1*!5rC)4'FY3L!Wg%9JcLB&JcLB&RK*j!!sJuB(aCXo78Hrg?=.+9
@=hq8@1QaQ?!1*!5rC)4'FY3L!Wg.<JcLB&JcLB&QN.Ns!sJuB(aCXo78Hrg?=.+<@=hq5@1QaQ?!1*!
5rC)4'FY3L!Wg7?JcLB&JcLB&PQ29r!sJuB(aCXo78Hrg?=.)K@=hq2@1QaQ?!1*!5rC)4'FY3L!Wg@B
JcLB&JcLB&OT5jl!sJuB(aCXo78Hrg?=*\?K42i0%q&aM=]7sZ2(9R\$jQn:!W<"M!.k3&!.k3&!8@Ja
!<WK3&/ZWE3^lhF>@(ZE\7(S0&7AjN=]7sZ2(9R\$jQn:!<@]OJcLB&JcLB&fDlE_!sJuB(aCXo78Hrg
?=.*P@?=n,?sd2B;bKD6.3903#6Y&/!JCH)!.k3&!.k4$!"T)4"UP_W,;)#G:KC\+?XUTVNF<0%?X6f5
90kEa*Y\_c#6Y)/LB)o+JcLB&JcO4!%flb9#nRpu/ilEs<a/m;@)69/@0^1I?!1*!5rAlr*Y]"f"9JU]
!.k3&!42`X!1a*#!<WK3&/ZWE3^lhF>@(ZEp0iP]e6rkq?X6f590kEa*Y]"f"9JV=!.k3&!.k3&!1Elu
!<WK3&/ZWE3^lhF>@(ZEq-ek`d:!Pn?X6f590kEa*Y]"f"9JV@!.k3&!.k3&!1*Zr!<WK3&/ZWE3^lhF
>@(ZEr*b1cc=%5k?X6f590kEa*Y]"f"9JVC!.k3&!.k3&!0dHq!<WK3&/ZWE3^lhF>@(ZE@:=arb@(oh
?X6f590kEa*Y]"f"9JVF!.k3&!.k3&!0I6k!<WK3&/ZWE3^lhF>@(Y:@"Vn/@1QaQ?!1*!5rC)4'FY3L
!Wi6"JcLB&JcLB&JcOO*%flb9#nRpu/ilEs<a/m;@(9X/@1ZgR?!1*!5rC)4'FY3L!W`:Q!.k3&!.k3&
!8%8^!<WK3&/ZWE3^lhF>@(ZE]4$e0%:EOK=]7sZ2(9R\$jQn9!WdrSJcLB&JcLB&eGp*\!sJuB(aCXo
78Hrg?=.*S@?"\&?sd2B;bKD6.390+$jQn:!J^Z,!.k3&!.k4!!"T)4"UP_W,;)#G:KC\+?XU]YMI?`t
?X6f590kE?.3903#6Y)/M?&5.JcN.XJcM>A%flb9#nRpu/ilEs<a/m;@.n#\@FS]r?sd2B;bKD6.3903
#6Y)/^AricJcLB&JcM5>%flb9#nRpu/ilEs<a/m;@/45_@F8Ko?sd2B;bKD6.3903#6Y)/_>o/fJcLB&
JcM,;%flb9#nRpu/ilEs<a/m;@/OGb@Er9l?sd2B;bKD6.3903#6Y)/`;kJiJcLB&JcM#8&HMt;#nRpu
/ilEs<a/m;?t!Jq@EW'i?sd2B;bKD6.3903#6Y)/a8gelJcLB&JcLo5%KQY8#nRpu/ilEs<a/m;!+:Ff
aC,Te?X6f590kEa*Y]"f"9JW&!.k3&!.k3&!.k4*!"T)4"UP_W,;)#G:KC\+?XUBPP@5#1?X6f590kEa
*Y]"f"9JT(JcLB&JcLB&JcOF'%flb9#nRpu/ilEs<a/m;@(Tj/@1?UO?!1*!5rC)4'FY3L!<N:T!.k3&
!.k3&!7_&[!<WK3&/ZWE3^lhF>@(ZE^1!"0$=I4H=]7sZ2(9R\":PM<!We&VJcLB&JcLB&dJsdY!sJuB
(aCXo78Hrg?=.*V@>\Iu?sd2B;bKD6#:U].$jQn:!K$l/!.k3X!.k3A!"T)4"UP_W,;)#G:KC\+?XWS9
Jmm/;%q&aM=]7sZ2(9R\$jQn:!P\Vd!.k3&!.k3>!"T)4"UP_W,;)#G:KC\+?XW\<Jmm&8%q&aM=]7sZ
2(9R\$jQn:!Q"hg!.k3&!.k3;!"T)4"UP_W,;)#G:KC\+?XWe?Jmlr5%q&aM=]7sZ2(9R\$jQn:!Q>%j
!.k3&!.k38!"f56"UP_W,;)#G:KC\+?XR;NJmli2%q&aM=]7sZ2(9R\$jQn:!QY7m!.k3&!.k35!"K#3
"UP_W,;)#G:KC\+?N=Jd@E;jf?sd2B;bKD6.3903#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuB(aCXo78Hrg
?=.*M@?Y+2?sd2B;bKD6.3903#6Y)/!.k3&!.k3&!.k4'!"T)4"UP_W,;)#G:KC\+?XUKSOC8T+?X6f5
90kEa*Y]"f"9AQ)KE-T(JcLB&JcO=$%flb9#nRpu/ilEs<a/m;@(p'/@1$CL?!1*!5rC)4'EegL"9JUZ
!.k3&!.k3&!7CiX!<WK3&/ZWE3^lhF>@(ZE_-r40#@LnE=]7sZ2$YQO'FY3L!We/YJcLB&ZiG[XSH'0$
!sJuB(aCXo78Hrg?=.+6@=hq;@1QaQ?!1*!5rC)4'FY3L!Wg%9JcLB&JcLB&RK*j!!sJuB(aCXo78Hrg
?=.+9@=hq8@1QaQ?!1*!5rC)4'FY3L!Wg.<JcLB&JcLB&QN.Ns!sJuB(aCXo78Hrg?=.+<@=hq5@1QaQ
?!1*!5rC)4'FY3L!Wg7?JcLB&JcLB&PQ29r!sJuB(aCXo78Hrg?=.)K@=hq2@1QaQ?!1*!5rC)4'FY3L
!Wg@BJcLB&JcLB&OT5jl!sJuB(EtFk6r$`d?=*\?K42i0%q&aM=AhaV1aj@X$jQn:!W<"M!.k3&!.k3&
!8@Ja!<WK3%i6E@3($G@>$YKC\7(S0&7AjM=Ah^T1FF1V$O6e9!<@]OJcLB&JcLB&fDlE_!sJr?(*P1e
6;1?]?!^pN@?=n,?X?r<;+Nl+-6*X+"p=r.!JCH)!.k3&!.k4$!"]/4":,JP+"9'48lAbr?=.*T@?+b(
?sd2C<DQ(H0I7VL":>>8!We&VJcLB&JcLB&dJsj[!X&`:'-/GU4\&:K>$PBA@)HE3@0p=K?<gT29LCfl
#9jur$3^M4!K$l/!.k3X!.k3A!##A7!sT,F)C$jp6VLBZ>$YKB?srh>Jmm;?'4>3T?<gW5:Im]-.N]E9
#R(;2!P\Vd!.k3&!.k3>!"o;5!sJuA(EY+`5"A@H='Am9?iFI5@=hq?@K'XI?XI)D=]SBm6THhH)\WVb
"9JV?!.k3&!.k3&!1!Tu!<NB0$kjR*/iQ$d:/b4t>?tQB!+5_5L1/\Bra6FI?X?uA=B/3k6p*7T+;YRr
"p4o-_uPAhJcLB&JcLu7&-2h7"ptkV*[`X$5Y"LF<EKE.>[:ZC?i=Ak@Fnrd?km$T?<g];=&Vme6p3@X
,8q4)#R(81`W1SjJcLB&JcLi3$ipD4#7M1]+"/g&5=GrP:Jt1p>$G6;?=.(<@$4sN@JjLM?XI,F>[(?4
<)H@\69@"T,TIO0$3gS6!W)kK!.k3&!.k3&!8.>k!<N?,#n7La+=Ad!4@)J1:Jt1o=^#'9?=$uGr*[]V
VIBF2ra-OL?!LT;=B8Bu9h@`;3AN*1*#9(n#6Y)/!WE(N!.k3&!.k3&!7_&j!<N?-#n7La*[N<k3'BSu
928>`<`iL/>[1Q@?=.(;@+&J^@JjO4?QEHZ?!LT;=BAL#:eXGL5WUbU-mBTF&.8^H!s&E&JcLB&JcLB&
JcO4!+oq]G"9o/A&Jc?0-S7,64[DM.9M\Pc<``F->?kH>?=$uGqdA,dWaYd4ra-^Q?<pf@>?Y-1<Duai
91M?64#ScB,Tdm<%grXH!s/H'K)gK'JcLB&JcO'r,67fH"9o,?%hoj$,:G-!2`j5k7S6BN;,^Ir=BSg3
>[:WA?N"7-@,tau@JXC2?iF@P?!LW=>$4p-<)QOf91VK;4ZP>Q.jZ;W((q)a#6b/2!WduTJcLB&ZiG[X
QiIj%!<N?,#7:nP'cA&:-S-r.3'9Gn7Lr'a:/Fhf<EE:*>$G6:?![G9rEoA.Tjdq/q-a/.ra$mV?!LT;
=]ng,<Duaj9hS#G69[Ii1+k"%+<212%h&aK"9S]+!P/8_!.k3&!.k38!"f54!WrQ0#R_+S'cA#8,q1E#
(c=<95=.e08k_uV;H$Rr='/U/>?b?;?![G9r*T2+Z!mT=qI'5.ra%'[?!LW=>$>'2=&r:!;,9q[8Ol07
4utVY0.SCp*uc"0&.JsO"U"l.!<Kh5JcLB&JcLB&O8o^j!<N<)"U>>A%M9Bk)]p+F-7LN$1cIHY5XRt2
8k_uU;,U@n<``C+=^#$6>[786rEfA.nmK[Mo3_Q+qd9;.r`q'[>[(B8=]ea+<E)mp:eseY8Ol085<Lqa
1G:7,,Tn*F((q,d$4$h=!s/K(]`<WaJcLB&JcL]/#QXr-!sAc4#RVpg%h]To)]p7M.4d,-2)mZ\5XIk/
84lQN:Jaqf<)lt#='/U/>$G51>l@t+?MRsK@/++,?N+70>VTGe>$>'3=BAO(<Dudm:ej_X8Ou9;5sIIl
2`!0?.OQJa*?#_.&Io3V#R1D6!WiB'^AricJcLB&JcLQ+rW*$$"#0o^"pbPE%M09g(`OM=,:4ij0/>@C
3BTJj6:=:68P;`P:Jand;cHat<``C*=]np3r`fA,qd'#(e6i#XrETD/rETA,r`V*\=]ea,<`N.!;c6Ih
:/+DS8Ol3:5sILo3&WQH/h8=r+s.dB(DIGl%1<II"p>#0!W`>m!.k3&!.k3&!.k3s!<*!X!WiH,"U>;?
$k<g]'GhW,*[)dU.4[#)1Gq*O4$>eo6UXC68P2WM:/=\`;GpFm<)lt"='&L+r`T5(r*0&'!+"Acqcs&'
rEB5(r`D*\=&r=$<)cdo;,C%`9h\2O84Q*:69m^s3]K#S0eY(--m^&[*?,h2'+k`a$OI(C"U"o/!W`>n
!.k3&!.k3&!.k3n!<*!\!WiH,"U52;$4@:R&JGlq)&jV>+seTc.kNG11c@<R4$>bm5sn%07n?3D92&&T
:JXea;GpFl<)cjtr`9#"r`K2&r)r,bqcWl"r`B)"r`(pW<)Z^n;,L.c:/4MW91hcG7R]^35sIOq3]T)U
1GLO6.OZVg+Wh^C(`!eu&.T*U#m^_="9S`-rW2WkJcLB&JcLB&JcN^hrW,1a!WrQ."U55=$4I@S&J>cn
(`FA8+<i'X-n6c"0/57>2E3]Y4?Yno5sdq,7Rfm=8P2WK9MJ5V:/=Y^:f.3ir_i\nqc)o^r)EVnr_i_m
4]"sN:JOYZ9MA)O8kDQD7R]^46:!h"4Zb\b2`3EI0J4q-.46Dd+Wh^D)&F#$&eGN]$OR.E"pG,3!s/Q'
!VHGE!.k3&!.k3&!5AO4!B:,^!s8Z0"pYD?$4@:Q&.oQi()Ro.*?H=I,UFfe.P*/)0JYFA2E*TU4$5Yi
5<qM#6:4./77K`L7n?0B8cD?]9E%W]:%V3X:&Rcb90c*A8P)HD7n6$<779L16:!k$5!;"i3]T/X2)I'C
0J4q-.OZVi,9\-M*#]\2'bh8l%h9!U$4$k@"U,#2!s/Q'!VHGE!.k3&!42`X!/CRQ!<<0`!WiH,"9eu7
#RC_E$k3[W&J>`l()Ro.*$$+D+sSB\-RgMq/1iM/0etOA2)[BQ3B9,^4?Pbj5!M7s5lO(K6N':>7/]LP
66/?X5X7Ou5!D+m4?GVc3B/rU2Dm<I1,(@6/M&D$+Xe]a,U+BS*ZZ1<(`*o$'+kcd%L`^P#m^b?"U,#2
!s/Q%!N?'N!.k3&!.k3&!!!#s!WE-X!s8Z0"U52:#RLhG$k3[W&/#Wj'c%T')B0Y:+!;^N,:"Q^-R^Dn
.kE8(/h\n40etL?1c51hs#0g7rAa@.rAaa7)`BT32)I-G1GU[>0J>(3/M&D&.Ocbn-7'l\+W_aJ*ZZ4=
)&O/*'b_2l&.]6[$k!CK#R:P<"U"r1"9&B#!N6!M!.k3&!.k3&!;QWm!WE-T!s8Z/"U,)7#7(SA$4@7N
%1Wm[&J>`k'c%T&(`=52*$$(B+!;^N,9nH[,pjue-n,'Ds!mstr@ILkr@Ipur[J[4.4?Sl-RL/d,U=TY
+X%sM*ZZ4?)]B\6(`*r&'GD)l&J,H_%1EUO$4-tC#6k>8"9\f/r;uouVZ;;KJcLB&JcLB&nc8OfrW<'$
,m4>S"U5/9#7(SA$47.L$k3[V%hK<b&ebom'bqK#(Dn#-)B'Ro*<.&Y*r[8[+Sm8Z,5NJ]+T<J_*r[/j
*#on:)B'J1(`*r''bh>q'bV,k&.f?^%1N^R$OR1H#RCY>"pG20"TJT&!rN(r!.k3&!.k3&!.k49!;cfq
!rW6$"TAT)#6+r.#lb52$NCM6%0$e:%f[(>&H3:A')iRD'`AdF(@N(;(B,'I'`SjG&dT']&.f?_%LrpV
%1EXQ$OR4I#m^eA#Q=r-"o\Z("8r;t!S7='!.k3&!.k3&!3cJ!!W3#t"9&H&"o\`*#Q>#.$2t;1$iLM4
%JgS*&,Qk7%K-_6$iUM5$2t50#Q=r,"oST&"8i5s!Rq+$!.k3&!.k3&!2]bk!W)rr"8i<#"oJT)#Q+i&
#k//s#l4f(#5eZ&"T/B!!r)fD!.k3&!.k3&!.k3@!;-Bg!rE*!"8)fb"n`#o"8Drk!R(Oq!.k3&!.k3&
!07-P!WE,I!q661!.k3&!.k3X!.k3&!6bGd!UTl=!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3X!.Y~>

%%EndBinary
grestore
np
123.616 178.411 mo
110.652 178.411 li
115.415 178.239 119.819 177.85 123.616 177.296 cv
123.616 178.411 li
99.4495 178.411 mo
86.3072 178.411 li
86.3072 177.27 li
90.1449 177.838 94.6116 178.236 99.4495 178.411 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[37.9636 0 0 1.63636 -31.2763 114.402 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 116 
/H 5 
/M[116 0 0 -5 0 5 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&UB(:"r*T2+nmT=Bp0df*s'F4UJcLB&cN*uLs'5P/rEfA.nmKsUq-ii%qd9;.r`oS1>[+0-JcLB&
qZ$n&='&L,>$>-7r`oD-r*K2+a'e[Lr*KA.r`f_5>?Y35=]ea+quD<KJcM_L%o6#!;H$Op<`W:(=BSd1
>5hb*>l.h&?N4B`?hn%+?2\%.>Q.e7=]nj.=&r=$<)Z[l:s]2o!.k4#!#7sn8P2WM:/=\`;GpFm<)lt"
='&L+r`T5(r*0&'gKj_^!*oG+rEB5(r`Be7=&r=$<)cdo;,C%`9h\2O84S1~>

%%EndBinary
grestore
np
grestore
gsave
72.8302 131.92 mo
72.8302 135.596 87.2559 138.576 105.051 138.576 cv
122.846 138.576 137.271 135.596 137.271 131.92 cv
137.271 171.855 li
137.271 175.531 122.846 178.511 105.051 178.511 cv
87.2557 178.511 72.8302 175.531 72.8302 171.855 cv
72.8302 131.92 li
eclp
-117.256 -128.571 mo
602.743 -128.571 li
602.743 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 72.8303 125.264 ]ct
/0 
<<
/ShadingType 2 
/BBox [-2.41411e+06 -3.22371e+06 6.7299e+06 3.63429e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!/!!!!0!!!!0!!!!1!!!!1!!!!2!!!!2!!!!3!!!!4!!!!4!!!!5!!!!6!!!!7!!!!7!!!!8!!!!9
!!!!9!!!!:!!!!;!!!!;!!!!<!!!!=!!!!>!!!!>!!!!?!!!!@!!!!@!!!!A!!!!B!!!!C!!!!C!!!!D
!!!!E!!!!E!!!!F!!!!G!!!!H!!!!H!!!!I!!!!J!!!!J!!!!K!!!!L!!!!M!!!!N!!!!O!!!!P!!!!Q
!!!!Q!!!!R!!!!S!!!!T!!!!U!!!!V!!!!W!!!!X!!!!Y!!!!Z!!!!Z!!!!\!!!!]!!!!^!!!!_!!!!`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 72.8303 125.264 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~%1WjX%LrsY%M''\%hB0]%hK9`&.fBa&.oKd&J>]h&eYfi&ebol',2,p'GV>t'bqGu'c%Q#()Ic'(Ddl(
(Ddo*(`4,.)&X;0)&X>2)B'P6)]Kb:*#oq<*#ot>*??1B*Zc@D*ZcCF+!2UJ+<VgN+X&!P+X&$R+sJ6V
,9nEX,9nEY,U=W],paia-71&d-71&e-RU8i-n$Jl-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t3
0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3&ilW3B9,]4$,Mc4?P_g4Ztqk5!D.o
~>
]
>>
409200 0 409200 676237 [-2.41411e+06 -3.22371e+06 6.7299e+06 3.63429e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
gsave
72.8302 131.92 mo
72.8302 128.244 87.2559 125.264 105.051 125.264 cv
122.846 125.264 137.271 128.244 137.271 131.92 cv
137.271 135.596 122.846 138.576 105.051 138.576 cv
87.2559 138.576 72.8302 135.596 72.8302 131.92 cv
eclp
-117.256 -128.571 mo
602.743 -128.571 li
602.743 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 72.8303 125.264 ]ct
/1 
<<
/ShadingType 2 
/BBox [-2.41411e+06 -3.22371e+06 6.7299e+06 3.63429e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!(!!!!(!!!!)!!!!)!!!!*!!!!*!!!!*!!!!+!!!!+!!!!,!!!!,!!!!-!!!!-!!!!-!!!!.!!!!.
!!!!/!!!!/!!!!/!!!!0!!!!0!!!!1!!!!1!!!!1!!!!1!!!!1!!!!2!!!!2!!!!3!!!!3!!!!3!!!!4
!!!!4!!!!5!!!!5!!!!6!!!!6!!!!6!!!!7!!!!7!!!!8!!!!8!!!!9!!!!9!!!!:!!!!:!!!!;!!!!;
!!!!<!!!!<!!!!=!!!!=!!!!>!!!!?!!!!?!!!!@!!!!@!!!!A!!!!A!!!!B!!!!B!!!!C!!!!C!!!!D
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 72.8303 125.264 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~"pP89"pYA<#6tJ=#7(S@#RC\A#RC\A#RLeD#mgnE#mq"H$47+I$4@4L$O[=M$O[=M$OdFP$k*OQ$k3XT
%1NaU%1NaU%1NdW%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fEc&J5Te&J5Te&J5Wg&eYfi
&eYfj',)#m',)#n'GM5q'GM5q'GM5r'bqGu'bqH!()@Z$()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X;1
)B'M4)B'M4)]K_8)]K_8*#oq<*??.@*??.@*Zc@D*Zc@D+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+sJ3T
~>
]
>>
409200 0 409200 676237 [-2.41411e+06 -3.22371e+06 6.7299e+06 3.63429e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
.75 lw
137.271 131.92 mo
137.271 135.596 122.846 138.576 105.051 138.576 cv
87.2558 138.576 72.8302 135.596 72.8302 131.92 cv
72.8302 128.244 87.2558 125.264 105.051 125.264 cv
122.846 125.264 137.271 128.244 137.271 131.92 cv
cp
137.271 131.92 mo
137.271 171.855 li
137.271 175.531 122.846 178.511 105.051 178.511 cv
87.2558 178.511 72.8302 175.531 72.8302 171.855 cv
72.8302 131.92 li
@
%ADOBeginSubsetFont: VRKQMX+TimesNewRomanPS-BoldItalicMT Initial
ct_T42Dict begin
-0.547 -0.305 1.398 1.031
 256 array 0 1 255 {1 index exch /.notdef put} for  /VRKQMX+TimesNewRomanPS-BoldItalicMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007a26670
676d0000000000000860000005cd676c7966000000000000193800001054
686561640000000000000e3000000036686865610000000000000e680000
0024686d74780000000000000e8c0000002c6c6f63610000000000000eb8
000000186d6178700000000000000ed0000000206e616d65000000000000
0ef000000038707265700000000000000f2800000a0f6764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000fc000000fc0000
000000000000002500f30120005f005500ea0032007400cf0055004b00af
013f000900f5010800260080001701540002001600b800d3005000f00023
ffbe00dd00f70035ffe9001102b6004900a901490158002e003b00860108
0023003f0039003a004e00e3013f003d010a000900710108feff004c0082
009c00c700d80015003a006d035105d800280028009f05b8005000640015
00da015b017cffc2ffd8fff40099ffff001d002d00d9011c01740446004e
007200be00dd09b50038004b006d009d0118001b003c005c0069007a00a8
00c60122fff2000d008600e3022b055200300047009100f4040104c9ffaf
ffc1ffd5002c003b003b003e004b006b009900a500b801c002210343ff8c
0041004b005f009a00a600be010a01dc031e0390ff6700250031005d006e
00b600c000d000d3010a015001bc0274027b02d7000900360048004c005c
006f00840093009500a600a800ac00b000b700bc00c00104013601370145
019403b6fd81fe3f00070019003a003b005b00b800c500e100f801160127
012c013401470149015d01bc03ed04740532053eff00ff970008000f005c
006d007000820089008b00a700c100f600f80129017aff72ff8800000000
0025003e0059006d007100720081008100bc00dd00de011401150150019c
01d6027e0404041cff7b002000390046004c004d005a0068006c00720080
008300a300ce00d100e200ed0107011f0126013f016a01e0035e03a303a7
03cc05d805f0fed8ff78ffaeffe1ffe70019002400410055005800710082
00860088009000b000bb00c200c400d000ed00f700f801150118011f012c
015e017c019801a201cc01d201fa022b026d02cf02cf02df0333039103e3
04ab04fc04fe058805e706bffed1ff4a000000010003000400170024003c
004d0056005c0067007700a800b000b800c300c600c800e900eb00f500f8
010a010c0127013501350139013f0149014d0197019801c701ee023d0250
0258026d026f029402b30300031a032a0361039603a104330440047904da
04e804fb057b058c05ab0761fe60fe99ff00ff13ff2fff47ffed00180031
003f004c006b00740078007c00840094009700b000b600b700d800da00e2
00e400e500eb00ee00ef00f600fa0106010c011101110114013b013e0145
0149014d015b0164016f0184019101b301b901d101e101e501ef02050206
02220236023b023e024102600276029a029a029d02c402ee03130327032b
0373038c03ba03c203d2040f0485051505320532054905610595069906a8
072707480762081008ccfd2afddefe23fe44fe67fe96feacff24ff41ff5c
ff61ff9effa3ffb7ffc2ffc5ffcaffddfff0000000000003000800100018
001c0023002b0030003e0046004b0052005e005e006e007a007b00830085
008a00910092009800a800af00b600cc00ce00cf00d200e700f100f200fa
01010108010b0112012601270127012e013601370138013b013e0140015b
016a017001740179018201840188018d0192019b01a001a001a001ab01b8
01bc01c001cc01da01dc01e001e0020102100214021d0229023002300243
02460269027a0284029502a302b402c102c202cf02dd02e102ec02f00310
033a03450388039903ad03bd03d403d503e303ea03f304260426046e04d1
04e00513054b057605a305b705c205f8063b065b06b806e80706071a0724
075007a907d407ff082700f6012600f100df000000000000000000000000
038402af02f301b80205017a04910491049e019f0425049e019f049e019f
027a005101ac02610319033b021c033b01ee01880278020a01ee033b029f
002400240261019e015e0171004401490284009902840099028400250041
00450298020501c9024904440188044400000000023005d30415035d0181
0023016e003504c9005b059604910025026202dd01d00434030a0319031e
03c1049e05e8035c00000282ffef040d03ce0209010c01f6025303a202df
02d0000a00d6008200000032010901a201af01770204027a019e02eb019b
01ec024e0326045b03ee03c3042600b703620031004f0027ffee01240096
036700d703750291032603260041004501d7007402ff02a50216029f017a
0100031c005000b7012b016800f9003101a8013a00a801cc00f301250202
0021007301c70603021b0142010501e1012403350272018c044301e50282
010f02fe01ee034a02c50210024e022a02a501cf005f00b1026603b20358
0115008e015d02a500d1fee201b0010b015a0395005900f70783031b008b
045d00a101440100009400b4febf03c600e803ce017303e6012e02220495
00390023033b01b8000003f00140015303b401a805ee061801c6007d00cd
00d1037c008500bd00ccfc47fcb1008402a7fccb046402ba0167032b0070
0136000001320068030c0155001bfe6fffc60249013102f1fe79feb4fcf2
ff4203adfc0efc61032a00c3009100a10077004c0002015e008400860023
005d004b010a01b80086ffc500a80072008800590028009901350015003d
0056007a00f801d600090007000f00e2001700bc016a00ed0274005b0136
000000ab0080005005a50090fe40013a004800db018b00b300480420040e
022b0457008c0082008200220000404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212110592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802df23701020b802df4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903bc03bc8a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592d00
00000001000000050ccda057a4135f0f3cf50819080000000000a31fbca4
00000000c5b1f9bdfb9ffd8c0b3508420003000900010000000000000001
00000721fe4500570aaafb9ffa460b350018000700000000000000000000
0000000b0639011c020000000400003004000008071dffbb04e3ffc305c7
006d0473ffd3063900140473001a040000270000003b003b00c101690298
0364042d04e5063f072f082a00010000000b00f2003c007d000500020010
002f00550000049602090004000200000001001200010000000000060023
0000464a504d52562b54696d65734e6577526f6d616e50532d426f6c6449
74616c69634d54000000ba005403ca03c9b2351f00411503c2003003c200
4003c200a003c200b003c20005008003c0009f03c000af03c000cf03c000
04ffc003c0b345453240b803c0b32b2e3240b803c0b2282932b9ffc003c0
b21a2632bd03c002c80027001fffc003beb2161b32b9ffc003bdb2424232
b9ffc003bdb2363832b9ffc003bdb32a2d32df410a03bd00ef03bd000203
bd03be0028001fffc003beb3282e32f0b803beb5019006900702b9ff8002
c8b2313340b802c8b31c333210411b02c8006002c8007002c80003000f02
c800af02c8000200b002c800e002c80002005f02c800a002c80002002f02
c8003f02c8004f02c840a8030100000340cd383b32404d383b32a41fb41f
c01fd01fe41f05501f641f741f841f04041f141f241f341f441f05e41ff4
1f02ab1fbb1fcb1f03cfcddbcd028bcd9bcdafcdbfcd04cdcdcd4ddb4d02
8b4d9b4dad4dbd4d044d4d377f047f05027f027f03020f0301cf03df03ef
03ff03048f039f03af03bf03044f035f036f037f03049f02af02bf02cf02
049f03af03bf03cf03045f036f037f038f03041f032f033f034f03047f41
1e03660001006f03660001005f03660001004f03660001003f0366000100
2f03660001001f03660001000f0366000100ff0366000100ef0366000103
66b221370f412402dd0001005f02dd009f02dd00df02dd0003002f02dd00
3f02dd006f02dd0003009f02c900df02c90002000f02c9001f02c9003f02
c9005f02c9000402dd02dd02c902c902c802c84014010001010009010200
080017170000001211084041110286019e003f000d013d003f000d011600
3f000d026f0083000d02170083000d0174b7830df3830d76830d410d0235
0024000d02180024000d02030024000d01610024000d01134017240da624
0d95240d82240d6f240d5b240d46240d22240d410d0249001e000d020e00
1e000d01c1001e000d01a3001e000d0178401d1e0df61e0df11e0de21e0d
dd1e0dce1e0d751e0d701e0d651e0d521e0dbb02140037000d01a0400b37
0dfb370d2d370d1d370db80215b40f440f0009bb02150044000d023cb24d
1d1fb8023ab24d1f1fb80237b24d2a1fbc0232004d0201001f022eb21f93
1f4109022c001f0125001f022b001f0156001f022ab21f931f410d022801
400079001f021f016d0156001f021e00330401001f021db233e41fb8021b
b233411fb80216b2212d1fb801c3b24d1e1fb801bfb24d931fb801beb24d
cd1fbc01bb004d0201001f01b7b21f671f410d01b601400089001f01b200
360401001f01b10036019a001f01b0b236bb1fb801afb236ab1f410901ad
016d0067001f01ac016d0072001f01a6b2212c1fb801a5b221351fb801a4
b2213b1fb801a2b2215e1fbc01a100350201001f017bb24d931fbc017900
4d0401001f0176b24dcd1f41150175001f0125001f01730140006c001f01
700036019a001f016f00360125001f016b00330401001f0169b233811f41
09016600210125001f0163003b0125001f0147b24d221f410d0143001f01
01001f013b003302ab001f013a00330101001f0139b233341fb80136b221
2e1fbc013300210401001f0132b23bab1fbc011f01400081001f0119b221
2d1fb80117b221471fb80111b235cd1fb80108b24d791fb80106b21fab1f
b80105b236721fb80100b721471ff51fe41ff4b90140080140131fef332c
1fee212e1fed214c1fe04dcd1fdf4db80101b21fdc1fb80125b51fdb1fcd
1fdab901400801b61fd936891fd621b80156b21fd53bb80156b21fcd4db8
0156b21fcc4dbb0101001f00ca0140b29e1fc9b9016d0156b21fc733b808
01400b1fc2333b1fc133381fbe21b80125b21fbb3bbb0801001f00b3016d
b29e1fa7b80140b76c1fa321cd1fa235b8019a400f1fa13bab1f99215e1f
8c35e41f841fb80401b61f8121381f7f21b80125b61f7b334c1f7935b801
9ab61f714d271f6e3bb80101400f1f664d4a1f6321891f6033521f5a3bbb
019a001f0058016db2721f57b9016d0801b51f55212e1f4fb80140b76c1f
4c369e1f4b35b80401b21f493bb80201400b1f483bcd1f45212a1f433bb8
012540161f424d521f414dcd1f4033891f39366c1f2e21301f2cb80140b2
791f2bb901400401b61f2833e41f2735b8019ab21f5537bc0257000701d6
00070187402e07de07a8079e0756073e0734073007290726072507200714
08120810080e080c080a080808060804080208000814b8ffe0402c000001
001406100000010006040000010004100000010010020000010002000000
01000002010802004a009fbd028600af028600bf02860003b013034b024b
5342b0372b4bb807ff52b0382b4bb007505b58b101018e59014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b544218b0382bb002
88b801005458b801ffb101018e851bb0124358b900010139858d1bb90001
013c858d595901b0372b730016763f183f123e113946443e113946443e11
3946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b
2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b032
4b5358b0ff1d594bb02753205c58b9028802864544b90287028645445958
b901240288455258b9028801244459594bb03053205c58b9016d02884544
b90288028845445958b90162016d455258b9016d01624459594bb0435320
5c58b9001f02874544b9004d028745445958b9025e001f455258b9001f02
5e4459594bb8012553205c58b9003602884544b9003a028845445958b908
970036455258b9003608974459594bb8040153205c58b90140003a4544b1
3a3a45445958b91ee00140455258b901401ee04459594bb00c53205c58b1
3b3b4544b1333b45445958b1123b455258b13b124459594bb03153205c58
b13b3b4544b1213b45445958b1503b455258b13b504459594bb03953205c
58b13b3b4544b1353b45445958b15d3b455258b13b5d4459592b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b45695342014b5058b108004259435c58b108004259161070
3eb0124358b911a63d851bba011b03d9000b2b59b00a2342b00b2342003f
3f182b103c012f4bb00d5458b90001ffb038594bb00c5458b90001ffb038
59060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59
b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e23
42b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011
234200184569444569441845694473737373742b45447474757575757575
757500757575757474747573732b45186944747445186944747474747575
752b2b0000454445447373737475002b2b73752b2b732b2b2b2b2b2b2b2b
2b75732b2b0000>
[4181 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 722 4 <0001ffbb000007cb054c002901ccb319140129b8ffd840920f392b022f0d
2f103c023c073c0d3c103c143315351638254d0248074b0d4b0f4f104a14
4615492567006b0275007b027715702b8b02a902b5001c19130116001b0d
1915191604090109020b0d0916040307041d030f13101d0f1f24201d1f0e
080d1d0e1e181d1d1e252418171413080708281f28282925180001011f16
171416010216170708081f131414131314020101b80366400e1514141440
140c3f151514252424b80366400e1817141740140c3f181817011f28b803
9d40220003020200021f1e1e161615150f0f0e0818132a281413171f182f
184f1803181008bb022c00400013ffc0b6120b3f1f130113b80238b50109
15472001b801b1b72f163f164f160316b8033040092a1317181713182a0a
b80227b19b182b2b103c3c2b2b1910f65d18ed1a19ed2b10f45d012b011a
18ed2b105d3c103c2b10c0c0003f3c103c103c103c103c3f3c103c10ed11
39870e2e012b2b0e7d10c487042e012b182b057d10c4870e2e182b0e7d10
c487082e182b057d10c401111239392b11121739180010ed0110c00010ed
0110c00010ed0110c00010ed0110c00010ed0110c0b10602435458400b0b
01ab14ad17bb14bd1705005d593130015d5d5d5d012b005d011301210722
060703061514161707213732363713012303010615141617072137363736
370126262337030764028501db0c626624fa183c5809fd5b0c6d6824fffc
f8297afefd1045530afe4009512b4c2201252a434f0c054cfc5c03a42554
7cfc9c5228252d022525537b036ffb9e0478fc7b3725323d032525031f38
7403ea2e1c25>VRKQMX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb010f000600070272b200
0504b8010fb403000a0704b8010fb5010019080605bf010f000200030144
00090120012b00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>VRKQMX+TimesNewRomanPS-BoldItalicMT AddT42Char 
VRKQMX+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/M 4 def
end
VRKQMX+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 77 /M put
pop
end
%ADOEndSubsetFont
/PMNKFX+TimesNewRomanPS-BoldItalicMT /VRKQMX+TimesNewRomanPS-BoldItalicMT findfont ct_VMDictPut/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [77{/.notdef}rp /M 178{/.notdef}rp]PMNKFX+TimesNewRomanPS-BoldItalicMT nfPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [20 0 0 -20 0 0 ]msf94.0303 163.216 mo(M)sh%ADOBeginSubsetFont: FJGRMX+TimesNewRomanPS-BoldMT Initial
ct_T42Dict begin
-0.555 -0.305 2 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /FJGRMX+TimesNewRomanPS-BoldMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000008266670
676d00000000000008e4000005f2676c796600000000000022e400000286
686561640000000000000ed800000036686865610000000000000f100000
0024686d74780000000000000f34000000106c6f63610000000000000f44
0000000a6d6178700000000000000f50000000206e616d65000000000000
0f7000000030707265700000000000000fa0000013416764697200000000
0000000000000000058e001f054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe0031300000124000001240000
00000000000000250084002400e8009600bf005d00cb02030045012e0058
00040118001900020139004b011000170005010a00280023004b00500015
004a00e5010d00af003100ea014600810125004f009c0022004e00160041
009100a00147ffe9008100d3016900ab001700a801400027004c0148ffdf
00510050ffb7012e0000003b0097009a010e001f004c010a0123ffde0022
0073008700ba00d600ff005a009805a0ffe900500052006effb7005c00d1
015a015bff1c0049006e007e009800a100bd00e4018801c00405ff600035
006200720107011301280382ffa8003805d809b5ffc4ffd00010006e00a1
00ba00ec022b0446ffee004000e80401ff680003001300330033006e00a2
00b600dc011801350343000e0034005c005d007c00af0328003b00480089
009c00ba017b01af030effa4001700370063007f00e0017801c0022105d8
05f0ff7a0012002700340052008a00a400c100c300eb011801460154036d
fe3fff4e00010008002b0045006e0084008600ae00af00c200c200c4010f
01210149017b01c101de01e1036e03e6006300a700ed00f600f801280169
017e023f02820532fd81ffb5002600350040004500490057006c00ac0126
0140015b017b019c0277027e027f03b603dc042804efff38ffc30006002f
0040008200aa00b600ce00d300d700e50146014d01d6027e03b30586ff7b
0012002f0068007f008400a500b900f501050109010c0114012001330137
0178017b01c001e1021d02230258036203af058cff79ff8d00210024005d
00650068006a0083008500b700cf00e200eb00ed011a0120012f0137013f
0150018d018f01c402cf0357035c03960440049604ab04c204fc051105c2
fed1fee00013002100240030004d004d005d0066007a007c00b800b800c3
00da0103011b011e012f013d014a0150015f0166017c0190019501a301a6
01b601c701d001e901ef01f90218028c029402bb02c502cf02d0031d032a
0344039f03cc042104da04fb0761fd1dfebffeefff0bff2bff33ff90ff9c
ffdbffed00010008001c0025003f0043005a006b0080008400900095009d
00a700b400cd00d500d600df00df00df00e400f000f600fb010601130119
011b012201230127012c013f015701580177018a019301a401c601e101e4
01fc0200020c02220222022a0236024a025c028202ec02fc030a03230341
0378039703d203fa04790532053205ab05b505f006e4072508ccfc9bfdde
fe00fe69fe96fe9bff3500030006000e00130019003400420048004a0057
006400710071007200760077007a007a0083009c00af00af00b200bb00c8
00cc00cf00cf00db00dc00df00e400e400e400e900eb00f400fd00fe0102
0105010501080108011b01220123013001370143015b0160016501780178
01780178017b0182018901980198019b019e01a101a601d101d201d301df
01e301f502000200022d02410247024a0250025b025d025d025f02630281
028b02b402b402ce02d602db02e202fa03100311031f0327034503670388
038a03b003b403d403d5042604410448046b04c704d1053205480549055f
0563058b05a105a305c205ca05e405ff069306a206b806e8070a07360750
0754078907a907bb07dc07ff08270120014d011b01290000000000000000
00000093015b042f029001ff02b800db00be027403cb029401ab00000000
0000000000000000058a038a0364005f02b803bd029d7c9003e203ac0282
0000044400000000003d010a00cc00bc00cc05d3041505e800c7021a00ee
00000194036102be029902180136033b048504cc0050007905a305a302df
020702af000001eb0064005f0055011900f2045600ef00c800cf058a0143
014602de01ab02c6024a005d00d800a402bb009900a00065013702740364
00b500fa009101b9032001b60025007f00d000ec00e00000000000000000
0000042ffd42023f06180276063a013701b90151ffc70229ffeb023f02e1
018500db03fa01900156014e012f00a600e300bb00d50134011f04fe041b
00d100e4011e009b00cd00e700b300e200ca042400b800f500b90334005a
04e00123012ffdc9fe440574038301f602410002001700500015004f0017
00a80051009800520049006e000e00af017b017b019c006a008300eb00cd
0122000005d306da009a008f00ba0315002503a5028002ff03c804200092
00e0034c009b007d00f8011c013400a8006d006900000420ffe6fea4006a
006a003800380162015a0044006d0048001eff6d00a600a600400040ff5c
ff990559052b00ce014c011500bf0140011800c800960509feed004800b4
009500db0048018b00b3fe6400c000ea01180125013203b003ed05760590
05aa05b405be05cd063100780084009b00cc00e200f4010a0120016300d1
00ea00f7010801420019002c00340041003800480058006c025903bd0043
011a007000d30028003700420050005a0064007300780082008c009c00a5
00bd00ce00f00110015c00be00d801020117012c016300ea01080041004b
0055005f007300a60109018301b300410064001e002a00eb00fa010e0138
0274002c00400082009600b600c000cc00dc00e600f000ff010a0120012c
013b01440156016300f70057006401100136005001b10000ffb60039004e
004403cc00e5002401100042012201a400f0006000e0000e001d003905e3
0102002cfe4eff38026903bd011600ff000e00a00054001b003d01710041
000f005000fd0015014f0035fe47003900ab0080005005a50016002b00ac
0115021504570555007300da005c00ce0072ff58019a0744000040425554
403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625242322
21201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b09051582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1021745
3ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4
182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae4
1b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b5320
5c58b002855958b00185592d2c20b0032545b019234445b01a2344456523
4520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a
40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940
201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f
4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f4323
43650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003
252349b04060b0206320b000525823b002253823b002256538008a63381b
212121212159012d2c4bb06451584569b00943608a103a1b212121592d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3e
b02a2a2d2c352d2c76b8029f23701020b8029f4520b0005058b00161593a
2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015
b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b
515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53
234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b0259
2d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb01243
5c580cb00425b00425060c6423646164b807085158b00425b00425012046
b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b0
0425060c6423646164b807085158b00425b00425012046b8fff060482046
b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d
2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a5838
1b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b21
21592d2c462346608a8a462320468a608a61b8ff8062232010238ab90327
03278a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b202020243604259b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b2021002436042595959592d2cb0024354584b
53234b515a58381b2121591b21212121592d00000001000000050ccd382a
3dde5f0f3cf50819080000000000a2e3354600000000c5b1f691fb89fd8c
10000835000100090001000000000000000100000721fe4500571000fb89
fadf10000001000000000000000000000000000000040639011c02000000
0400008704000032000000360036009f0143000000010000000400f2003c
008f000600020010002f00560000088b02c4000500020000000100120001
000000000006001d00004b4a464b554a2b54696d65734e6577526f6d616e
50532d426f6c644d5400b15420b8040cb30c0e3220b8040cb2131732b804
0bb328201f0f41100412008004120002000f0412003f0412005f04120003
005f0412000100400412b2783340b80412b2723340b80412b26e3340b804
12b26a3340b80412b2543340bc0412004a0033ffc00412b317183240b804
12b30a0c3280b80412b308093240b80411b25a33404109041100560033ff
c0041100530033ffc00411b2503340b80411b24d3340bc041100470033ff
c00411b344453240b80411b2423340bc0411003e0033ffc00411b23a331f
4124041100200411004004110070041100af041100f004110006000f0411
002f04110090041100ff04110004002f041100400411007f0411008f0411
00a0041100e004110006ffc00411b208330f411b0410008f04100002000f
0410001f0410002f0410000300600409000100b004090001000f0408003f
0408004f0408009f04070004040ab2006c1fb9ffc00403b345453240b804
03b32b2e3240b80403b2282932b9ffc00403b21a1c32bd04030299002700
1fffc00401b2161b32b9ffc00400b2424232b9ffc00400b2363832b9ffc0
0400b32a2d32df410a040000ef04000002040004010028001fffc00401b3
282e32f0bf0401000103fe000f0101001fffc003fcb310143240b803fdb3
0f133240411003f9005003f9000200b003b100c003b10002006f03f5007f
03f50002ffc003afb22d3132b9ffc003afb30a0e3210411003ef002003ef
008003ef000300a003ef0001002003ef004003ef0002ffc003efb3131632
40b803e7b20f1132b9ffc003dfb2303432b9ffc003dfb310183250411403
dc000103c903d20023001f03e203d2001e001f03c703d2001d001f03c603
c8000d001fffc003a4b30f103280411003a3000103a303790029001f03a5
037a0032001f03a8037e001b001fffc003d9b20e1132b9ffc003d9b2282a
32410a03a7037c0032001f037303710034001f036c036bb2321f20bb03a4
0001004003ecb3090b3240b803ecb2101532bd03e9036b0014001f03e403
6bb2171f0fbd036e002f036e0002ffc003b8b3090d3290410c03b800a003
b80002001f03d20001009f03d20001004003d2b2090b32410a03a9038000
16001f03cf03810015001f03aa0382b2151fc0bb03f70001004003f6b309
0d3240b803a2b2083340b803a2b30d0e32c0410903a2000100b003f200c0
03f20002ffc003f4b3263832004126038c0030038c0002002003e3003003
e30002001003ee003003ee005003ee006f03ee007f03ee009f03ee000600
0003ed003003ed0002002f03de007003db009003db009f03de0004ffc003
79b20f1032b9ffc00379b2242832b9037d037cb2321f10bb037e0001ffc0
037eb3090e3240b8037cb2121332b9ffc0037cb30c0e323fbd03d7004f03
d70002004003d8b31718326fbb038e000100400390b3181b3240b803d4b2
090c32bd037b037a0032001fffc0037ab20e1132bd038003820016001f03
810382b2151fb0be03820001000f03830001004003ffb30c11327f411403
540001006f0354008f035400d0035400ef03540004000f0354002f035400
5f0354000300400350b30e0f320fbb035a000100400349b20e331fbd0348
007f03480002ffc00348b2152232b9ffc00347b2152232b9ffc0040fb21b
1e32beffc0040f002d01000032040e0406b22f1f51bb034b0001034f034e
b2641f40b80351b20e0f32b9ffc0034eb3383a3230bb034e0001ffc0034e
b21f2332b9ffc0034eb2131932b9ffc00346b2091132b9ffc00343b30a11
320fbb03440001ffc0032bb2080e32b9ffc0032bb2161b32b9ffc0032ab3
1417321f4110033a0001000f033300010000033700200337003003370080
03330004ffc00332b310123250416403320001004003320060033200a003
3200b00332000400100332003003320050033200e003320004000f033600
7f033600ff033600030070033600f003360002000f0331003f0331008f03
3100bf033100e003310005000f0331006003310002008f03300001006003
300090033000020050032f00010010032f0040032f0060032f0080032f00
a0032f00c0032f00f0032f000700cf032d00ff032d00020030032d008003
2d00b0032d00df032d0004006f032c007f032c00020012032000fd080000
1f007f0299403a017f007f017f027f037f047f057f107f11084035252c32
406a252c32402e252c324028252c32376009700980090330094009500903
1009200902b8ffc0b2073a33b8ffc04012063a33da4dea4dfa4d03123790
06900702cf410c011100df011100ef0111000300cf011000df011000ef01
10408703cf3edf3eef3e03cf4ddf4def4d03cfdedfdeefde03cf2ddf2def
2d03404d1b3a32375f016f017f018f01041f012f013f014f01045f036f03
7f038f03041f032f033f034f0304600b700b800b03300b400b500b03100b
200b02900ba00bb00bc00bd00b05b006c006d006e006f006055006600670
0680069006a006061f072f073f07400604f0414302db000100a002db00b0
02db0002008002db009002db0002001002db000100c002db00d002db0002
009002db0001006002db007002db0002004002db005002db0002002302db
003002db000202db002300a002da0001008002da009002da0002004002da
0001002302da003002da000202da0023000002d90001007002d9009002d9
000202d9401c2230244024021024202402002401f02401d024e02402b024
c02402c0413a02d8000100a002d800b002d80002008002d8009002d80002
002302d8003002d8000202d8002300c002d7000100a002d700b002d70002
008002d7009002d7000200a002d700b002d70002008002d7009002d70002
006002d7007002d70002004002d7005002d70002002302d7003002d70002
02d7b223370f4117029b0001005f029b009f029b00df029b0003002f029b
003f029b006f029b0003001f029b0001029b029b0040029ab3272c3280b8
029ab2263340b8029ab2223340b8029ab21e3340b8029ab21c3340b8029a
b3191a325f410f029a009f029a00df029a0003000f029a001f029a003f02
9a0003ffc00299b2443340b80299b23d3340b80299b23a33df4137029900
01005f029900af02990002004f0299009f02990002002f0299003f029900
0200af02990001000f0299003f0299000200b0029900e002990002007002
9900a002990002004f0299005f02990002001f0299002f0299003f029900
03029a029a02990299000f027a002f027a400b0200161600000012110812
b802bab269121fb802b4b228101fb802b3b228101fb802b2b228101f4113
02030023000d01ee0023000d01ae0023000d019f0023000d01940023000d
01570023000d010f400b230df9230dc5230da7230d410a024a0024000d01
f00024000d01e90024000d016a400e240de8240dc6240da3240da2240dbb
01e30022000d0121401a220de5220ddd220db7220daa220d93220d5c220d
51220d4c220d410a02280020000d021d0020000d015e0020000d011c4017
200dfc200de1200dcb200dc8200da1200d59200d3a200d410a01f2003400
0d019c0034000d01970034000d0135b7340d1f340d1d340dba0202000f01
5bb20f0009bb0202015b000d030ab22a3e1fb80309b22a3e1fb80221b24d
251fb8021cb24d411fb8021bb24d521fb8021ab24d721fb80213b24d931f
4109020f01b10401001f020e01b10801001f020cb22a811fb8020bb22a81
1fb80208b22a5e1fb80205b22a391fb801feb22a231fb801fbb2661d1fb8
01fab2661e1fb801f6b266341fb801f5b266341fbc01f300660201001f01
f1b2669e1f410901ea00280801001f01e7002602ab001f01b8b24d3f1fb8
01b7b24d931f410901b4003e0125001f01b200400401001f01acb22a721f
b801a8b22a281fb801a7b22a241fb801a6b22a241fb801a3b22a1f1fb801
a1b2662e1fb8019eb266931fb8019db266e41fb8019ab2286c1f41090199
00280401001f019800260401001f0173b24d1b1fb80171b24d241fb80170
b24d2f1fb8016fb24d351fb8016bb23ecd1fb80169b23ee41f4109016701
b1019a001f0166002a02ab001f0161b2662a1fb8015fb2669e1f4109015d
0028019a001f015c00350401001f0147b24d391fb80146b23ecd1f410d01
45003e0125001f014401430101001f014201b102ab001f0140b22a301fb8
013eb22a261fb8013db2661d1fb8013cb2662b1fb80138b228811fb80137
b2289e1fbc01360028019a001f0129b24d721fbc0124002a0201001f0123
b22aab1fb8011fb266291fb8011eb266451fb8011bb228811f4109011300
3e0125001f0112003e0401001f0111b22a291fb80110b22a201fbe010b00
66019a001f010a0026019ab61ffd4d721ffb3eb80156b21ffa40b80801b2
1ff728b80801b61fec4d621feb4db80401b21fea40b802abb61fdf4d721f
de3eb802ab400b1fdc2ae41fdb66221fca2ab80401401b1fc92a2e1fc326
791fb828bb1fb34d1e1fb166291fb066621faf66b80401b21fae26b802ab
b21fa828b80201400b1fa0664c1f982a2b1f9726b8019ab61f9266291f87
40b802ab401b1f852a791f8226811f754d931f744d891f732a1d1f70285e
1f6a28b8040140171f692a521f682a201f6766291f6566671f612a931f60
35b80801b61f5e2acd1f5335b80801b21f4b66b80156b21f493eb80801b6
1f4866521f4626b80201b21f3f66b80156400b1f3b66341f322a931f2e35
bb0401001f002d0143b3cd1f5537bc022f0007018000070172402e07bd07
7e076207540742072f072707250721071e071408120810080e080c080a08
08080608040802080008000214b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b5342b0372b4bb807ff52b0382b4bb008505b58b101018e
59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b54
4218b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2c858d1bb900010146858d59590016763f183f123e113946443e11394644
3e113946443e113946443e11394660443e113946604445442b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d
59b0324b5358b0ff1d594bb02953205c58b9026c026a4544b9026b026a45
445958b90168026c455258b9026c01684459594bb03b53205c58b9003e02
6b4544b9004d026b45445958b9025c003e455258b9003e025c4459594bb0
3b53205c58b901b1003e4544b13e3e45445958b9024f01b1455258b901b1
024f4459594bb05a53205c58b90143003e4544b13e3e45445958b9038b01
43455258b90143038b4459594bb09e53205c58b9002a026c4544b9004002
6c45445958b9056c002a455258b9002a056c4459594bb01853205c58b126
264544b1662645445958b13226455258b126324459594bb05153205c58b1
26264544b1282645445958b1ad26455258b126ad4459594bb8010153205c
58b126264544b1352645445958b902280026455258b9002602284459592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b33d76
6e58456523456023456560234560b08b766818b080622020b16e76456523
4520b003266062636820b003266165b076236544b06e234420b13d584565
234520b003266062636820b003266165b058236544b03d2344b100584554
58b158406544b23d403d4523614459b34e81387145652345602345656023
4560b089766818b080622020b138814565234520b003266062636820b003
266165b081236544b038234420b14e714565234520b003266062636820b0
03266165b071236544b04e2344b10071455458b171406544b24e404e4523
6144594b5242014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
007418456944456944737373737474757575752b2b2b73732b2b2b2b2b2b
18456944737373742b454473737373737474744544737474747474747575
754544737545447373747445447373737373747474740075757575757575
757575752b2b74747474747400732b4358b14d4d451869441bb8ffc0b34d
1b3a322b5973002b2b7575752b2b2b2b2b0073732b435c58b8ffc0b20716
33b8ffc0400b061633d54de54df54d03c0410c011100d0011100e0011100
0300c0011000d0011000e00110401e03c03ed03ee03e03c04dd04de04d03
c0ded0dee0de03c02dd02de02d03372b74747474747473002b2b59017373
7473747374737473747374752b737573002b2b2b01732b2b2b2b752b2b2b
732b2b2b002b2b742b732b7373742b73732b2b2b2b2b2b732b732b2b2b74
2b2b2b73737373732b73732b2b2b73002b2b2b2b7374732b732b2b2b2b75
2b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b
752b2b732b2b2b2b2b2b2b2b2b2b73747573742b7374752b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b00000000>
[647 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> FJGRMX+TimesNewRomanPS-BoldMT AddT42Char 
1 108 2 <0001008700000363056800170083bc000e01ad0135000801a5b6225f076f
070201410d01ad0135000701f90023001601a5000f01f700150135001602
02400e0f08000508070c000f011f010201b8030940100e0e500f6f0faf0f
03100f010f19180ebe0200000802c60018021701df00182b10f6e44e10f4
5d5d3c4d10fd5d3c003f3c3f1239f5edfc01f52b015d2b31300111141616
33331521353332363635113426262322072725029b16464d1ffd3624574a
1a12312033491201f30568fbab7d452c252528468002bf5e2f212024e400
>FJGRMX+TimesNewRomanPS-BoldMT AddT42Char 
1 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>FJGRMX+TimesNewRomanPS-BoldMT AddT42Char 
FJGRMX+TimesNewRomanPS-BoldMT /CharStrings get begin
/space 1 def
/one 2 def
end
FJGRMX+TimesNewRomanPS-BoldMT /Encoding get
dup 32 /space put
dup 49 /one put
pop
end
%ADOEndSubsetFont
/PMNKFY+TimesNewRomanPS-BoldMT /FJGRMX+TimesNewRomanPS-BoldMT findfont ct_VMDictPut/PMNKFY+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 206{/.notdef}rp]PMNKFY+TimesNewRomanPS-BoldMT nfPMNKFY+TimesNewRomanPS-BoldMT*1 [13.3333 0 0 -13.3333 0 0 ]msf111.813 168.216 mo(1 )[6.66666 0 ]xsh247.608 53.4369 mo
247.84 52.268 248.083 51.0856 248.408 50.1 cv
248.572 49.606 248.754 49.1599 248.991 48.7727 cv
249.229 48.3917 249.528 48.0386 249.994 47.8457 cv
250.148 47.7833 250.312 47.7561 250.463 47.7565 cv
251.04 47.776 251.409 48.0465 251.778 48.3174 cv
252.318 48.739 252.835 49.294 253.296 49.7273 cv
253.523 49.9429 253.735 50.126 253.893 50.2336 cv
254.068 50.3354 li
254.09 50.3437 li
254.05 50.5149 li
254.05 50.3399 li
254.09 50.3437 li
254.05 50.5149 li
254.05 50.3399 li
254.05 50.5472 li
253.924 50.3774 li
254.05 50.3399 li
254.05 50.5472 li
253.924 50.3774 li
253.934 50.3913 li
253.923 50.3785 li
253.924 50.3774 li
253.934 50.3913 li
253.923 50.3785 li
253.937 50.3727 254.037 50.2332 254.126 50.0205 cv
254.269 49.7004 254.407 49.2496 254.618 48.8179 cv
254.726 48.6013 254.854 48.3801 255.064 48.1743 cv
255.267 47.9699 255.608 47.7866 255.979 47.7916 cv
256.268 47.7929 256.51 47.8836 256.71 47.9903 cv
257.06 48.1819 257.33 48.4355 257.606 48.7026 cv
258.013 49.1038 258.417 49.5479 258.809 49.8655 cv
259.003 50.0245 259.192 50.1498 259.359 50.2282 cv
259.528 50.3071 259.668 50.3399 259.797 50.3399 cv
259.992 50.3441 260.304 50.2475 260.688 50.0341 cv
261.266 49.7204 261.966 49.184 262.753 48.706 cv
263.542 48.2327 264.448 47.7956 265.503 47.7916 cv
266.177 47.7951 266.845 47.9886 267.528 48.2458 cv
268.548 48.6352 269.6 49.1902 270.546 49.6361 cv
271.018 49.859 271.462 50.0542 271.845 50.1873 cv
272.226 50.3221 272.548 50.3872 272.737 50.3848 cv
272.896 50.3675 li
273.042 50.257 li
273.171 50.115 273.336 49.7633 273.451 49.3208 cv
273.631 48.6554 273.731 47.8127 273.833 47.1146 cv
273.887 46.7619 273.937 46.4495 274.024 46.1615 cv
274.07 46.0155 274.12 45.8733 274.235 45.7046 cv
274.295 45.6211 274.375 45.5272 274.502 45.4434 cv
274.627 45.3596 274.808 45.2969 274.985 45.2989 cv
275.266 45.2969 275.5 45.4411 275.619 45.5631 cv
275.848 45.8008 275.907 45.9941 275.987 46.2037 cv
276.11 46.566 276.196 46.9912 276.29 47.4629 cv
276.427 48.1646 276.573 48.9569 276.762 49.556 cv
276.855 49.8542 276.961 50.1018 277.051 50.2444 cv
277.152 50.3758 li
277.162 50.3843 li
277.102 50.4841 li
277.136 50.3733 li
277.162 50.3843 li
277.102 50.4841 li
277.136 50.3733 li
277.292 50.4225 277.565 50.4641 277.888 50.4632 cv
278.527 50.4648 279.364 50.3113 280.116 49.9468 cv
280.872 49.5809 281.537 49.0243 281.952 48.2037 cv
282.057 47.9989 282.173 47.6222 282.261 47.1483 cv
282.583 45.473 282.62 42.6543 282.737 40.2715 cv
282.797 39.0737 282.877 37.9838 283.045 37.1314 cv
283.132 36.7026 283.233 36.3337 283.415 35.997 cv
283.508 35.8295 283.625 35.6633 283.806 35.5191 cv
283.984 35.3751 284.247 35.2684 284.509 35.2719 cv
284.845 35.2756 285.092 35.4139 285.281 35.5541 cv
285.633 35.8268 285.888 36.1805 286.173 36.6228 cv
286.658 37.3937 287.171 38.4415 287.719 39.6112 cv
288.537 41.3623 289.424 43.3798 290.284 44.9968 cv
290.712 45.8039 291.136 46.5106 291.52 47.0166 cv
291.897 47.5288 292.264 47.807 292.38 47.8295 cv
292.611 47.8672 li
292.756 47.8672 292.93 47.8246 293.147 47.7093 cv
293.527 47.5108 294.003 47.0818 294.491 46.5092 cv
295.228 45.6514 296.004 44.4915 296.791 43.3737 cv
297.583 42.2542 298.375 41.1758 299.258 40.4323 cv
300.344 39.5263 301.547 38.2517 302.767 37.1794 cv
303.378 36.6428 303.996 36.1543 304.634 35.7841 cv
305.272 35.4171 305.941 35.1554 306.662 35.1527 cv
306.974 35.1524 307.291 35.2052 307.595 35.3193 cv
308.022 35.4804 308.373 35.7553 308.692 36.0831 cv
309.247 36.6603 309.723 37.4258 310.183 38.2899 cv
310.868 39.5842 311.501 41.1037 312.092 42.4645 cv
312.677 43.8196 313.246 45.0337 313.679 45.5959 cv
314.302 46.4209 314.817 47.0944 315.239 47.5175 cv
315.449 47.7293 315.633 47.8754 315.775 47.9557 cv
315.918 48.0368 316.005 48.0542 316.078 48.055 cv
316.158 48.0535 316.259 48.0353 316.444 47.9158 cv
316.52 48.0319 li
316.431 47.9248 li
316.444 47.9158 li
316.52 48.0319 li
316.431 47.9248 li
316.446 47.9084 li
316.495 47.8554 316.605 47.6745 316.711 47.4207 cv
316.902 46.9744 317.104 46.31 317.307 45.5826 cv
317.614 44.487 317.927 43.2473 318.31 42.2329 cv
318.504 41.7237 318.71 41.2695 318.985 40.8865 cv
319.125 40.6956 319.284 40.5184 319.495 40.3726 cv
319.702 40.2277 319.979 40.1186 320.277 40.1203 cv
320.579 40.1192 320.865 40.2293 321.094 40.3856 cv
321.328 40.5465 321.485 40.7381 321.635 40.9517 cv
321.909 41.3528 322.145 41.8556 322.391 42.4604 cv
323.239 44.5613 324.148 47.914 325.151 50.7388 cv
325.65 52.1465 326.174 53.4192 326.687 54.2864 cv
326.941 54.7197 327.193 55.0479 327.4 55.2341 cv
327.612 55.4257 327.737 55.4522 327.787 55.4508 cv
327.922 55.4107 li
327.99 55.3776 328.14 55.2617 328.31 55.0558 cv
328.636 54.6716 329.036 53.9987 329.45 53.1389 cv
330.914 50.1162 332.606 44.8313 334.275 40.1475 cv
335.112 37.8016 335.944 35.6019 336.763 33.8723 cv
337.174 33.0067 337.58 32.2585 337.997 31.6554 cv
338.42 31.0556 338.836 30.5824 339.4 30.3038 cv
339.675 30.1717 339.976 30.0987 340.274 30.0994 cv
340.946 30.1019 341.508 30.4422 341.962 30.8802 cv
342.761 31.6585 343.403 32.836 344.051 34.2243 cv
345.012 36.3023 345.929 38.8548 346.87 41.0305 cv
347.339 42.117 347.814 43.1078 348.285 43.8801 cv
348.752 44.6547 349.231 45.1967 349.593 45.407 cv
350.537 45.9784 351.67 46.2448 352.876 46.2448 cv
355.541 46.2574 358.511 44.8982 360.093 43.0631 cv
361.227 41.7742 362.007 39.6246 362.536 37.0337 cv
363.07 34.4447 363.374 31.4303 363.688 28.4099 cv
365.18 28.5655 li
364.865 31.5835 364.561 34.6352 364.005 37.3366 cv
363.443 40.0363 362.649 42.4016 361.224 44.0487 cv
359.282 46.2565 356.024 47.7322 352.876 47.7448 cv
351.453 47.7449 350.042 47.4308 348.816 46.6907 cv
348.266 46.3545 347.817 45.8549 347.393 45.2552 cv
346.655 44.2039 345.999 42.8149 345.355 41.3039 cv
344.395 39.0413 343.478 36.5044 342.558 34.5747 cv
342.102 33.6116 341.64 32.802 341.214 32.2816 cv
341.003 32.021 340.802 31.836 340.64 31.7317 cv
340.474 31.6261 340.364 31.6001 340.274 31.5994 cv
340.21 31.6001 340.143 31.6116 340.046 31.6574 cv
339.956 31.6981 339.795 31.8157 339.611 32.021 cv
339.262 32.4043 338.839 33.0734 338.405 33.9307 cv
336.87 36.9447 335.149 42.2269 333.505 46.9061 cv
332.68 49.2495 331.871 51.4468 331.09 53.1723 cv
330.699 54.036 330.315 54.7815 329.926 55.3823 cv
329.529 55.9803 329.152 56.4499 328.615 56.741 cv
328.361 56.8747 328.073 56.9515 327.787 56.9506 cv
327.452 56.9513 327.136 56.8489 326.868 56.695 cv
326.363 56.4019 325.983 55.9542 325.623 55.4145 cv
325 54.4675 324.455 53.1934 323.93 51.7732 cv
323.148 49.6469 322.432 47.199 321.778 45.2049 cv
321.452 44.2095 321.14 43.3268 320.855 42.6749 cv
320.713 42.3497 320.577 42.0824 320.462 41.8978 cv
320.405 41.8055 320.352 41.7345 320.313 41.6889 cv
320.267 41.6399 li
320.255 41.6293 li
320.232 41.615 li
320.228 41.613 li
320.277 41.4851 li
320.277 41.6201 li
320.228 41.613 li
320.277 41.4851 li
320.277 41.6201 li
320.277 41.4733 li
320.349 41.6056 li
320.277 41.6201 li
320.277 41.4733 li
320.349 41.6056 li
320.284 41.6635 li
320.121 41.8227 319.85 42.347 319.624 43.0087 cv
319.271 44.0065 318.949 45.3178 318.617 46.4587 cv
318.45 47.0312 318.281 47.5615 318.089 48.0141 cv
317.992 48.2408 317.889 48.4486 317.766 48.6408 cv
317.64 48.8313 317.498 49.0141 317.27 49.1676 cv
316.911 49.4072 316.5 49.5564 316.078 49.555 cv
315.696 49.5559 315.337 49.4351 315.029 49.2572 cv
314.564 48.9877 314.177 48.6018 313.772 48.1377 cv
313.369 47.6721 312.952 47.1208 312.483 46.5016 cv
312.012 45.8749 311.59 45.0115 311.139 44.0197 cv
310.47 42.537 309.767 40.7792 309.039 39.3434 cv
308.677 38.6267 308.307 37.9919 307.955 37.5287 cv
307.606 37.0606 307.266 36.7895 307.07 36.7244 cv
306.939 36.6756 306.809 36.6531 306.662 36.6525 cv
306.329 36.6498 305.89 36.7888 305.386 37.0824 cv
304.63 37.5173 303.763 38.2724 302.886 39.1031 cv
302.006 39.9341 301.11 40.8376 300.22 41.5829 cv
299.714 42.004 299.143 42.6886 298.565 43.475 cv
297.693 44.6563 296.797 46.0593 295.864 47.2046 cv
295.396 47.7776 294.918 48.2896 294.396 48.6838 cv
293.876 49.0734 293.286 49.3646 292.611 49.3671 cv
292.377 49.3675 292.139 49.3298 291.91 49.254 cv
291.373 49.0679 290.978 48.6999 290.589 48.2518 cv
289.918 47.4614 289.283 46.3466 288.643 45.0914 cv
287.688 43.2129 286.748 41.0254 285.923 39.3283 cv
285.513 38.4816 285.129 37.756 284.812 37.2816 cv
284.656 37.0453 284.514 36.873 284.427 36.7935 cv
284.377 36.7513 li
284.364 36.7419 li
284.509 36.4932 li
284.509 36.7719 li
284.41 36.7711 284.364 36.7419 284.364 36.7419 cv
284.509 36.4932 li
284.509 36.7719 li
284.509 36.4297 li
284.746 36.688 li
284.727 36.7127 284.612 36.7764 284.509 36.7719 cv
284.509 36.4297 li
284.746 36.688 li
284.676 36.6116 li
284.755 36.6788 li
284.746 36.688 li
284.676 36.6116 li
284.755 36.6788 li
284.747 36.6776 284.639 36.8731 284.567 37.1897 cv
284.429 37.7472 284.334 38.6433 284.272 39.6695 cv
284.177 41.2136 284.142 43.0674 284.034 44.7403 cv
283.98 45.5779 283.908 46.3706 283.797 47.0699 cv
283.683 47.7713 283.542 48.3736 283.291 48.8798 cv
282.703 50.0458 281.752 50.825 280.767 51.2981 cv
279.779 51.7727 278.751 51.9616 277.888 51.9632 cv
277.447 51.9623 277.049 51.9149 276.694 51.8068 cv
276.33 51.6927 276.077 51.4529 275.896 51.2111 cv
275.58 50.7801 275.408 50.2795 275.253 49.7426 cv
275.029 48.9416 274.884 48.0544 274.745 47.3904 cv
274.677 47.0616 274.606 46.7853 274.554 46.6498 cv
274.525 46.5827 li
274.522 46.5771 li
274.819 46.4045 li
274.602 46.6646 li
274.522 46.5771 li
274.819 46.4045 li
274.602 46.6646 li
274.985 46.2042 li
274.985 46.7988 li
274.814 46.801 274.664 46.7199 274.602 46.6646 cv
274.985 46.2042 li
274.985 46.7988 li
274.985 46.2039 li
275.418 46.6204 li
275.364 46.6866 275.185 46.8032 274.985 46.7988 cv
274.985 46.2039 li
275.418 46.6204 li
275.125 46.3381 li
275.472 46.5528 li
275.418 46.6204 li
275.125 46.3381 li
275.472 46.5528 li
275.376 46.4935 li
275.479 46.5398 li
275.472 46.5528 li
275.376 46.4935 li
275.479 46.5398 li
275.471 46.5548 275.434 46.6685 275.403 46.8232 cv
275.286 47.3819 275.197 48.4279 274.977 49.3982 cv
274.863 49.8875 274.719 50.367 274.479 50.8003 cv
274.358 51.0164 274.211 51.2231 274.017 51.4037 cv
273.825 51.5836 273.58 51.735 273.298 51.8125 cv
273.11 51.865 272.922 51.8848 272.737 51.8848 cv
272.117 51.8792 271.518 51.68 270.879 51.4245 cv
269.926 51.0366 268.898 50.4868 267.929 50.0441 cv
266.968 49.5966 266.05 49.2814 265.503 49.2916 cv
265.093 49.2913 264.665 49.4104 264.214 49.6202 cv
263.536 49.9324 262.834 50.4452 262.128 50.9108 cv
261.774 51.1431 261.416 51.3641 261.036 51.5375 cv
260.657 51.7091 260.248 51.8387 259.797 51.8399 cv
259.193 51.8387 258.676 51.6015 258.247 51.3152 cv
257.603 50.881 257.093 50.308 256.66 49.8776 cv
256.447 49.6628 256.254 49.4845 256.115 49.3852 cv
255.966 49.2951 li
255.949 49.2889 li
255.979 49.1579 li
255.979 49.2916 li
255.949 49.2889 li
255.979 49.1579 li
255.979 49.2916 li
255.979 49.0845 li
256.105 49.2543 li
255.979 49.2916 li
255.979 49.0845 li
256.105 49.2543 li
256.095 49.2404 li
256.107 49.2532 li
256.105 49.2543 li
256.095 49.2404 li
256.107 49.2532 li
256.092 49.259 255.992 49.3985 255.902 49.6112 cv
255.76 49.9313 255.622 50.3819 255.411 50.8136 cv
255.303 51.0304 255.175 51.2514 254.965 51.4574 cv
254.762 51.6618 254.421 51.845 254.05 51.8399 cv
253.756 51.8372 253.527 51.7457 253.328 51.6429 cv
252.982 51.4582 252.691 51.2082 252.392 50.9358 cv
251.951 50.5283 251.508 50.062 251.12 49.7206 cv
250.928 49.5505 250.75 49.4135 250.619 49.336 cv
250.472 49.263 li
250.447 49.2556 li
250.463 49.1756 li
250.463 49.2565 li
250.447 49.2556 li
250.463 49.1756 li
250.463 49.2565 li
250.463 49.0119 li
250.553 49.2376 li
250.463 49.2565 li
250.463 49.0119 li
250.553 49.2376 li
250.537 49.2386 250.411 49.3219 250.269 49.5588 cv
250.051 49.9061 249.822 50.5256 249.627 51.2622 cv
249.428 52.0005 249.251 52.8597 249.079 53.7287 cv
247.608 53.4369 li
247.608 53.4369 li
f
249.01 18.3788 mo
250.308 20.8968 251.668 23.4037 252.867 24.705 cv
253.398 25.2861 253.983 25.8056 254.521 26.1612 cv
255.056 26.5228 255.549 26.6933 255.798 26.6843 cv
255.973 26.6569 li
256.026 26.7953 li
255.928 26.681 li
255.973 26.6567 li
256.026 26.7953 li
255.928 26.681 li
255.929 26.6816 255.978 26.6299 256.033 26.5248 cv
256.131 26.342 256.243 26.019 256.344 25.649 cv
256.499 25.0902 256.64 24.4276 256.835 23.8335 cv
256.935 23.5351 257.046 23.2512 257.211 22.9842 cv
257.375 22.7249 257.61 22.4435 258.01 22.3053 cv
258.148 22.2591 258.289 22.2396 258.421 22.2398 cv
258.957 22.2542 259.323 22.4868 259.682 22.7243 cv
260.211 23.0926 260.717 23.5753 261.172 23.948 cv
261.396 24.1338 261.606 24.2899 261.767 24.3831 cv
261.957 24.4752 li
262 24.4878 li
261.999 24.4947 li
261.999 24.4884 li
262 24.4878 li
261.999 24.4947 li
261.999 24.4884 li
261.999 24.6883 li
261.936 24.4997 li
261.999 24.4884 li
261.999 24.6883 li
261.936 24.4997 li
261.993 24.6697 li
261.877 24.5287 li
261.936 24.4995 li
261.993 24.6697 li
261.877 24.5287 li
261.894 24.534 262.082 24.2616 262.218 23.8768 cv
262.44 23.297 262.64 22.4902 262.843 21.8076 cv
262.947 21.463 263.048 21.151 263.185 20.8687 cv
263.257 20.7267 263.334 20.589 263.468 20.4435 cv
263.537 20.3714 263.622 20.2961 263.741 20.2319 cv
263.858 20.1679 264.015 20.1194 264.18 20.1203 cv
264.377 20.1174 264.586 20.1922 264.726 20.2957 cv
264.992 20.4961 265.075 20.7022 265.151 20.8781 cv
265.271 21.1904 265.327 21.5064 265.398 21.8617 cv
265.498 22.3883 265.61 22.9812 265.799 23.4853 cv
265.986 23.9941 266.239 24.3788 266.557 24.5857 cv
267.192 25.0071 268.263 25.5706 269.426 26.0118 cv
270.588 26.4565 271.856 26.7769 272.858 26.7737 cv
273.24 26.7739 273.581 26.7284 273.861 26.6414 cv
274.191 26.5471 274.6 26.2043 275.017 25.6401 cv
275.647 24.8031 276.257 23.5677 276.971 22.4705 cv
277.331 21.9211 277.721 21.4006 278.194 20.9741 cv
278.663 20.55 279.24 20.2128 279.922 20.1263 cv
280.05 20.1099 280.178 20.1019 280.305 20.1019 cv
281.136 20.1041 281.859 20.4359 282.527 20.8512 cv
284.531 22.1225 286.413 24.2414 289.924 24.4626 cv
290.232 24.4821 290.569 24.4916 290.93 24.4916 cv
293.673 24.4934 297.76 23.9431 301.681 23.3867 cv
305.615 22.8317 309.366 22.2701 311.646 22.2669 cv
312.666 22.2661 313.508 22.4617 314.19 22.7685 cv
315.217 23.2274 315.863 23.9249 316.3 24.4374 cv
316.517 24.6935 316.691 24.9053 316.8 25.0082 cv
316.886 25.0801 li
316.776 25.2832 li
316.776 25.0574 li
316.886 25.0801 li
316.776 25.2832 li
316.776 25.0574 li
316.776 25.3099 li
316.686 25.072 li
316.776 25.0574 li
316.776 25.3099 li
316.686 25.072 li
316.688 25.0783 li
316.684 25.0716 li
316.686 25.072 li
316.688 25.0783 li
316.684 25.0716 li
316.715 25.0543 316.832 24.9545 316.986 24.7528 cv
317.077 24.6446 317.254 24.2696 317.402 23.7546 cv
317.672 22.8472 317.919 21.4997 318.149 20.0154 cv
318.495 17.7842 318.809 15.2353 319.184 13.2144 cv
319.373 12.2009 319.573 11.3239 319.824 10.6425 cv
319.952 10.3002 320.087 10.0052 320.286 9.74095 cv
320.387 9.60973 320.507 9.48266 320.671 9.37614 cv
320.833 9.27015 321.053 9.19102 321.283 9.19247 cv
321.562 9.19175 321.81 9.30188 321.991 9.43526 cv
322.27 9.64704 322.424 9.88767 322.59 10.1732 cv
322.889 10.7072 323.167 11.4293 323.467 12.328 cv
324.502 15.4561 325.707 20.7009 326.898 25.2086 cv
327.491 27.4588 328.081 29.5231 328.627 31.0078 cv
328.898 31.7484 329.162 32.3461 329.385 32.7228 cv
329.495 32.9107 329.596 33.0415 329.654 33.0988 cv
329.687 33.1286 li
329.695 33.1343 li
329.563 33.3373 li
329.596 33.103 li
329.695 33.1343 li
329.563 33.3373 li
329.596 33.103 li
329.545 33.464 li
329.545 33.0994 li
329.598 33.1032 li
329.545 33.464 li
329.545 33.0994 li
329.545 33.4101 li
329.393 33.1349 li
329.545 33.0994 li
329.545 33.4101 li
329.393 33.1349 li
329.43 33.2021 li
329.381 33.1423 li
329.393 33.1349 li
329.43 33.2021 li
329.381 33.1423 li
329.393 33.1361 329.484 33.0361 329.58 32.8555 cv
329.766 32.5168 329.984 31.9209 330.193 31.1717 cv
330.933 28.5329 331.616 24.0089 332.329 20.0228 cv
332.687 18.0257 333.053 16.1596 333.452 14.6917 cv
333.652 13.9567 333.859 13.322 334.092 12.8013 cv
334.209 12.5407 334.333 12.3078 334.477 12.0989 cv
334.623 11.8914 334.789 11.7009 335.028 11.5506 cv
335.233 11.4219 335.489 11.335 335.751 11.3363 cv
336.077 11.3354 336.368 11.4644 336.585 11.6252 cv
336.991 11.9334 337.246 12.3419 337.507 12.8303 cv
337.949 13.6849 338.348 14.8224 338.774 16.081 cv
339.408 17.9639 340.094 20.1092 340.901 21.7596 cv
341.302 22.5839 341.736 23.28 342.17 23.745 cv
342.609 24.2158 343.007 24.4311 343.386 24.4642 cv
343.466 24.4714 343.552 24.475 343.642 24.475 cv
344.553 24.4821 345.938 24.0686 347.478 23.3481 cv
349.796 22.273 352.493 20.5459 354.893 18.7652 cv
357.293 16.9873 359.409 15.1425 360.565 13.8767 cv
362.406 11.8491 362.897 9.94589 362.907 7.93238 cv
362.908 6.55837 362.654 5.14147 362.388 3.68924 cv
363.863 3.41942 li
364.128 4.87237 364.406 6.37633 364.407 7.93238 cv
364.417 10.2058 363.771 12.6095 361.672 14.8889 cv
359.981 16.7341 356.708 19.4511 353.25 21.7546 cv
351.522 22.9042 349.753 23.9451 348.11 24.7086 cv
346.461 25.4684 344.955 25.968 343.642 25.975 cv
343.511 25.975 343.38 25.9696 343.252 25.9583 cv
342.547 25.8959 341.926 25.561 341.414 25.1034 cv
340.516 24.2959 339.85 23.1055 339.251 21.7678 cv
338.362 19.7631 337.661 17.4026 337.012 15.5695 cv
336.69 14.6557 336.377 13.8723 336.095 13.3725 cv
335.957 13.1231 335.823 12.9484 335.742 12.8729 cv
335.68 12.8233 li
335.751 12.6766 li
335.751 12.8363 li
335.68 12.8233 li
335.751 12.6766 li
335.751 12.8363 li
335.751 12.64 li
335.81 12.8282 li
335.751 12.8363 li
335.751 12.64 li
335.81 12.8282 li
335.782 12.7386 li
335.821 12.8237 li
335.81 12.8282 li
335.782 12.7386 li
335.821 12.8237 li
335.817 12.8262 li
335.803 12.8022 li
335.819 12.8248 li
335.817 12.8262 li
335.803 12.8022 li
335.819 12.8248 li
335.81 12.8276 335.713 12.927 335.61 13.1149 cv
335.41 13.4666 335.176 14.0958 334.954 14.8882 cv
334.165 17.6789 333.451 22.4758 332.713 26.5592 cv
332.342 28.6057 331.965 30.4757 331.55 31.8777 cv
331.34 32.5808 331.127 33.1646 330.865 33.6311 cv
330.731 33.8647 330.587 34.0732 330.386 34.2558 cv
330.19 34.4344 329.896 34.5999 329.545 34.5994 cv
329.381 34.5875 li
328.946 34.5145 328.686 34.2693 328.471 34.0267 cv
328.076 33.5566 327.768 32.9153 327.433 32.0862 cv
326.858 30.6423 326.268 28.647 325.669 26.4253 cv
324.773 23.0963 323.864 19.2683 323.031 16.176 cv
322.615 14.6312 322.217 13.2687 321.858 12.2628 cv
321.68 11.7606 321.509 11.3467 321.362 11.0576 cv
321.289 10.9134 321.222 10.8008 321.171 10.7291 cv
321.112 10.6542 li
321.1 10.6424 li
321.155 10.5831 li
321.108 10.6479 li
321.1 10.6424 li
321.155 10.5831 li
321.108 10.6479 li
321.216 10.5 li
321.153 10.6701 li
321.108 10.6483 li
321.216 10.5 li
321.153 10.6701 li
321.283 10.3194 li
321.283 10.6925 li
321.153 10.6701 li
321.283 10.3194 li
321.283 10.6925 li
321.283 10.3067 li
321.452 10.655 li
321.283 10.6925 li
321.283 10.3067 li
321.452 10.655 li
321.374 10.4942 li
321.501 10.6243 li
321.452 10.655 li
321.374 10.4942 li
321.501 10.6243 li
321.479 10.6296 321.31 10.8978 321.178 11.3114 cv
320.931 12.0401 320.694 13.2051 320.477 14.534 cv
320.149 16.5326 319.853 18.9174 319.515 20.9758 cv
319.345 22.0062 319.165 22.9549 318.96 23.7488 cv
318.745 24.5471 318.542 25.1746 318.173 25.6695 cv
317.981 25.9163 317.799 26.1145 317.58 26.2753 cv
317.366 26.4337 317.084 26.5585 316.776 26.5574 cv
316.464 26.5581 316.198 26.4323 316.014 26.3007 cv
315.689 26.0641 315.492 25.7989 315.258 25.528 cv
314.916 25.121 314.54 24.6942 313.997 24.3595 cv
313.453 24.0277 312.74 23.7697 311.646 23.7669 cv
309.588 23.7636 305.815 24.3144 301.892 24.8717 cv
297.956 25.4278 293.854 25.9896 290.93 25.9916 cv
290.543 25.9916 290.175 25.9815 289.829 25.9597 cv
287.089 25.7897 285.151 24.5931 283.673 23.5183 cv
282.933 22.9801 282.295 22.4722 281.735 22.1246 cv
281.171 21.7726 280.713 21.6 280.305 21.6019 cv
280.111 21.6144 li
279.718 21.662 279.314 21.9186 278.874 22.4188 cv
278.218 23.1592 277.596 24.3568 276.928 25.4673 cv
276.59 26.0235 276.237 26.5614 275.823 27.0233 cv
275.41 27.4817 274.924 27.8806 274.305 28.0743 cv
273.843 28.2171 273.355 28.2733 272.858 28.2737 cv
271.557 28.2704 270.164 27.895 268.892 27.4137 cv
267.621 26.9291 266.486 26.3362 265.729 25.8366 cv
265.16 25.4586 264.795 24.9215 264.548 24.3833 cv
264.178 23.5727 264.038 22.7169 263.915 22.0974 cv
263.857 21.7914 263.799 21.5394 263.76 21.4395 cv
263.744 21.402 li
264.037 21.2447 li
263.831 21.4985 li
263.744 21.402 li
264.037 21.2447 li
263.831 21.4985 li
264.18 21.0691 li
264.18 21.6203 li
264.049 21.6243 263.898 21.5589 263.831 21.4985 cv
264.18 21.0691 li
264.18 21.6203 li
264.18 21.0726 li
264.514 21.5127 li
264.463 21.554 264.336 21.6214 264.18 21.6203 cv
264.18 21.0726 li
264.514 21.5127 li
264.3 21.231 li
264.563 21.4686 li
264.514 21.5127 li
264.3 21.231 li
264.563 21.4686 li
264.495 21.4073 li
264.571 21.4599 li
264.563 21.4686 li
264.495 21.4073 li
264.571 21.4599 li
264.561 21.4707 264.512 21.5598 264.463 21.6876 cv
264.279 22.1481 264.067 23.0435 263.811 23.8577 cv
263.679 24.269 263.537 24.6654 263.347 25.0203 cv
263.251 25.198 263.143 25.3672 262.999 25.5255 cv
262.856 25.6816 262.668 25.8357 262.41 25.9228 cv
262.272 25.9689 262.131 25.9885 261.999 25.9884 cv
261.463 25.9739 261.097 25.7412 260.738 25.5039 cv
260.209 25.1356 259.703 24.6529 259.248 24.2802 cv
259.023 24.0944 258.813 23.9383 258.653 23.8451 cv
258.464 23.753 li
258.42 23.7404 li
258.421 23.7335 li
258.421 23.7398 li
258.42 23.7404 li
258.421 23.7335 li
258.421 23.7398 li
258.421 23.5414 li
258.484 23.7285 li
258.421 23.7398 li
258.421 23.5414 li
258.484 23.7285 li
258.426 23.5543 li
258.543 23.6985 li
258.484 23.7285 li
258.426 23.5543 li
258.543 23.6985 li
258.539 23.7027 li
258.497 23.7335 258.351 23.9974 258.242 24.3575 cv
258.066 24.9009 257.915 25.6419 257.713 26.3137 cv
257.61 26.652 257.497 26.9756 257.331 27.2769 cv
257.164 27.5696 256.937 27.8871 256.507 28.0588 cv
256.275 28.1472 256.033 28.1845 255.798 28.1843 cv
255.051 28.1753 254.368 27.8525 253.692 27.4114 cv
253.019 26.9646 252.36 26.3723 251.76 25.7173 cv
250.342 24.1565 248.997 21.6068 247.678 19.0684 cv
249.01 18.3788 li
f
247.914 72.2394 mo
248.941 68.6702 249.969 65.1088 250.949 62.311 cv
251.44 60.9109 251.917 59.7029 252.39 58.7613 cv
252.627 58.29 252.862 57.8848 253.112 57.5465 cv
253.365 57.2101 253.624 56.9291 253.986 56.7357 cv
254.171 56.6382 254.391 56.5758 254.615 56.5766 cv
255.062 56.5771 255.422 56.8102 255.664 57.0609 cv
256.092 57.511 256.363 58.1023 256.641 58.8323 cv
257.047 59.9237 257.407 61.3253 257.768 62.8157 cv
258.128 64.3044 258.487 65.8772 258.869 67.2703 cv
259.192 68.4541 259.501 70.1252 259.813 71.9922 cv
260.278 74.7885 260.742 78.0121 261.201 80.5183 cv
261.43 81.7691 261.661 82.8445 261.878 83.5669 cv
261.984 83.926 262.092 84.1996 262.165 84.3277 cv
262.203 84.3917 li
262.208 84.3984 li
261.999 84.5684 li
262.141 84.3439 li
262.208 84.3984 li
261.999 84.5684 li
262.141 84.3439 li
261.855 84.7973 li
261.855 84.2643 li
261.982 84.2634 262.089 84.3093 262.141 84.3439 cv
261.855 84.7973 li
261.855 84.2643 li
261.855 84.832 li
261.664 84.2971 li
261.855 84.2643 li
261.855 84.832 li
261.664 84.2971 li
261.667 84.296 li
261.821 84.7335 li
261.458 84.4305 li
261.473 84.4164 261.521 84.3506 261.667 84.296 cv
261.821 84.7335 li
261.458 84.4305 li
261.545 84.5029 li
261.453 84.437 li
261.458 84.4305 li
261.545 84.5029 li
261.453 84.437 li
261.457 84.4371 261.522 84.3196 261.583 84.1406 cv
261.83 83.4505 262.126 81.9231 262.407 80.0837 cv
262.836 77.313 263.268 73.7751 263.701 70.7825 cv
263.917 69.2849 264.134 67.9244 264.353 66.8489 cv
264.463 66.3105 264.574 65.844 264.691 65.4561 cv
264.815 65.0639 264.916 64.7658 265.13 64.4709 cv
265.209 64.3685 265.302 64.2663 265.439 64.1755 cv
265.573 64.0854 265.765 64.0117 265.97 64.0129 cv
266.151 64.0122 266.32 64.0686 266.445 64.1409 cv
266.688 64.2862 266.803 64.454 266.906 64.6135 cv
267.088 64.9158 267.207 65.2541 267.333 65.6636 cv
267.755 67.076 268.13 69.3406 268.582 71.2586 cv
268.805 72.2121 269.049 73.0763 269.295 73.6448 cv
269.414 73.9278 269.539 74.1342 269.616 74.2212 cv
269.658 74.2652 li
269.666 74.2717 li
269.541 74.4635 li
269.541 74.2412 li
269.666 74.2717 li
269.541 74.4635 li
269.541 74.2412 li
269.541 74.3231 li
269.518 74.243 li
269.541 74.2412 li
269.541 74.3231 li
269.518 74.243 li
269.535 74.247 269.732 74.139 269.962 73.8916 cv
270.374 73.4651 270.904 72.6888 271.456 71.7775 cv
272.29 70.4069 273.194 68.7261 274.08 67.3008 cv
274.524 66.587 274.963 65.9365 275.405 65.4055 cv
275.854 64.8783 276.281 64.4496 276.861 64.2213 cv
277.15 64.1131 277.445 64.056 277.735 64.0562 cv
278.424 64.0549 279.009 64.3759 279.467 64.7784 cv
280.16 65.3893 280.7 66.2184 281.303 67.0583 cv
281.899 67.8988 282.54 68.7465 283.303 69.3822 cv
283.943 69.9184 284.65 70.6531 285.412 71.4635 cv
286.551 72.6773 287.804 74.0592 288.982 75.1131 cv
289.569 75.6396 290.138 76.0824 290.64 76.3775 cv
291.143 76.6765 291.572 76.8103 291.846 76.8059 cv
291.943 76.8058 292.023 76.7924 292.097 76.7684 cv
292.163 76.7524 292.338 76.6338 292.534 76.3189 cv
292.884 75.7791 293.231 74.7676 293.539 73.5915 cv
294.01 71.8204 294.429 69.6701 295.009 67.8775 cv
295.302 66.979 295.631 66.1667 296.071 65.5059 cv
296.292 65.1762 296.544 64.8817 296.85 64.6454 cv
297.154 64.4098 297.522 64.2361 297.926 64.1809 cv
298.031 64.1663 298.136 64.1596 298.241 64.1596 cv
298.837 64.1632 299.407 64.3631 299.99 64.6562 cv
301.006 65.1748 302.086 66.0174 303.21 66.9996 cv
304.891 68.4718 306.651 70.2634 308.182 71.7099 cv
308.946 72.4321 309.653 73.0679 310.244 73.5233 cv
310.539 73.751 310.805 73.9332 311.023 74.0569 cv
311.24 74.1819 311.413 74.2425 311.482 74.2526 cv
311.545 74.2591 li
311.563 74.258 li
311.57 74.2996 li
311.549 74.2641 li
311.563 74.258 li
311.57 74.2996 li
311.549 74.2641 li
311.565 74.2901 li
311.545 74.2668 li
311.549 74.2641 li
311.565 74.2901 li
311.545 74.2668 li
311.61 74.1627 li
311.732 73.9274 311.816 73.2818 311.809 72.5345 cv
311.81 71.6001 311.72 70.4929 311.719 69.517 cv
311.722 68.9028 311.748 68.3455 311.901 67.8346 cv
311.982 67.5801 312.097 67.3218 312.323 67.0937 cv
312.543 66.8629 312.904 66.7104 313.238 66.7182 cv
313.712 66.7258 314.087 66.9109 314.457 67.1391 cv
315.099 67.548 315.753 68.1712 316.468 68.8952 cv
317.532 69.9792 318.707 71.2897 319.851 72.3453 cv
320.422 72.8725 320.984 73.3343 321.502 73.6675 cv
322.02 74.0033 322.491 74.201 322.851 74.2485 cv
322.949 74.2622 323.049 74.2688 323.152 74.2688 cv
323.736 74.2719 324.435 74.0394 325.185 73.629 cv
326.311 73.0181 327.52 72.0372 328.68 71.1491 cv
329.262 70.705 329.834 70.2836 330.4 69.9404 cv
330.968 69.5992 331.528 69.3272 332.128 69.2189 cv
332.509 69.1517 332.873 69.1189 333.222 69.1189 cv
334.332 69.1149 335.277 69.4664 336.095 69.9853 cv
336.918 70.5044 337.643 71.1738 338.451 71.8836 cv
339.043 72.4132 339.478 73.1486 339.909 73.966 cv
340.546 75.1891 341.14 76.6133 341.769 77.6843 cv
342.081 78.2185 342.403 78.6587 342.697 78.929 cv
342.998 79.2037 343.223 79.2915 343.429 79.2922 cv
343.54 79.2836 li
343.692 79.2629 343.93 79.1648 344.216 78.9579 cv
344.72 78.6005 345.34 77.9375 345.994 77.1214 cv
346.979 75.8961 348.056 74.3319 349.182 72.8869 cv
350.315 71.4415 351.479 70.1066 352.776 69.3157 cv
356.46 67.0944 360.549 66.8889 364.528 66.7189 cv
364.591 68.2177 li
360.61 68.3795 356.822 68.6167 353.552 70.5994 cv
352.803 71.0484 351.971 71.864 351.143 72.8469 cv
349.896 74.3214 348.651 76.1562 347.46 77.6848 cv
346.863 78.45 346.28 79.1403 345.69 79.6843 cv
345.097 80.2219 344.499 80.6464 343.766 80.7666 cv
343.654 80.7838 343.541 80.7922 343.429 80.7922 cv
342.971 80.7935 342.541 80.6442 342.182 80.4184 cv
341.55 80.019 341.084 79.4171 340.655 78.7394 cv
340.018 77.7209 339.481 76.4947 338.953 75.406 cv
338.436 74.3202 337.89 73.3717 337.46 73.0096 cv
336.64 72.2863 335.955 71.6668 335.297 71.2553 cv
334.634 70.8436 334.027 70.6228 333.222 70.6189 cv
332.967 70.6189 332.692 70.6427 332.388 70.6962 cv
331.983 70.7609 331.363 71.0733 330.678 71.5468 cv
329.641 72.2522 328.442 73.2782 327.186 74.1464 cv
325.926 75.0064 324.602 75.756 323.152 75.7688 cv
322.983 75.7688 322.814 75.7576 322.644 75.7342 cv
321.602 75.5792 320.656 74.9707 319.711 74.2111 cv
318.302 73.0646 316.91 71.5073 315.696 70.253 cv
315.092 69.627 314.533 69.0776 314.073 68.7097 cv
313.845 68.5259 313.641 68.3885 313.487 68.3096 cv
313.334 68.2281 313.239 68.2169 313.238 68.2182 cv
313.238 68.0113 li
313.382 68.1558 li
313.238 68.2182 li
313.238 68.0113 li
313.382 68.1558 li
313.323 68.0969 li
313.389 68.1483 li
313.382 68.1558 li
313.323 68.0969 li
313.389 68.1483 li
313.345 68.2443 li
313.268 68.4489 313.215 68.9383 313.219 69.517 cv
313.219 70.4033 313.308 71.5145 313.309 72.5345 cv
313.305 73.2521 313.272 73.9208 313.078 74.5204 cv
312.978 74.8189 312.831 75.1158 312.569 75.3633 cv
312.31 75.6131 311.92 75.7658 311.545 75.7591 cv
311.436 75.7591 311.329 75.7486 311.222 75.7299 cv
310.717 75.6338 310.281 75.3824 309.792 75.0513 cv
308.948 74.4676 307.981 73.5895 306.927 72.5873 cv
305.352 71.0862 303.597 69.3096 301.992 67.9282 cv
301.191 67.2378 300.426 66.6477 299.764 66.2469 cv
299.104 65.8404 298.541 65.6508 298.241 65.6596 cv
298.133 65.6667 li
297.959 65.6919 297.773 65.7862 297.537 66.0513 cv
297.126 66.5071 296.706 67.4451 296.36 68.5805 cv
295.829 70.2878 295.414 72.4262 294.919 74.2373 cv
294.669 75.1453 294.403 75.9727 294.062 76.6572 cv
293.89 76.9997 293.7 77.3088 293.463 77.5759 cv
293.227 77.8409 292.934 78.0713 292.567 78.1927 cv
292.331 78.271 292.086 78.3061 291.846 78.3059 cv
290.924 78.2942 290.09 77.8499 289.246 77.2566 cv
287.987 76.3551 286.699 75.0282 285.488 73.7421 cv
284.285 72.459 283.154 71.2099 282.341 70.5329 cv
281.089 69.4813 280.244 68.1319 279.498 67.1101 cv
279.129 66.5989 278.786 66.1721 278.482 65.9098 cv
278.171 65.643 277.952 65.5574 277.735 65.5562 cv
277.638 65.5565 277.528 65.5738 277.386 65.6263 cv
277.291 65.6564 277.052 65.8177 276.785 66.1075 cv
276.31 66.6113 275.733 67.461 275.145 68.4325 cv
274.258 69.8932 273.326 71.6309 272.445 73.0307 cv
272.002 73.7324 271.574 74.3496 271.139 74.8287 cv
270.92 75.0682 270.698 75.2755 270.447 75.4415 cv
270.197 75.6041 269.901 75.7389 269.541 75.7412 cv
269.245 75.7427 268.974 75.6268 268.779 75.4811 cv
268.412 75.2016 268.207 74.8472 268.008 74.4401 cv
267.673 73.7268 267.412 72.8047 267.166 71.7888 cv
266.802 70.2703 266.49 68.5531 266.189 67.2384 cv
266.04 66.5837 265.89 66.0261 265.758 65.6823 cv
265.694 65.5122 265.629 65.3957 265.613 65.3759 cv
265.611 65.3732 li
265.846 65.1786 li
265.688 65.4359 li
265.611 65.3732 li
265.846 65.1786 li
265.688 65.4359 li
265.97 64.9769 li
265.97 65.5129 li
265.85 65.514 265.743 65.4713 265.688 65.4359 cv
265.97 64.9769 li
265.97 65.5129 li
265.97 64.9837 li
266.263 65.4289 li
266.21 65.466 266.097 65.5142 265.97 65.5129 cv
265.97 64.9837 li
266.263 65.4289 li
266.07 65.1357 li
266.317 65.3857 li
266.263 65.4289 li
266.07 65.1357 li
266.317 65.3857 li
266.255 65.3226 li
266.326 65.3766 li
266.317 65.3857 li
266.255 65.3226 li
266.326 65.3766 li
266.318 65.3907 li
266.287 65.4408 266.219 65.596 266.152 65.8107 cv
265.888 66.631 265.59 68.2759 265.3 70.2198 cv
264.861 73.1452 264.418 76.7924 263.974 79.758 cv
263.752 81.2423 263.53 82.5541 263.302 83.5428 cv
263.187 84.0388 263.073 84.4514 262.941 84.7904 cv
262.874 84.9611 262.804 85.1138 262.704 85.2655 cv
262.6 85.4105 262.475 85.5912 262.165 85.7109 cv
262.168 85.7098 li
262.07 85.745 261.961 85.7646 261.855 85.7643 cv
261.648 85.7652 261.463 85.6924 261.334 85.608 cv
261.083 85.4388 260.97 85.2554 260.86 85.0676 cv
260.665 84.7143 260.521 84.2879 260.371 83.754 cv
259.858 81.9051 259.372 78.7859 258.878 75.6491 cv
258.389 72.523 257.893 69.3802 257.422 67.6663 cv
256.823 65.477 256.297 62.9399 255.75 60.9812 cv
255.479 60.0048 255.197 59.1706 254.931 58.6389 cv
254.801 58.374 254.671 58.1883 254.592 58.1099 cv
254.547 58.0692 li
254.534 58.0605 li
254.615 57.921 li
254.615 58.0766 li
254.534 58.0605 li
254.615 57.921 li
254.615 58.0766 li
254.615 57.8778 li
254.665 58.0704 li
254.615 58.0766 li
254.615 57.8778 li
254.665 58.0704 li
254.648 58.0055 li
254.679 58.0659 li
254.665 58.0704 li
254.648 58.0055 li
254.679 58.0659 li
254.643 58.0798 254.49 58.2017 254.318 58.4392 cv
254.009 58.8525 253.629 59.58 253.237 60.5122 cv
252.051 63.3197 250.701 67.9758 249.356 72.654 cv
247.914 72.2393 li
247.914 72.2394 li
f
%ADOBeginSubsetFont: VRKQMX+TimesNewRomanPS-BoldItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFX+TimesNewRomanPS-BoldItalicMT gcheck setglobal} if

1 0 1 <> PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 118 2 <000100300000038f0568001a00ad401e1a20090c3448004601022619b719
020f130e090e0afb09080107fb084019bb0160001800180220400b136013
0e01030928000101b80140b60e13140e0e1318ba020800190168401b1a1a
00052809080c0e1b2813101f0e2f0e8f0eaf0e040e170e1b0aba039601f3
00182b2b103c2b5d2b3c2b10c0003f3c2b3f003c10f4ed870e2e2b057d10
c42b111739011a7a10fa182fe41a0010ed0110c00010ed0110c0870e7dc4
3130005d015d2b01010615141616170721373e0237133637363534262322
072725038ffeb51a252b6c0bfd550b66503320c42d02063733194a0801fd
0568fb8e591818330f062525021e446d02a49a091a172d3508257b00>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 2138 7 <0001ffd3ffe104ab056b003400d44046340c3f26020b260b271b26032c04
20162d262d28292f482f48335e266b26692f860d860ec82f0d0612270025
01221f28282633340035013c1bc926ca270b1a1d1bff1d1d1c1cb802bf40
181bf900170117fc14341d00ff021d3f01cf0102011f010101b802bf401f
00f931fc2621270d0c031d07352d032135141b151514092484101a360a84
2ab80229b335bdf7182b10f6ed4e10f64ded003f3c103c10ed3fed111739
1239ecf4ed5d01105dedf4ed0010ec5df4ed0110edf4edb10602435458b4
0931193102005d593130015d005d5d5d0103232627262623220615141617
161615140606232224232206072313331e02333236353426002726353436
333217163332363704ab71210b1c2a8b514e755197795374dd8c56fefb2b
2236282779260d549c6463854bfef53325eec0578e53221d2e1f056bfe34
6c415e66774b4a8f9073a6616db86533151e020588bf6b83584b8a010868
4d5797dc27171925>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 3678 10 <00020027fe4a03de039f00230035014c407709400f392c122c3124324c22
a51305b037012009200a2b313800350336053209320a300b350f37283832
4800440347054009400a580268027901790293309037a628b811b630b931
eb0ee0371d5a115a315d33035b0f6d0e7d0e8f0eaa10aa23061022231122
23231111221522242e113323100a2a0909b80118401f030b2a0c0cc81000
0303361023142340140c3f10102324481f07230006282eb803454013150b
0c0cd30b0909d30b0a0e10362823101003bb01b2000f0010ffc0400c0e17
3f1f10011f10df100210b80325401037098037012a2c192336101710360a
23b9019800182b2b103c2b4e10f44ded5d2b10e45d71012b0110ed2b103c
2b10c0003f3c7ae9182f7a10e9182f3fed2b3f003c3fed870e2e012b2b05
7d10c4017a10f8182fe47a10f8182fe41112393900111239111239070e10
3c870e3c7dc40171313001715d72005d012b010106070615141716170721
373e02371306070623222726353412363736333216173707220706070615
141716333237361235342603defed91e06091921470bfdef0a3b392c1c85
70604a49492c3b77c363323f3e4d0f26a72425424452161019232354a137
0383fc0d681b2c1e1f141b0625250925576801c5c0473636487b81011bd9
331a48527e24213baed67b341d15204b015e6d454600>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
PMNKFX+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/space 1 def
/one 2 def
/S 7 def
/q 10 def
end
PMNKFX+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 32 /space put
dup 49 /one put
dup 83 /S put
dup 113 /q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 27{/.notdef}rp /M 5{/.notdef}rp /S 29{/.notdef}rp /q 142{/.notdef}rp]PMNKFX+TimesNewRomanPS-BoldItalicMT nfPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [16 0 0 -16 0 0 ]msf377.293 22.3377 mo(S)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [10.6667 0 0 -10.6667 0 0 ]msf386.191 26.3377 mo(q1 )sh%ADOBeginSubsetFont: BQDQMX+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /BQDQMX+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007da6670
676d000000000000089800000631676c79660000000000001f2000002a82
686561640000000000000ecc00000036686865610000000000000f040000
0024686d74780000000000000f28000000406c6f63610000000000000f68
000000226d6178700000000000000f8c000000206e616d65000000000000
0fac0000002c707265700000000000000fd800000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2cb0024354584b53234b515a58381b2121591b21
212121592d0000000001000000050ccd571894305f0f3cf5081908000000
0000a2e31dc200000000c5b1f690fb74fd8c1000080e0000000900010000
00000000000100000721fe4500571000fb74fadf10000001000000000000
000000000000000000100639011c020000000200009104730080038d0049
038d0046038d004c0400000d0239003c0239003d063900110400000c0400
004502aa000d031d0064040000110000003b003b006701e403e105100700
089809f30ae10d460efa1030114813aa1541000000010000001000f2003c
009d000700020010002f00560000062504eb000500020000000100120001
000000000006001800004f4a4b4258422b54696d65734e6577526f6d616e
50534d540000b9005403ecb3032a1f3f411503e4006003e9009f03e500df
03e50004001003e4001003e5003f03e5007003e400ff03e40005ffc003e1
b345453240b803e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd
03e102ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ffc003de
b2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03df0028
001fffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00
b003dd0002004003dab32426329fbf03cc000103ca03c90064001fffc003
c9b20d1132410a03c703b70012001f03b603b50064001fffc003b5b30e11
32004173038d000100c0038d00d0038d00e0038d00f0038d0004006f03a7
007f03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a7
000403ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a50004
005403aa0001006b03aa000103a8036a0022001f038c03940015001f038b
03930015001f03a40393001a001f03a20394001e001f03a10393001e001f
039f0394001e001f039b0394001a001f039a0393001e001f039903940016
001f039803940016001f03970393001b001f03960394001b001f03950393
001b001f03760375001a001f03740375001a001f03a00373b21e1f10411e
039300200393003003930003002003940030039400400394000300000394
00010383036c001e001f03b1036c0032001f036d036c0032001fffc0037d
b2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d0037d
0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0
037c00d0037c000400300373004003730002000003730010037300200373
000300e0037300f00373000200b0037300c0037300d00373000300840373
0090037300a0037300030377036a0029001f0389036ab2281f40b80367b3
3940323fbb0366000100400366b3191d328fbb0366000100400366b3090a
3240b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c
3240b80365b31a1d3240b80365b3090e326b410e0363007b036300020014
036300240363003403630044036300040363b2242f1fba034e006d080040
0e1f7f027f037f047f050430440112bf033200500800001f0012032d003c
080040291f5f3c01376009700980090310092009300940095009056f037f
038f03031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33
900ba00bb00bc00bd00b05b006c006d006e006f006052006300640065006
6006700680069006a006099006900702600b700b800b03100b200b300b40
0b500b051f0701a041850362000100000362001003620070036200900362
000400f0035f00010020035e0020035f0030035f0040035e00040000035e
0000035f0010035f00d0035e00e0035f00050010030f0020030f0030030f
00d0030f00e0030f00050000030f0010030f0050030f0060030f0070030f
00d0030f00060000030f0010030f0020030f0030030f00e0030f00f0030f
0006030f00270000030e0030030e000200e0030e00f0030e0002030e004a
00e0030d00f0030d0002030d002700d002fc0001001002fc002002fc0050
02fc000300d002fc00e002fc0002000002fc001002fc002002fc003002fc
005002fc006002fc000600e002fc00f002fc0002002002fc003002fc0040
02fc000302fc406127c02901b02901a02901902901403c3f413240223f41
321212125f235f255f285fa5046f236f256f286fa5044f234f254f284fa5
043f233f253f283fa5042f232f252f282fa5041f231f251f281fa5048f4c
af4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b22225
32b8ffc0b5b2191a32370f413b02af0001005f02af009f02af00df02af00
03001f02af002f02af003f02af006f02af000402af02af001f02ad002f02
ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad00
3f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02
ad003f02ad0003004002acb23a334f414a02ac005f02ac009f02ac000300
2f02ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac00e002
ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac003f02ac00
03000f035a0001000f035a001f035a003f035a005f035a0070035a000500
cf035700df03570002000f0357001f03570070035700af03570004035a03
5a0357035702ad02ad02ac02ac032c400d31151f00161600000012110810
4110020c004a000d01a8004a000d0198004a000d0189004a000d013f004a
000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d019400
41000d0121400b410db4410d4f410d29410d411002170021000d02150021
000d02060021000d01eb0021000d014e0021000d012c4014210df9210df3
210df1210d9d210d71210d3d210d4110021c001f000d0214001f000d020b
001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f0d371f
0d410d019e0141000d00420141000d001e0141000d001b0141000d01f2b4
0f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c
411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101
001f01f6b224e41f411501f401490401001f01f301490401001f01f10149
00ab001f01f001490067001f01a6003c0125001f01a4b23c811f411501a3
010f019a001f01a200220801001f01a100500401001f019f0149019a001f
019d01490067001f019cb22c621fb8019bb22c791fbc019a002c0101001f
0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016a
b23c2a1f4111016700240201001f0163002502ab001f014c010f019a001f
01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c791fb801
43b223311fb80127b23c811fbc012300500101001f011fb223e41f411501
1d0023019a001f011c00230801001f011b00250801001f010e010f040100
1f010d00220401001f0108b223811fb80106b425e41ff73cbb0125001f00
f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401b21fcf
2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b5
1fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b8020140
0b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156
400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a23721f
393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24e41f26
23b80156b21f5537ba023500070175402c0774076207560751073b073307
2d0720071d071c071408120810080e080c080a0808080608040802080008
14b8ffe0402b000001001406100000010006040000010004100000010010
02000001000200000001000002010802004a00b013034b024b534201b012
4b004b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59b0382b
b00288b801005458b801ffb101018e851bb0124358b90001012f858d1bb9
0001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0052342
180016763f183f123e113946443e113946443e113946443e113946443e11
394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb0475320
5c58b90271026f4544b90270026f45445958b9017a0271455258b9027101
7a4459594bb04753205c58b9002202704544b9003c027045445958b901b3
0022455258b9002201b34459594bb04c53205c58b9014900224544b12222
45445958b901c20149455258b9014901c24459594bb06753205c58b90024
02714544b90050027145445958b9021e0024455258b90024021e4459594b
b8020153205c58b9010f00224544b1222245445958b90c00010f455258b9
010f0c004459594bb01c53205c58b125254544b12c2545445958b1372545
5258b125374459594bb0ab53205c58b125254544b1232545445958b90159
0025455258b9002501594459594bb8010153205c58b125254544b1282545
445958b902080025455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463456523
456023456560234560b08b766818b080622020b164dc4565234520b00326
6062636820b003266165b0dc236544b064234420b161634565234520b003
266062636820b003266165b063236544b0612344b10063455458b1634065
44b26140614523614459b3a67f434b456523456023456560234560b08976
6818b080622020b1437f4565234520b003266062636820b003266165b07f
236544b043234420b1a64b4565234520b003266062636820b003266165b0
4b236544b0a62344b1004b455458b14b406544b2a640a645236144594b52
42014b5058b108004259435c58b108004259b3020b0a124358601b215942
1610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d23
42b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b012
4358b9187e3b211bba01a80400000b2b59b0102342b0112342002b001845
6944456944456944456944737373747373737475752b7373747475184569
447373742b4bb021534bb046515a58b03cb03c45b040604459012b2b2b2b
757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c057575
5943584012bf22cf22025f226f227f228f229f22af2206757559435c58b6
403c9f22ef220375592b2b01747474744544737374747575454473454473
744544737475737373737300757575737575752b2b757575752b752b4358
41220063032d00010003032d0013032d0023032d0033032d0053032d0005
00c3032d00d3032d00e3032d00f3032d00040083032d0093032d00a3032d
00b3032d0004032d032d4518694474747575592b4358b900180332b33035
3238b80332b361663238b80332b3535a3238b80332b3454e3238b80332b3
3c413218b80332b23f330a410f0332000100ba033200ca033200da033200
ea033200fa03320005033203324518694474752b2b2b2b2b2b597300732b
012b7575002b2b2b74002b2b2b732b74012b002b2b017373737474732b2b
00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b00017375007373004569440073730173742b2b2b2b2b732b00732b752b
2b732b2b2b2b2b2b2b2b2b73742b2b00000000>
[10883 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> BQDQMX+TimesNewRomanPSMT AddT42Char 
1 118 2 <00010091ffe4016f00c2000b002b401c0040060b034009403a3509403f35
5f09019f09af090209850c6a7a182b10f671722b2bed003fed3130253216
15140623222635343601002f40412e2e4141c2412e2e41412e2f4000>BQDQMX+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>BQDQMX+TimesNewRomanPSMT AddT42Char 
BQDQMX+TimesNewRomanPSMT /CharStrings get begin
/space 1 def
/period 2 def
end
BQDQMX+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 46 /period put
pop
end
%ADOEndSubsetFont
/PMNKFZ+TimesNewRomanPSMT /BQDQMX+TimesNewRomanPSMT findfont ct_VMDictPut/PMNKFZ+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 209{/.notdef}rp]PMNKFZ+TimesNewRomanPSMT nfPMNKFZ+TimesNewRomanPSMT*1 [0 14 14 0 0 0 ]msf317.369 51.1877 mo(... )[3.5 3.5 3.5 0 ]yshgsave
-117.256 411.429 mo
602.743 411.429 li
602.743 -128.571 li
-117.256 -128.571 li
-117.256 411.429 li
248.497 104.651 mo
248.497 108.327 262.923 111.307 280.718 111.307 cv
298.513 111.307 312.938 108.327 312.938 104.651 cv
312.938 144.587 li
312.938 148.263 298.513 151.242 280.718 151.242 cv
262.923 151.242 248.497 148.263 248.497 144.587 cv
248.497 104.651 li
248.497 104.651 mo
248.497 100.975 262.923 97.9955 280.718 97.9955 cv
298.513 97.9955 312.938 100.975 312.938 104.651 cv
312.938 108.327 298.513 111.307 280.718 111.307 cv
262.923 111.307 248.497 108.327 248.497 104.651 cv
eclp
317.035 156.811 mo
244.38 156.811 li
244.38 95.6112 li
317.035 95.6112 li
317.035 156.811 li
248.497 104.651 mo
248.497 144.587 li
248.497 148.263 262.923 151.242 280.718 151.242 cv
298.513 151.242 312.938 148.263 312.938 144.587 cv
312.938 104.651 li
312.938 104.651 li
312.938 104.651 li
312.938 104.651 li
312.938 100.975 298.513 97.9955 280.718 97.9955 cv
262.923 97.9955 248.497 100.975 248.497 104.651 cv
248.497 104.651 li
280.718 111.307 mo
262.923 111.307 248.497 108.327 248.497 104.651 cv
248.497 104.651 li
248.497 108.327 262.923 111.307 280.718 111.307 cv
298.513 111.307 312.938 108.327 312.938 104.651 cv
312.938 104.651 li
312.938 108.327 298.513 111.307 280.718 111.307 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[73.3091 0 0 61.8545 126.796 136.002 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 224 
/H 189 
/M[224 0 0 -189 0 189 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 224 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 224 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 224 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 224 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMMF
JcLB&`W4HglMuM:JcLB&JcLB&JcO'rmK)&DmK%n>JcLB&JcLB&JcO0uo`=ghp&j7Vp&k6pquZNlP5p17
JcLB&JcLB&dK'%Cq?$QsqZQg#qZc]uoa(3qqZcs%qZQg!q?$EmU&]cFJcLB&JcLB&dK'(DquZg!r<3*'
r<E6+rWrK0r<iH1r!_g!r!`K2r<iN1rWrK.r<E6)r<3'$quZZpciAXtJcLB&JcLB&YQ4P$quZj"rWN6)
rW`B-rs8W2rsJ`5rs\o:rso#=rt,2B!"o2Cr=f)CmhPa7r=f/CrXo/ArX]#=rseu:rX8`5rsA]2rs/N-
rrrB)rWE'"qZ5IPJcLB&JcLB&JcMqRqZ6ZtrWE-&*!HKM"pYD>#mgqH$OdIR%Ls!\&J5Wg',2,q()Hod
rttbRru1nVrZ(kWr>tJNr>tnXrZ(qWru1kS*>fS/()@W!'GD,m&J5Qb%h9$X$k!FM#mgkC#6tJ4"oe`)
"9&B!!U'N8!.k3&!.k3&!36+t!WE-C!s8Z/"U,)7#7(SA$4@4M%1Wm[&.oNg'GVB"(`4,/)\<u0*?H:F
+<_pQ,:"N\,pju<-iYUn.JYIl/,:[n.K:gq-SZqp,paf^,9e<T+<VaI*??+=)AsA/(D[`"'+tlh&.]6[
$k!FM#m^eA"pP57"9\f/rW;uuo)O@BJcLB&JcLB&VuZbsrW4,C!sA`1"U52;#RLhG$k3[W&.oNg'c%T&
)&aG7*Zl1@+X/-V,pjuf.4H_s/1iG+0/#"60etN`1]K<12>fB,2uGT42?,N41H%!D0ek@80.nh./1W2"
.4?Pj,pX]Z+WqjJ*?,n7(`*r&'G:uh%h9$W$OR1G#R:P;"U"r1"9&B#!WE(N!.k3&!29IF!/1FP!C$Sc
!WiH+"9\l4#7(VC$OdIS%hTEf'c%T')B9b=+<_pS,pk#h.P!&&0/,+91GgsH2E*TU3BB5`4?Pbi5!Js1
r]pEJnO!1?r]pHI)Ep>J4Zkhg4$#A^3&``R2)I*E0eb75/1W2!+t+ca,U+BS*uu=>)&F&''+tlf%LigS
$4-tC"pG/5!s8T+quNetJcLB&JcLB&JcPfNrW,.`!WrN-"9eu7#RLhH%1Wp]',23!)&jS;+<i$V-7C>o
/1rS11,LjH2`NiZ4?Yhk5<qM$6:4./77Ka:8,c'Y8cD?\9CGRQ9E%Q_8cD6k7n6$<779O26:*t'5<_7o
/Nc*U3&``Q1bpd>/hJS'-mp;c+s7pI)]9J.'b_/j%h/pT#m^b?"U,#2!s/Q'!ODcX!.k3&!.k3&!;ccq
!BpPd!s8Z0"pYD@$OdLU&JGlp(`FA8+<i'X-n-Yu0/54=2)dKU4$>bl5X@b*77B[984cEG92&#R9hnGZ
:]=2i;>jDi;t3ia;uKVn;>sAr:JX_\9he;?9M7uM8Ou?@7R]^469mb!4Zb\b2`<KJ0eY+0.OZVh+s7pH
)As>+'+kcc$k!CJ#6k>7!s8T+rW0\4JcLB&JcLB&JcPNFr;et]!s8Z0"pbMB$k<g\',;?&*$-4I,pt,l
/hf%;2)dNW4?btq6:=737n?3D92&&T:JXea;,U:j;cH`q<W6%t=8Q+_=o2>"<rc;$<rQ+u<&mlT;Gg:f
:JX_[9M8#M84Q-<6pa1)5!:tf2`<KJ0J4n*-RBu\*ZQ(8().Am%L`^O#R1G8!s8T+rW1%>JcLB&JcLB&
JcP?ArW+qZ!WrQ/"pbMC%1a$a'c7i0+!MsX.4d)+1Gq*O4$>eo6:=:584lNK9hnJ\;,U=k<)lq!<``B%
=T2J%>5VV">j5Pl>l@q*>Q%b)=oMM^='&F'<E3!s;c6Ih:JOVX91hcG7RTU05<V(g2`3BG/hAJ",U+<N
)Aj5'&J#<Y#m^_="9S],rW2KgJcLB&JcLB&JcO$qrW+kX!WrT1#71bI%h]Qm)&s_B,q(5p0JYLE3]oSk
6:=:68P;`P:Jand;cHas<``@)=BSd1>5hb)>l.h)?Mn-e?h[n(?2\%->Q7n+=YNrZ=&r=$<)Z[l:esh[
91_ZD6pj7(4?>GZ1GCC2-m^&Z*#]V-&e>EZ#mUY<"9S`)!Vl_I!.k3&!.k3&!65'p!<E6(!sJl7$4IFW
'GhZ.+=&<a/MJt=3BKDi6UaL:8k_uU:f:4k<E<1&=BSd1>$G51>l@t+?Me+.?d<'S?i47/?2e(a>?b97
=]nj.=&r=#;c6Ff:/";P7n#d25!1h`1GCC1-R9iU)Aa)"%h&dN"pG,3!W`=R!.k3&!.k3&!5\a8!@n3R
"U55?%1j0g)BBtH-nI#,2*!c_5t"158k_uV;,U@n<``C+=^#$6>[786rEf>-ra>>*eR@rTqHs2-r`pgT
>[(E9=]nj.<`N*t;,C"]91VN?5sIIl2D[!;-m^#W)AWtt%1!=I"pG)1!W`=[!.k3&!.k3&!5&:^!<E6(
"9o,=%1s9k*$?LT/2/k=3^,ht7S-6I:Jk"h<E<1'=^#$6>[1Q?ra,M0qdB>0[:/c:r*TG0)I6WR>[(E9
=]ea+<E)mo:JFJR7RTO+4#\uM&1f4T+<244&Io0S"p>#0!<JAaJcLB&U&]cFQ2hR!!<N?,#7:nO'Gqi6
-7UZ)2`j296:FF;9i"Vb<*!(&=^#$7>[:Y7?N"7,@&.61@JO=0?iF@Y?!U]?>?Y03=&r=";,9nZ84>j0
4#\rK.jcD[)&3_m$3p_:!W`>6!.k3&!.k3&!0@0i!<E6)"pbSI',V`6-S-#f2**of77^'H:f:7n='8^2
>?kH>?=*S;qI$+-n6u0$rEggV?<piA>[(B7=&r:!:ej\U7RB:"2DHa1+rqL7%grXI"9JT)_Z58gJcLB&
JcLZ.#6=i,"9o/@&Ju9&+XS`q2`s>n84u]T;cQn$>$G39?!^k:?i"0,@H(_m@/aLU?=$oB>[(B6=&i0r
:.n,G5Wgt\/12S[((gu^"p=u.!QtIp!.k3&!.k3(!<3'=!X&]6%2'L!,UtN-4@)G/9i+bg='8^2>[:ZB
ra5S2VIA%ar*]M2*F<&X>[(B7=&i0q9hIl@4Z>)G,p!m9%1*4A!W`>N!.k3&!.k3&!.k4K!#u"@!sJu?
&f;]</i5XU7S6EQ<**1*>?kH??=.(;@&[SW@JsU5?Q!0U>[(B6=&`'m8k)*.2(g7!)&!Gc"p4o-q>c*I
JcLB&JcLB&ec6Qg!<WK2$kaC"-nmSD6qU3P<EE=->[:ZC?i4<U@A%',?l36X?<pf?=]\U$:.dr=3%ua'
)%m>`"Tnc*!J:B(!.k3&!.k3s!#>S:"9o2E(EY"Y3']u-;,gV#>?tQB?i=BY@?k:"?k-ON?<pc==&i*l
7mT-i-jLh1&.8^G!We/YJcLB&JcLB&a8cnT!sJr>'HADP3'^#0;c[%*?!^lFra=2`MdcTm"^bVC?!CGA
<`;aa5r^ME*#&kh"Tndf!.k3&!.k3&!5\^K!<N?-$4n$t.lBO]:/b4t>[Ce:@+Sh=@/sa8?kQgQ?!:?/
:.IN,/0PiA$O-\7!LWq>!.k3F!.k3?!##A7":#>K)^R1"6qgN\>?tQB?srn@Jmm8>'4>3T?X6l;;b]\B
0d[kR$jQn:!Pe\e!.k3&!.k38!"f55":,GO*[rp185N>j?!guIJmlr5&n#*S?!:9+8O,-_*u,7k"9JT)
a8gelJcLB&JcLf2$NU80"UP\U+Y5Q=9*J6r>[CfGLge;3&R]!Q>Zk!!6T?Y@(CpfU!W`>J!.k3&!.k3&
!/COW!<E9+$4@@]+tboF9iY>%?XSn&^0qR\?X6i8:.75t,8h%""Tnc+ec::%JcLB&JcLB&&c_n4!<WN5
&/c]G4%<"H>$YNDQ!q.1&7AmO>?4Nh4>8$!&IJ^E!<N-!JcLB&JcLB&JcOF'&-2e6"q)"],VV>N:KC\+
?spWUO'rH)?<gN-7m/RQ)A*>]!WrH(K`H])JcLB&JcO0u&-2e6"q)"],r%PR:fgk-?spl\Lg^Hp?<gQ/
8-qI8-6!R*"p4l,Mu\G0JcLB&JcNpn&-2e6"q)"],r%PR:fgk-?sq,cJmf4!?s[)>;+Nl+-6!R*"p4l,
P5p17JcLB&JcN[g&-2e6"q)"^,r%PR:fgk-?sqAjJmnI`%q&^K=&DLP1+!qQ$O-\6!La"?!.k3F!.k3@
!"]/3!sT,F)^R4%85NAl?=719@=hq9@1QaP>ZXcn4u+H(&dnmG!<L":JcLB&JcLB&PlMEt!<WN6&K<#N
4\/CN>@(]F@:=arb@(oh?<gQ/83SdU)\NM_!s&GD!.k3&!.k3&!0.$e!<E9,$P==(0g/'("'8]5@"r+.
@1QaP>ZXcn4u+H(&dnmG!<LLHJcLB&JcLB&LB%GX!<WN6$5"4'0g/'(='K!=NFBM/%q&^K=&DLP1+!qQ
$O-\6!S.7&!.k3&!.k3&!"f22!<E9,$P==(0g/'(='K!=P[V"/%q&^K=&DLP1+!qQ$O-\6!W<"M!.k3&
!.k3&!8%8^!<E9,$P==(0g/'(='K!=]4$b/$t*CH=&DLP1+!qQ$O-Y7!<IlSJcLB&JcLB&d/X[X!<WN6
&K<#N4\/CN>@(^S@>J=q?s[)>;+M!W1+!qQ$O-\6!K7#1!.k3&!.k3n!"T)2!sT,F)^R4%85NAl?=:l`
Jmf4!?s[)>;+Nl+-6!R*"p4l,P5p17JcLB&JcN[g%fl\5"q)"^,r%PR:fgk-@*i>6@JO=B?s[)>;+Nl+
-6!R*"p4l,RK.p>JcMMFJcM;@%fl\5"q)"^,r%PR:fgk-@/")]@FAQp?s[)>;+Nl+-6!R*"p4l,_#T&e
JcLB&JcM&9%fl\5"q)"^,r%PR:fgk-@/aSd@EW'i?s[)>;+Nl+-6!R*"p4l,a8gelJcLB&JcLf2$NU81
"q)"^,r%PR:]jd'?=8Lr`*j0a?<gQ/83SdU)\NM_!s&GK!.k3&!.k3&!/COW!<E9,$ORIb,r%PR:fgk-
@#\U.@1QaP>ZXcn4u+H(&dnmG!<LaOJcLB&JcLB&JcHA_!!**&"q)"^,r%PR:fgk-@$G*.@1QaP>ZXcn
4u+H(&dnmG!<N-!JcLB&JcLB&JcOF'%fl\5"q)"^,r%PR:fgk-@(Tj.@16OM>ZXcn4u+H(&dnmF!s&FV
!.k3&!.k3&!7:cW!<E9,$P==(0g/'(='K!=_I87/"^kYA=&DKp4u+H(&dnmG!<J,ZJcLB&JcLB&aoDqQ
!<WN6&K<#N4\/CN>@(^Z@=ho!@:3DH=&DLP1+!qQ$O-\6!L!M8!.k3&!.k3g!"T)2!sT,F)^R4%85NAl
?=;,gJmnI`%q&^K=&DLP1+!qQ$O-\6!La"?!.k3F!.k3@!"T)2!sT,F)^R4%85NAl?=<M9Jmm)9%q&^K
=&DLP1+!qQ$O-\6!Pnbf!.k3&!.k39!"T)2!sT,F)^R4%85NAl?=<b@Jmli2%q&^K=&DLP1+!qQ$O-\6
!QY7m!.k3&!.k32!"/f.!sT,F)^R4%85KCi>@(]l@DlRb?s[)>;+Nl+-6!R*"p4l,cN&OsJcLB&JcLQ+
"9AN*"q(bM)^R4%85NAl?=8b$]jVFZ?<gQ/83SdU)\NM_!s&GR!.k3&!.k3&!.k1_!!!$#!sT,F)^R4%
85NAl?=9"+[UB\S?<gQ/83SdU)\NM_!s&H$!.k3&!.k3&!.k4'!"T)2!sT,F)^R4%85NAl?=:BRO'rH)
?<gQ/83SdU)\NM_!WrH(K`H])JcLB&JcO0u%fl\5"q)"^,r%PR:fgk-@)??.@0L%F>ZXcn#sL*k)\NM_
!s&F]!.k3&!.k3&!6P9P!<E9,$P==(0g/'(='K!=a^Kd0&7JsQ>ZXcn4u+H(&dnmG!<JAaJcLB&JcLB&
_Z12J!<WN6&K<#N4\/CN>@(^a@=hq`@1QaP>ZXcn4u+H(&dnmG!<JVhJcLB&U&]cFS,a'#!<WN6&K<#N
4\/CN>@(_3@=hq9@1QaP>ZXcn4u+H(&dnmG!<L":JcLB&JcLB&PlM<q!<WN6&K<#N4\/CN>@(_:@=hq2
@1QaP>ZXcn4u+H(&dnmG!<L7AJcLB&JcLB&NW9Ff!<WN6&K<#N4\/BO='K!=L1/#/%q&^K=&DLP1+!qQ
$O-\6!RCat!.k3&!.k3+!!E<'!sT,?&K<#N4\/CN>@(]s@D-([?s[)>;+Nl+-6!R*"p4l,ec::%JcLB&
JcLB&&HDe3!<WN6&K<#N4\/CN>@(^%@CBST?s[)>;+Nl+-6!R*"p4l,r;_ELJcLB&JcLB&fDlE_!<WN6
&K<#N4\/CN>@(^L@?4h*?s[)>;+Nl+-6!R*"p+l-!JLN*!.k3&!.k3u!"T)2!sT,F)^R4%85NAl?=:WY
Lg^Hp?<gQ/8-qI8-6!R*"p4l,Mu\G0JcLB&JcNpn%fl\5"q)"^,r%PR:fgk-@*)i/@1ZjT?<gQ/83SdU
)\NM_!s&Fd!.k3&!.k3&!5edI!<E9,$P==(0g/'(='K!=cs_N7q-aeA?<gQ/83SdU)\NM_!s&Fk!.k3&
!29IF!1X$"!<E9,$P==(0g/'(='K!=pL/Y^dU<Yo?<gQ/83SdU)\NM_!s&G=!.k3&!.k3&!0mNp!<E9,
$P==(0g/'(='K!=raCCeb@(oh?<gQ/83SdU)\NM_!s&GD!.k3&!.k3&!0.$e!<E9,$P==(0g/'("'8]5
@"r+.@1QaP>ZXcn4u+H(&dnmG!<LLHJcLB&JcLB&LB%GX!<WN6$5"4'0g/'(='K!=NFBM/%q&^K=&DLP
1+!qQ$O-\6!S.7&!.k3&!.k3&!"f22!<E9,$P==(0g/'(='K!=P[V"/%q&^K=&DLP1+!qQ$O-\6!W<"M
!.k3&!.k3&!8%8^!<E9,$P==(0g/'(='K!=]4$b/$t*CH=&DLP1+!qQ$O-Y7!<IlSJcLB&JcLB&d/X[X
!<WN6&K<#N4\/CN>@(^S@>J=q?s[)>;+M!W1+!qQ$O-\6!K7#1!.k3&!.k3n!"T)2!sT,F)^R4%85NAl
?=:l`Jmf4!?s[)>;+Nl+-6!R*"p4l,P5p17JcLB&JcN[g%fl\5"q)"^,r%PR:fgk-@*i>6@JO=B?s[)>
;+Nl+-6!R*"p4l,RK.p>JcMMFJcM;@%fl\5"q)"^,r%PR:fgk-@/")]@FAQp?s[)>;+Nl+-6!R*"p4l,
_#T&eJcLB&JcM&9%fl\5"q)"^,r%PR:fgk-@/aSd@EW'i?s[)>;+Nl+-6!R*"p4l,a8gelJcLB&JcLf2
$NU81"q)"^,r%PR:]jd'?=8Lr`*j0a?<gQ/83SdU)\NM_!s&GK!.k3&!.k3&!/COW!<E9,$ORIb,r%PR
:fgk-@#\U.@1QaP>ZXcn4u+H(&dnmG!<LaOJcLB&JcLB&JcHA_!!**&"q)"^,r%PR:fgk-@$G*.@1QaP
>ZXcn4u+H(&dnmG!<N-!JcLB&JcLB&JcOF'%fl\5"q)"^,r%PR:fgk-@(Tj.@16OM>ZXcn4u+H(&dnmF
!s&FV!.k3&!.k3&!7:cW!<E9,$P==(0g/'(='K!=_I87/"^kYA=&DKp4u+H(&dnmG!<J,ZJcLB&JcLB&
aoDqQ!<WN6&K<#N4\/CN>@(^Z@=ho!@:3DH=&DLP1+!qQ$O-\6!L!M8!.k3&!.k3g!"T)2!sT,F)^R4%
85NAl?=;,gJmnI`%q&^K=&DLP1+!qQ$O-\6!La"?!.k3F!.k3@!"T)2!sT,F)^R4%85NAl?=<M9Jmm)9
%q&^K=&DLP1+!qQ$O-\6!Pnbf!.k3&!.k39!"T)2!sT,F)^R4%85NAl?=<b@Jmli2%q&^K=&DLP1+!qQ
$O-\6!QY7m!.k3&!.k32!"/f.!sT,F)^R4%85KCi>@(]l@DlRb?s[)>;+Nl+-6!R*"p4l,cN&OsJcLB&
JcLQ+"9AN*"q(bM)^R4%85NAl?=8b$]jVFZ?<gQ/83SdU)\NM_!s&GR!.k3&!.k3&!.k1_!!!$#!sT,F
)^R4%85NAl?=9"+[UB\S?<gQ/83SdU)\NM_!s&H$!.k3&!.k3&!.k4'!"T)2!sT,F)^R4%85NAl?=:BR
O'rH)?<gQ/83SdU)\NM_!WrH(K`H])JcLB&JcO0u%fl\5"q)"^,r%PR:fgk-@)??.@0L%F>ZXcn#sL*k
)\NM_!s&F]!.k3&!.k3&!6P9P!<E9,$P==(0g/'(='K!=a^Kd0&7JsQ>ZXcn4u+H(&dnmG!<JAaJcLB&
JcLB&_Z12J!<WN6&K<#N4\/CN>@(^a@=hq`@1QaP>ZXcn4u+H(&dnmG!<JVhJcLB&U&]cFS,a'#!<WN6
&K<#N4\/CN>@(_3@=hq9@1QaP>ZXcn4u+H(&dnmG!<L":JcLB&JcLB&PlM<q!<WN6&K<#N4\/CN>@(_:
@=hq2@1QaP>ZXcn4u+H(&dnmG!<L7AJcLB&JcLB&NW9Ff!<WN6&K<#N4\/BO='K!=L1/#/%q&^K=&DLP
1+!qQ$O-\6!RCat!.k3&!.k3+!!E<'!sT,?&K<#N4\/CN>@(]s@D-([?s[)>;+Nl+-6!R*"p4l,ec::%
JcLB&JcLB&&HDe3!<WN6&K<#N4\/CN>@(^%@CBST?s[)>;+Nl+-6!R*"p4l,r;_ELJcLB&JcLB&fDlE_
!<WN6&K<#N4\/CN>@(^L@?4h*?s[)>;+Nl+-6!R*"p+l-!JLN*!.k3&!.k3u!"T)2!sT,F)^R4%85NAl
?=:WYLg^Hp?<gQ/8-qI8-6!R*"p4l,Mu\G0JcLB&JcNpn%fl\5"q)"^,r%PR:fgk-@*)i/@1ZjT?<gQ/
83SdU)\NM_!s&Fd!.k3&!.k3&!5edI!<E9,$P==(0g/'(='K!=cs_N7q-aeA?<gQ/83SdU)\NM_!s&Fk
!.k3&!29IF!1X$"!<E9,$P==(0g/'(='K!=pL/Y^dU<Yo?<gQ/83SdU)\NM_!s&G=!.k3&!.k3&!0mNp
!<E9,$P==(0g/'(='K!=raCCeb@(oh?<gQ/83SdU)\NM_!s&GD!.k3&!.k3&!0.$e!<E9,$P==(0g/'(
"'8]5@"r+.@1QaP>ZXcn4u+H(&dnmG!<LLHJcLB&JcLB&LB%GX!<WN6$5"4'0g/'(='K!=NFBM/%q&^K
=&DLP1+!qQ$O-\6!S.7&!.k3&!.k3&!"f22!<E9,$P==(0g/'(='K!=P[V"/%q&^K=&DLP1+!qQ$O-\6
!W<"M!.k3&!.k3&!8%8^!<E9,$P==(0g/'(='K!=]4$b/$t*CH=&DLP1+!qQ$O-Y7!<IlSJcLB&JcLB&
d/X[X!<WN6&K<#N4\/CN>@(^S@>J=q?s[)>;+M!W1+!qQ$O-\6!K7#1!.k3&!.k3n!"T)2!sT,F)^R4%
85NAl?=:l`Jmf4!?s[)>;+Nl+-6!R*"p4l,P5p17JcLB&JcN[g%fl\5"q)"^,r%PR:fgk-@*i>6@JO=B
?s[)>;+Nl+-6!R*"p4l,RK.p>JcMMFJcM;@%fl\5"q)"^,r%PR:fgk-@/")]@FAQp?s[)>;+Nl+-6!R*
"p4l,_#T&eJcLB&JcM&9%fl\5"q)"^,r%PR:fgk-@/aSd@EW'i?s[)>;+Nl+-6!R*"p4l,a8gelJcLB&
JcLf2$NU81"q)"^,r%PR:]jd'?=8Lr`*j0a?<gQ/83SdU)\NM_!s&GK!.k3&!.k3&!/COW!<E9,$ORIb
,r%PR:fgk-@#\U.@1QaP>ZXcn4u+H(&dnmG!<LaOJcLB&JcLB&JcHA_!!**&"q)"^,r%PR:fgk-@$G*.
@1QaP>ZXcn4u+H(&dnmG!<N-!JcLB&JcLB&JcOF'%fl\5"q)"^,r%PR:fgk-@(Tj.@16OM>ZXcn4u+H(
&dnmF!s&FV!.k3&!.k3&!7:cW!<E9,$P==(0g/'(='K!=_I87/"^kYA=&DKp4u+H(&dnmG!<J,ZJcLB&
JcLB&aoDqQ!<WN6&K<#N4\/CN>@(^Z@=ho!@:3DH=&DLP1+!qQ$O-\6!L!M8!.k3&!.k3g!"T)2!sT,F
)^R4%85NAl?=;,gJmnI`%q&^K=&DLP1+!qQ$O-\6!La"?!.k3F!.k3@!"T)2!sT,F)^R4%85NAl?=<M9
Jmm)9%q&^K=&DLP1+!qQ$O-\6!Pnbf!.k3&!.k39!"T)2!sT,F)^R4%85NAl?=<b@Jmli2%q&^K=&DLP
1+!qQ$O-\6!QY7m!.k3&!.k32!"/f.!sT,F)^R4%85KCi>@(]l@DlRb?s[)>;+Nl+-6!R*"p4l,cN&Os
JcLB&JcLQ+"9AN*"q(bM)^R4%85NAl?=8b$]jVFZ?<gQ/83SdU)\NM_!s&GR!.k3&!.k3&!.k1_!!!$#
!sT,F)^R4%85NAl?=9"+[UB\S?<gQ/83SdU)\NM_!s&H$!.k3&!.k3&!.k4'!"T)2!sT,F)^R4%85NAl
?=:BRO'rH)?<gQ/83SdU)\NM_!WrH(K`H])JcLB&JcO0u%fl\5"q)"^,r%PR:fgk-@)??.@0L%F>ZXcn
#sL*k)\NM_!s&F]!.k3&!.k3&!6P9P!<E9,$P==(0g/'(='K!=a^Kd0&7JsQ>ZXcn4u+H(&dnmG!<JAa
JcLB&JcLB&_Z12J!<WN6&K<#N4\/CN>@(^a@=hq`@1QaP>ZXcn4u+H(&dnmG!<JVhJcLB&U&]cFS,a'#
!<WN6&K<#N4\/CN>@(_3@=hq9@1QaP>ZXcn4u+H(&dnmG!<L":JcLB&JcLB&PlM<q!<WN6&K<#N4\/CN
>@(_:@=hq2@1QaP>ZXcn4u+H(&dnmG!<L7AJcLB&JcLB&NW9Ff!<WN6&K<#N4\/BO='K!=L1/#/%q&^K
=&DLP1+!qQ$O-\6!RCat!.k3&!.k3+!!E<'!sT,?&K<#N4\/CN>@(]s@D-([?s[)>;+Nl+-6!R*"p4l,
ec::%JcLB&JcLB&&HDe3!<WN6&K<#N4\/CN>@(^%@CBST?s[)>;+Nl+-6!R*"p4l,r;_ELJcLB&JcLB&
fDlE_!<WN6&K<#N4\/CN>@(^L@?4h*?s[)>;+Nl+-6!R*"p+l-!JLN*!.k3&!.k3u!"T)2!sT,F)^R4%
85NAl?=:WYLg^Hp?<gQ/8-qI8-6!R*"p4l,Mu\G0JcLB&JcNpn%fl\5"q)"^,r%PR:fgk-@*)i/@1ZjT
?<gQ/83SdU)\NM_!s&Fd!.k3&!.k3&!5edI!<E9,$P==(0g/'(='K!=cs_N7q-aeA?<gQ/83SdU)\NM_
!s&Fk!.k3&!29IF!1X$"!<E9,$P==(0g/'(='K!=pL/Y^dU<Yo?<gQ/83SdU)\NM_!s&G=!.k3&!.k3&
!0mNp!<E9,$P==(0g/'(='K!=raCCeb@(oh?<gQ/83SdU)\NM_!s&GD!.k3&!.k3&!0.$e!<E9,$P==(
0g/'("'8]5@"r+.@1QaP>ZXcn4u+H(&dnmG!<LLHJcLB&JcLB&LB%GX!<WN6$5"4'0g/'(='K!=NFBM/
%q&^K=&DLP1+!qQ$O-\6!S.7&!.k3&!.k3&!"f22!<E9,$P44%0K_j$<a/m<P[V"/%q&^K<_u:L0dR_M
$O-\6!W<"M!.k3&!.k3&!8%8^!<E9,$4n("00;Wu<a&d:]4$b/$t*@F<_l1I0I.PK$3gP6!<IlSJcLB&
JcLB&d/X^Y!<WK4%i?KC3CHSA=^>BB_dSC1#%1eD>#e<d#s'^a)%[,Y!s&F]!.k3&!.k3&!6P9R!<E6*
#n@ao/2omg;cm:2?sq/dK4+af&7AgL=]8!\3%Q3h%g`C@!<JAaJcLB&JcLB&_>k/K!X&c<'cne\5=eUO
>$YKC@+/P9@JjOG?sm>I>#nHk5;al3'b1KP!We\hJcLB&U&]cFRfF*&!X&`:',r5O3^cY>='Am9?XR:>
@=hq>@2!$V?X@#B=&Vd\4"r!$'+>*K!Wg(:JcLB&JcLB&PQ29r!<WN5&/QK>1d4B';cd.-?N4C3@#&1=
@230X?XI,E>$"Wt7mAj]+W(at"p4o-`rL\kJcLB&JcL`0#lt)2#RqFe,VD"_5Y"OH<`rX4?=.(=@$"gB
@K'XK?XI,F>?P!)9h7N//gVJO%1!+>!R1Ur!.k3&!.k3)!!30&";D%I&/H<70/u0c92JSh=^,-:?=.(=
@%(NH@K'XN?XI,F>[(?4<)?7X5WCGF*u>Iq"p=u.e,Y(#JcLB&JcLB&r;[`:!<WH1$kX<u-SIA@6V1!L
<**4+>[:ZB?XNb>V.%DQrEpON?X@&E>[(?4<)H@]6Tm@]-Qj6=$j["=!<N&tJcLB&JcLB&JcO=$*!$*C
"UPVN(`t(V1cdlj8PN&\<`iL/>[:ZB?XN_=cs`_Yr*ULO?X@&E>[(B6<`;jj8ju!+1bC$r(_R8a"Tnf,
JcLB&JcLB&JcO'r*<?0B"9o/A&f2Q5.53YA5Xe7<:Jt.m=BSj5?!Ue9?i+6d@A73-@/aLK?<piA>?Y-0
<DlXe8OYm+2D?U+*>]=m%1*4A!W`=Y!.k3&!.k3&!6,!^!<E6)"pbVK'cJ2@.krqC5=7q59i+_e<`iL.
>?kH>?=*V<qdAVrTOI_*ra-@G?<piA>?Y03<`Dsn:.n)E5<CbX$nEVH)\iqn#mLM6!<J5]JcLB&JcLB&
^&T>X!<NB-#R_+T(E=SF.kie?4[DJ,8ki,[<)m"%=^#$7?![G9ra5J/p0jS%qI';0ra$+@?!LT;=]ea*
<)QOe91VJa5s74b0InIn*#B8!$O?q>!W`=e!.k3&!29IF!1!Tu!<E6("U>>B&/,j"+=/Hg1,_0V&4&]S
8k_uV;H-Xt=BSg3>?q/5s'GV1q-^%-s'b\1rEoP1-='n^>?b96=BAL%;G^+^8k2984utSW/h&(i*#K>#
$jd.B!s/K(])[E_JcLB&JcLf2$NU80!sAf6$4RO[(EFG9+sncl1,_-T5XRt28k_uV;H$Oq='/U/>$G6:
ra#M0r*T,)\RGMGpL*o+ra,S0.9p+^>$>'2=&r=";G^+^8k;B<5Wq+c1+t.*,9Ij@'+bT[#R1D6!W`><
!.k3&!.k3&!/:LQ!<<0O!sAf6$4IFX'c@u6,:=rn0f1jN4[;A'7nH?J:Jaqf<)lt#=BSg2>?b?;ra#J/
qHr]!fjXS^qI'/,rEfJ//6lFa>?Y35=BAO'<)Z[k:JFMS84>m25!(_]0eOt(,9RsD'bV#d$4$h=!s8H&
`rL\kJcLB&JcLB&quAMR!<N<)"9o,<$k<g^()\)6,:4ij0/>CE3^#\o6q0^=92//X;,U=l<E<1'=BSd1
>$G51>l@t+?M7aT?iXR.?i47/?2e(b>?b97=]nj/=&r=#;c6Ih:/+AR84H!65<V%e2)6g9.4-8^*#TM*
&Io3V#R1D6!WiB'bQ*4pJcLB&JcLB&o)L`N!<N<)"9f#9$4ICV',DE(*[)aT.4d,,1c@?U4[25"77Tm@
92//W:f1+h<)lq!='&L+=]np3rEK5*qd&o%j^8!nq-Nr(rET;*s'#D)0j%LY<`W4";c6Ih:JOVW8k;H@
6U<q"4#o5V1+t1--R9iV)]9D)&J#9W#mUY;!s/Q'!V-5B!.k3&!.k3&!6P:$!<E6'!sAc3#71_G%M06f
(E"26+X8<^.kND01c@<S4?c"r6UaI78P2WL9hnJ\;,U=k<)lq!<rQ2#=T2J$>5qh*>P;=n?1qP#>Pq\(
=oVV'=#a5]<E3!s;c6Ih:JOVX91hcH7R][15X%:k3&WTK0.e\&-6jZT*#TP-&eGN]$4-qA"U"o/!W`>q
!.k3&!.k3&!.k3e!<*!\!WiH,"U52;$4@:R&JGlq)&jS<+XAB_.P*2+1,LmK3]fJg5X@b*77Kd<8P2WL
9hnGZ:f1(f;H$Lns&B"urDrhtq,m/iq,mPrrDrnt4B,9Y;c6Lj;,C%a:/+DT91h`F7R]^45sRUs4$#>Z
1bpa;/1N%p,U+<N)]9G,'+k`a$OR1F"pG,3!Wr?%qZ)3JJcLB&JcLB&\,cI.0`hFZ"9eu7#RLhH%1a!_
'GVE%)]^"D,:+Zb.P*2*0f(XE2`Wo]4[)(q5sdq,77KcV84cBF91qrP9heAX:J^pcrDEJjmo0*]r_`Vj
5Yk0N:/+GV9M8#N8P)HC7R]^56U<t%5!;"h3B&iQ1GLO8/1N%p,pOQT*?,k5().Am%h/pS#m^b?"U"o0
!Wr?%!!%TNJcLB&JcLB&XoSD$-NX>O!sAc3#7(VC$OdLU&J>cm(Dn&1*?QCJ,UFfd.P!)'0JP=>2%hf+
3&s#]4?Ykm5X7V%6UO707K,dV8,c'Y8c23N9DhE]8cD9\8,bt;779O26UF()5X.Fq4?GSa3&``Q1bpd>
/hJS'-mp;d+sA$K*#]Y1'bh8m%h9$V$4-tC"pG,4"9&B$!JLN*!.k3F!.k3(!<3*"!WE-[!sA`1"pP;<
#mq%K%1a!^&el&r(`=53*?QCI,:"Q^-n-Vr/1iJ-0JP==1c70M2`NfX3]fDc4T7MD55meE5k@;>5lO"J
55m\^4?P\e3]T2[2`EWP1c$mA0eY.2/1W2!-mBua,U4HT*uu=?)&O,('G:uh%h/pT$4-tC"pP56"9S`-
!rW/!!.k3&!.k3&!.k4H!;lls!]C,_"9\l4"pYD?$47.L%1Wm[&JGin()If*)B0\<+!;^N,:"Q^-RU;k
.Olr"/M/S.0/,(71&`s.1]90+2?,T12>oB21DMZ#0ek@90/"q0/M&D&.Ocbn-RL,b+sS9T+<MXF)]BS2
(D[`"'+tlf%LigS$OR1G#6kA9"9\f/rW;uuXT3qQJcLB&JcLB&mK!.cr;nSR!sA`1"U52:#RC_D$OdFQ
%M'*_&J>`k'c%T%(`=52*#ot?*ZlLI+X/*T,:*77s!I^mr@%+`r@%Xms!I^k#p^`?+sJ0R+<M[L*ZZ4?
)]BS2(Ddi%'GD)k&J,H_%1EXQ$4."E#6tG:"U"u-"9&B"!O)QU!.k3&!.k3&!94(V!W<*!""49T"U,)7
#6tM?#mgqH$OdFQ%Ls!\&.oNf',)&p'c%Q$(Dmu,)&aFm)uUcS*V1?M*W6uW)[%&t)&X89(`*u(()7Pu
',(uk&J,Ka%LrpW$k!FM#mgkC#6tG;"U,#3rWE*#qZ4#'JcLB&JcLB&JcOC&q>pNrr<*$%rrrB+rs/Q0
rX&T3rsSf7rseu<rX]#?r=T#Ar"JH3r"K)Crt>;Crt,/?rso#;rs\o8rsJ`3rs8W0rW`B+rWN0%r;ufr
eGt1$JcLB&JcLB&WW;hqquZg!r<3'&rW`<+rWrK0rsJc5q[<0-pC6m+q[<?0rX&N/rWiE,r<<-&r<)s!
q#T%HJcLB&JcLB&JcM;@p]:3mqZHd"rri6'q$,mbq?Hg#qulm!q?$Emec::%JcLB&JcLB&N<&YQ!!2fq
oE4=\oE4gho`<SCJcLB&JcLB&JcLB&qZ,s`i<&?HdK"k!JcLB&U&]cFJcN[gf`C::JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U&]]~>

%%EndBinary
grestore
np
grestore
gsave
248.497 104.651 mo
248.497 108.327 262.923 111.307 280.718 111.307 cv
298.513 111.307 312.938 108.327 312.938 104.651 cv
312.938 144.587 li
312.938 148.263 298.513 151.242 280.718 151.242 cv
262.923 151.242 248.497 148.263 248.497 144.587 cv
248.497 104.651 li
eclp
-117.256 -128.57 mo
602.743 -128.57 li
602.743 411.43 li
-117.256 411.43 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 248.497 97.9955 ]ct
/2 
<<
/ShadingType 2 
/BBox [-4.64508e+06 -2877389 4.49892e+06 3.98061e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!/!!!!0!!!!0!!!!1!!!!1!!!!2!!!!2!!!!3!!!!4!!!!4!!!!5!!!!6!!!!7!!!!7!!!!8!!!!9
!!!!9!!!!:!!!!;!!!!;!!!!<!!!!=!!!!>!!!!>!!!!?!!!!@!!!!@!!!!A!!!!B!!!!C!!!!C!!!!D
!!!!E!!!!E!!!!F!!!!G!!!!H!!!!H!!!!I!!!!J!!!!J!!!!K!!!!L!!!!M!!!!N!!!!O!!!!P!!!!Q
!!!!Q!!!!R!!!!S!!!!T!!!!U!!!!V!!!!W!!!!X!!!!Y!!!!Z!!!!Z!!!!\!!!!]!!!!^!!!!_!!!!`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 248.497 97.9955 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~%1WjX%LrsY%M''\%hB0]%hK9`&.fBa&.oKd&J>]h&eYfi&ebol',2,p'GV>t'bqGu'c%Q#()Ic'(Ddl(
(Ddo*(`4,.)&X;0)&X>2)B'P6)]Kb:*#oq<*#ot>*??1B*Zc@D*ZcCF+!2UJ+<VgN+X&!P+X&$R+sJ6V
,9nEX,9nEY,U=W],paia-71&d-71&e-RU8i-n$Jl-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t3
0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3&ilW3B9,]4$,Mc4?P_g4Ztqk5!D.o
~>
]
>>
409200 0 409200 676237 [-4.64508e+06 -2877389 4.49892e+06 3.98061e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
grestore
gsave
248.497 104.651 mo
248.497 100.975 262.923 97.9955 280.718 97.9955 cv
298.513 97.9955 312.938 100.975 312.938 104.651 cv
312.938 108.327 298.513 111.307 280.718 111.307 cv
262.923 111.307 248.497 108.327 248.497 104.651 cv
eclp
-117.256 -128.57 mo
602.743 -128.57 li
602.743 411.43 li
-117.256 411.43 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 248.497 97.9955 ]ct
/3 
<<
/ShadingType 2 
/BBox [-4.64508e+06 -2877389 4.49892e+06 3.98061e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!(!!!!(!!!!)!!!!)!!!!*!!!!*!!!!*!!!!+!!!!+!!!!,!!!!,!!!!-!!!!-!!!!-!!!!.!!!!.
!!!!/!!!!/!!!!/!!!!0!!!!0!!!!1!!!!1!!!!1!!!!1!!!!1!!!!2!!!!2!!!!3!!!!3!!!!3!!!!4
!!!!4!!!!5!!!!5!!!!6!!!!6!!!!6!!!!7!!!!7!!!!8!!!!8!!!!9!!!!9!!!!:!!!!:!!!!;!!!!;
!!!!<!!!!<!!!!=!!!!=!!!!>!!!!?!!!!?!!!!@!!!!@!!!!A!!!!A!!!!B!!!!B!!!!C!!!!C!!!!D
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 248.497 97.9955 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~"pP89"pYA<#6tJ=#7(S@#RC\A#RC\A#RLeD#mgnE#mq"H$47+I$4@4L$O[=M$O[=M$OdFP$k*OQ$k3XT
%1NaU%1NaU%1NdW%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fEc&J5Te&J5Te&J5Wg&eYfi
&eYfj',)#m',)#n'GM5q'GM5q'GM5r'bqGu'bqH!()@Z$()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X;1
)B'M4)B'M4)]K_8)]K_8*#oq<*??.@*??.@*Zc@D*Zc@D+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+sJ3T
~>
]
>>
409200 0 409200 676237 [-4.64508e+06 -2877389 4.49892e+06 3.98061e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
grestore
312.938 104.651 mo
312.938 108.327 298.513 111.307 280.718 111.307 cv
262.923 111.307 248.497 108.327 248.497 104.651 cv
248.497 100.975 262.923 97.9955 280.718 97.9955 cv
298.513 97.9955 312.938 100.975 312.938 104.651 cv
cp
312.938 104.651 mo
312.938 144.587 li
312.938 148.263 298.513 151.242 280.718 151.242 cv
262.923 151.242 248.497 148.263 248.497 144.587 cv
248.497 104.651 li
@
%ADOBeginSubsetFont: VRKQMX+TimesNewRomanPS-BoldItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFX+TimesNewRomanPS-BoldItalicMT gcheck setglobal} if
1 1328 5 <0002ffc300000526054c001e002901134063290a0c103f07140f39231b23
1c38113b2238294701491c48226707681579158c159c099c15ad09ad15b9
09cb09dd0913001f292901080e091d080701061d07150f141d15010e1d08
0f29271f2800211d001f0f2901011f0e0f140f40140c3f0e0e0f27bd0366
0015001f015f001d0366403221210715020807080e2a280f0e10244d1a40
140c3f1a40120b3f1a401e3234201a01001a201a301a401a701aa01ae01a
071ab8039f400a2b500e010e170e2a0a38b9021000182b2b103c2b7210fd
5d712b012b2be92b103c2b10c0003f3c3f12392fede610ed870e2e012b2b
057d10c401113939001112392b1112393911123939180010ed0110c00010
ed0110c00010ed0110c007103c3c3130015d012b2b010306151416170721
373636373637133635342627372132171615140023222716333236353426
23220702456e173c6a0dfd6a0b5446171122fb1a42570b0219dd6196fed5
fd4c59412b8a9e665a131c026ffe8650212e2f022525011f231776035d56
25253302253858b0aafefd5d08fc895d6702>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
PMNKFX+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/P 5 def
end
PMNKFX+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 27{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 29{/.notdef}rp /q 142{/.notdef}rp]PMNKFX+TimesNewRomanPS-BoldItalicMT nfPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [20 0 0 -20 0 0 ]msf273.697 135.947 mo(P)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [13.3333 0 0 -13.3333 0 0 ]msf285.914 140.947 mo( )shgsave
-117.256 411.429 mo
602.743 411.429 li
602.743 -128.571 li
-117.256 -128.571 li
-117.256 411.429 li
137.907 191.797 mo
137.907 195.473 152.332 198.453 170.127 198.453 cv
187.922 198.453 202.348 195.473 202.348 191.797 cv
202.348 231.732 li
202.348 235.408 187.922 238.388 170.127 238.388 cv
152.332 238.388 137.907 235.408 137.907 231.732 cv
137.907 191.797 li
137.907 191.797 mo
137.907 188.121 152.332 185.141 170.127 185.141 cv
187.922 185.141 202.348 188.121 202.348 191.797 cv
202.348 195.473 187.922 198.453 170.127 198.453 cv
152.332 198.453 137.907 195.473 137.907 191.797 cv
eclp
206.416 243.866 mo
134.089 243.866 li
134.089 183.975 li
141.289 183.975 li
141.289 182.666 li
206.416 182.666 li
206.416 243.866 li
164.929 238.302 mo
166.621 238.359 168.358 238.388 170.127 238.388 cv
171.896 238.388 173.633 238.359 175.325 238.302 cv
188.744 238.302 li
188.744 237.165 li
196.975 235.96 202.348 233.975 202.348 231.732 cv
202.348 191.797 li
202.348 191.797 li
202.348 191.797 li
202.348 191.797 li
202.348 188.121 187.922 185.141 170.127 185.141 cv
152.332 185.141 137.907 188.121 137.907 191.797 cv
137.907 191.797 li
137.907 231.732 li
137.907 233.969 143.245 235.947 151.435 237.154 cv
151.435 238.302 li
164.929 238.302 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[72.9818 0 0 61.8545 16.5055 48.9477 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 189 
/M[223 0 0 -189 0 189 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN.X
JcLB&^]<?piW+Q1JcLB&JcLB&JcO-tklL/QkQ1GYJcLB&JcLB&JcLB&fDtOEp&`hJp&b!iquMQQJcLB&
JcLB&JcOX-pAt*lqZHZtq??QsoEY'oq??a!qZ?g"qZ?KmOoU(6JcLB&JcLB&iW/cTqZ?]ur<3'&rW`<+
r<W<-r!N3,p'g^(r!NB/r<W?,rW`<)r<3$#quZZpc2`FrJcLB&JcLB&ZN0h&quZj"rWN3(rW`B-rs8T1
rsJc6rXAc8rso#=rX]&@r=So>o+V!6r=Su>rX]#=rXJi8rsSf5rsA]2rWiH-rWW9(r<*!"q>o1JJcLB&
JcLB&JcN1YqZ6WsrWE0'rWODK"pYA=#mgqG$O[@P%1WjY&.fEc&ebom'GV>u()Ic(rtt_QrYk_Smi;6E
rYkbR+W)%4(D[c$'bh>q'+toi&.f?_%LijU$O[:K#mgkB#6kD3"oe`)"8r;u!T*m/!.k3&!.k3&!4Dn*
!WE0"""49T"U,)7#7(SA$47.L%1NdX&.oNg',2/s(Ddo+)B0V8*??1B+!;^++o`bd,QB%g-2f1Z-iGCk
-3#7i,:ar^+WqmL+!)FC*#fh8)&O/+()7Ms'+tlg%hB-Z$k!FM#m^eA#6k>8"9e]+rW;uujoBu5JcLB&
JcLB&[fH=,rW4VQ!sA`1"pP;<#mq"I$k3[W&.oNg'GVB")&aG6*?H:F+X/-U,palc-n$Mo"tD,S/M/S-
r\+:*r\=@,n2(&!r\=C+1G:C6/hJY+.k<(u.4?Pj,paf]+sA'N*ZZ4>)AsA.().Dp&J,H_%1EUP$4-tC
#6k>8"TAN&!rW/e!.k3&!.k3X!.k3*!;upY!<N<)!sA`1"pP;<#mq%K%1a!^&el&r(E",1*?H:G+sS?Z
-R^Dn.kE8)0/,+91GgpG2E*QS3B@("s#^3Br]U3Do0<.:r]U9Dr];#Z3]T2[2`EWP2)I*E0eb76/M&D%
.4?Pj,pOES+WhaG*#]\3()7Ms&J,H_$k!CK#RCY>"U"r1"9&B#!N,pL!.k3&!.k3*!;urt!]^>c"9eu7
#RLhG$k<d[&el&s(`F>6*ZuXO,pk#h.kE8*0JP@?2)[BQ3BB5a4[)(p5X@\&6UO70r^HiVr^ZoXm7I7I
r^ZrW(I^b\6pj=.6:!k$5<_4m4$#A]2`<NM1F=k20.ne+.4?Pi,9e6P*?5t7(DRVs&J,E]$jm:H#6k>8
"9S`-!rW/%!.k3&!.k3&!/1FP!BpPd!s8Z0"pYD?$4I@S&/#Zm(E"/4+!DjS-7C>p/MAe51c70N3BK>d
5!M;!6:=417Rp!?8P2TJ92&#R:&[oe:]4,d;=mc`;>j>i:]F2h9b'ij91hfJ84Z6?779O267bDf5!;"i
3]K&U1bpd=/hAJ#-RBu\*uu:=(`!f!&J#?[$OI(D"pG,4!s/Q&!ODcX!.k3&!.k3)!<*!^!WiH+"9eu8
#mq(N%hTHi(E"/4+!MsW-n6c#0JYIC2`Wr^5!M>"6UXC684cEH9MA/U:/=\_;,L4h;cEZpr`/ksqH*,f
qH*SqrDiksr_j&";Gg7e:JX_@9h\5R8kDQD7R][25sIOq4#o8Y1bpa;/Li.q,U+?P*#]V.'+tid$k!@I
#6k;6!s/Q'!Or,]!.k3&!.k3(!<3'Z!<N?*"9f#9#n%1Q&JGlq)B9hB,:4fh/MAk92E3`[5!M>#6q0[;
8P;`O:/=\_;,U=k<)lq!<rQ2"=T2J$>52=d>khP$>5_V(=T2A\<`W4#<)cdo;,L.c:/+DT8kDNB6pj7*
5!1kc2Dd0C/h8@t,U+<N)Aj5'&J#<Y$4$k@"9S`-rW2HfJcLB&JcLB&JcO-trW+bU!sAc3#RLkJ%h]Ql
)&s_A,UY&m0/>@B3BKAg5sn(184lNK:/=\`;H$Oo<E<.%=BPQ*r`];*rET2)rEf)%pg<MsqHa&)rEK8)
2d'9c=BAR)<E3!s;Gg7d:/+AR84Q*969m^s3B&fN0J+b&,pFEO)Aa,$&.T'T#R1G8!s/N)!V?AD!.k3&
!.k3&!7(ZE!A=KV"9f#:$4RLY'GhZ.+=&<a/MJt<3'08f6:=:68P;cQ:Jk"g<)lt"='/U.>$Co0r`oD-
qd0#(s'OJfp0[]'r*B>-r`_$Z>$5!1='&F&<)Z[l:ej_X8k;E>69m^r3ArZI/Li+n+W_R>'bV&e$OI%B
"9S`)!Vl_I!.k3&!.k3&!6kKq!<E6("9f#:$P!a_(E+;;,q(8s1,V$Q5!_P)84lNL:Jaqf<)lt#=BSd1
>?h)3ra#J/qHro'pgE,jlsTZsrEfJ/r`h$Z>?Y35=BAO'<)Z[l:JOSU84H!55<Lqa1GC@/,pFBL(_dPl
$jd.C"9S]+!W<"M!.k3&!.k3&!6Y?n!<E6("U>>A%MBKo*?ZUU/2/k=3^#br7S$-G:/Fhe<E<1'=]np4
>?kE=?2e1-?hIh'@DlUI@/F=1?N+4Z>[1K:>$4s/<`N'r;,9nZ8Oc*65!(_\0eFh#+WVI:&e>BX#6b54
!W`9%K)gK'JcN.XJcM/<'`e=:!sAf6$P!db)BL(M.kib<4$Q%B77^$F:Jk"h<EE:*>$G39ra#P1r*T5,
Vd]U5qI'5.ra$sX?!LT<>$4s/<`E!p:JFJQ7RKC&3&E<?-mKfQ(D@;f#mUV9!W`>4!.k3&!.k3&!1!Tu
!<E6("U>AD&JZ3+,:P3"2EO)h%n9,`:/Fhf<``C+>$G6;?2e10?hn*&@JF:,@/XFY?=$oC>[(E9=]\X'
;c-=a8Oc'34#\rJ.O?2V((q)a#R(;3!<Kk6JcLB&JcLB&PQ29r!<N?,#R_.V(`jnN/i,IM5nHIU9MSG`
<EE:*>$G6;?!^k:?i+6$@I@S$@/XFU?=$oB>[(B6=&i0r:J=>L69[Cd0.J4h)&*Vj#R1D5!<L":JcLB&
JcLB&OT5jl!WrT3$kO-m+X\it3Bdp?7nQNQ;cQn%>$G6;?!dM;qd>k$j^J'pra-^Q?<pf?>$4p-<)HC`
845['2(pC&*#B1r#mLJ5!<L.>JcLB&JcLB&NrTRh!<WK2$P4'o,:bK.&3`HP9M\Pd='8^2>[:ZB?XN_=
Qsni[r*]M2)I?]T>Zt93<Du^g845[&1Fsgn(_R8`"Tnf,q>c*IJcLB&JcLB&g&N#l!<NB/$P4'o,qLl7
5t=RE;cQq'>?kH??XN_=a^LuRrEpON?X@#D>?Y-0<)?:[6Tm=[-Qa0;$j["=!<N0"JcLB&JcLB&JcOC&
(BFR>"pkbS*$m0o4[_n<;H?n'>[:ZC?i=BR@@gp+?l*0W?<pf?=]SHt91;'(0..eV&./UE!WdlQJcLB&
JcLB&e,U3a!X&`:&fMuG2*FB$;,p_%>[:ZC?iFHS@@1L%?kHaP?!LT9<`2X^5W:;A*#&hf!sJc-!JUT+
!.k3&!.k3u!"o;7"UP\T+"9!.6qgHY=^,0<?iFHS@?P'u?jpCL?!LQ7;b]bG2(KgS(_@#Y!s&FZ!.k3&
!42`X!1a*%!<NB.$P=:%/iZ0i;-$k*?=3\>qdG(bg0stg&RSjM>$"Tq6p!(L*"r_c"9JV<!.k3&!.k3&
!1Em#!<NB/%29g11-J-&<EWR5?XR:>@=hq<@K'XG?X6i9:e<l/.N]E9#mCA2!Q"hg!.k3&!.k3;!"]/4
"UGSR+"B078l8Yo?=.+=@=hq7@1cmT?<gT29LCck+rCju"Te]*`;kJiJcLB&JcM#8&HMt;#nIgq/3$!k
;d!C5?t!Jq@E`-k?sd2C<DGtE0-hDI$3gS6!QY7m!.k3&!.k35!"K#3"UP_W+tboF:/tJ'?N=Jd@E;jf
?sQu<:e*Z',oRC("p4o-r;_ELJcLB&JcLB&gAh`b!sT)D)'^dr7Sd#g?=70N@?Y+2?s[&=;+Nl+-6!R*
#6P#.!.k3&!.k3&!.k4'!"T)4"ptq\,VM5K:f^e,?spTTOC8T+?<gT08NnmV*"r_c!s&H(KE-T(JcLB&
JcO=$%flb:$5"1%0K_j%<a/m<@(p'/@1$CK>Zalq5;OZ,'*J^K!s/LY!.k3&!.k3&!7CiX!<WN5&K2oK
4@`4K>@(]F_-r40#@LkC=Ah^T1C#9I'+>*J!We/YJcLB&ZiG[XSH'0$!sT)E)C."!7o35j?=717@=hq;
@1QaP>Zalq5;OZ,'+>*J!Wg%9JcLB&JcLB&RK*j!!sT)E)C."!7o35j?=71:@=hq8@1QaP>Zalq5;OZ,
'+>*J!Wg.<JcLB&JcLB&QN.Ns!sT)E)C."!7o35j?=71=@=hq5@1QaP>Zalq5;OZ,'+>*J!Wg7?JcLB&
JcLB&PQ29r!sT)E)C."!7o35j?=7/L@=hq2@1QaP>Zalq5;OZ,'+>*J!Wg@BJcLB&JcLB&OT5jl!sT)E
)C."!7o35j?=3b@K42i0%q&^K=Ah^T1FF.U$jQk9!W<"M!.k3&!.k3&!8@Ja!<WN5&K2oK4@`4K>@(]F
\7(S0&7AgL=Ah^T1FF.U$jQk9!<@]OJcLB&JcLB&fDlE_!sT)E)C."!7o35j?=70Q@?=n,?s[)?;Fs)/
-QEd.#6Ou.!JCH)!.k3&!.k4$!"T)4"ptq\,VV>N:f^e,?sp]WNF<0%?<gT18O#!Y*"rG`#6P#.LB)o+
JcLB&JcO4!%flb:$5"1%0K_j%<a/m<@)69/@0^1H>Zalq5;NNl*"r_c!s/L\!.k3&!42`X!1a*#!<WN5
&K2oK4@`4K>@(]Fp0iP]e6rkq?<gT18O#!Y*"r_c!s/M<!.k3&!.k3&!1Elu!<WN5&K2oK4@`4K>@(]F
q-ek`d:!Pn?<gT18O#!Y*"r_c!s/M?!.k3&!.k3&!1*Zr!<WN5&K2oK4@`4K>@(]Fr*b1cc=%5k?<gT1
8O#!Y*"r_c!s/MB!.k3&!.k3&!0dHq!<WN5&K2oK4@`4K>@(]F@:=arb@(oh?<gT18O#!Y*"r_c!s/ME
!.k3&!.k3&!0I6k!<WN5&K2oK4@`4K>@(\;@"Vn/@1QaP>Zalq5;OZ,'+>*J!Wi6"JcLB&JcLB&JcOO*
%flb:$5"1%0K_j%<a/m<@(9X/@1ZgQ>Zalq5;OZ,'+>*J!W`:Q!.k3&!.k3&!8%8^!<WN5&K2oK4@`4K
>@(]F]4$e0%:ELI=Ah^T1FF.U$jQk8!WdrSJcLB&JcLB&eGp*\!sT)E)C."!7o35j?=70T@?"\&?s[)?
;Fs)/-QEd&$jQk9!J^Z,!.k3&!.k4!!"T)4"ptq\,VV>N:f^e,?spfZMI?`t?<gT18O#!9-QEd.#6P#.
M?&5.JcN.XJcM>A%flb:$5"1%0K_j%<a/m<@.n#\@FS]r?s[)?;Fs)/-QEd.#6P#.^AricJcLB&JcM5>
%flb:$5"1%0K_j%<a/m<@/45_@F8Ko?s[)?;Fs)/-QEd.#6P#._>o/fJcLB&JcM,;%flb:$5"1%0K_j%
<a/m<@/OGb@Er9l?s[)?;Fs)/-QEd.#6P#.`;kJiJcLB&JcM#8&HMt<$5"1%0K_j%<a/m<?t!Jq@EW'i
?s[)?;Fs)/-QEd.#6P#.a8gelJcLB&JcLo5%KQY9$5"1%0K_j%<a/m<!+:FfaC,Te?<gT18O#!Y*"r_c
!s/N%!.k3&!.k3&!.k4*!"T)4"ptq\,VV>N:f^e,?spKQP@5#1?<gT18O#!Y*"r_c!s/K'JcLB&JcLB&
JcOF'%flb:$5"1%0K_j%<a/m<@(Tj/@1?UN>Zalq5;OZ,'+>*J!<N:T!.k3&!.k3&!7_&[!<WN5&K2oK
4@`4K>@(]F^1!"0$=I1F=Ah^T1FF.U":PM;!We&VJcLB&JcLB&dJsdY!sT)E)C."!7o35j?=70W@>\Iu
?s[)?;Fs)/#:CK)$jQk9!K$l/!.k3X!.k3A!"T)4"ptq\,VV>N:f^e,?sr\:Jmm/;%q&^K=Ah^T1FF.U
$jQk9!P\Vd!.k3&!.k3>!"T)4"ptq\,VV>N:f^e,?sre=Jmm&8%q&^K=Ah^T1FF.U$jQk9!Q"hg!.k3&
!.k3;!"T)4"ptq\,VV>N:f^e,?srn@Jmlr5%q&^K=Ah^T1FF.U$jQk9!Q>%j!.k3&!.k38!"f56"ptq\
,VV>N:f^e,?smDOJmli2%q&^K=Ah^T1FF.U$jQk9!QY7m!.k3&!.k35!"K#3"ptq\,VV>N:f^e,?iXSe
@E;jf?s[)?;Fs)/-QEd.#6P#.r;_ELJcLB&JcLB&gAh`b!sT)E)C."!7o35j?=70N@?Y+2?s[)?;Fs)/
-QEd.#6P#.!.k3&!.k3&!.k4'!"T)4"ptq\,VV>N:f^e,?spTTOC8T+?<gT18O#!Y*"r_c!s&H(KE-T(
JcLB&JcO=$%flb:$5"1%0K_j%<a/m<@(p'/@1$CK>Zalq5;OZ,'*J^K!s/LY!.k3&!.k3&!7CiX!<WN5
&K2oK4@`4K>@(]F_-r40#@LkC=Ah^T1C#9I'+>*J!We/YJcLB&ZiG[XSH'0$!sT)E)C."!7o35j?=717
@=hq;@1QaP>Zalq5;OZ,'+>*J!Wg%9JcLB&JcLB&RK*j!!sT)E)C."!7o35j?=71:@=hq8@1QaP>Zalq
5;OZ,'+>*J!Wg.<JcLB&JcLB&QN.Ns!sT)E)C."!7o35j?=71=@=hq5@1QaP>Zalq5;OZ,'+>*J!Wg7?
JcLB&JcLB&PQ29r!sT)E)C."!7o35j?=7/L@=hq2@1QaP>Zalq5;OZ,'+>*J!Wg@BJcLB&JcLB&OT5jl
!sT)E)C."!7o35j?=3b@K42i0%q&^K=Ah^T1FF.U$jQk9!W<"M!.k3&!.k3&!8@Ja!<WN5&K2oK4@`4K
>@(]F\7(S0&7AgL=Ah^T1FF.U$jQk9!<@]OJcLB&JcLB&fDlE_!sT)E)C."!7o35j?=70Q@?=n,?s[)?
;Fs)/-QEd.#6Ou.!JCH)!.k3&!.k4$!"T)4"ptq\,VV>N:f^e,?sp]WNF<0%?<gT18O#!Y*"rG`#6P#.
LB)o+JcLB&JcO4!%flb:$5"1%0K_j%<a/m<@)69/@0^1H>Zalq5;NNl*"r_c!s/L\!.k3&!42`X!1a*#
!<WN5&K2oK4@`4K>@(]Fp0iP]e6rkq?<gT18O#!Y*"r_c!s/M<!.k3&!.k3&!1Elu!<WN5&K2oK4@`4K
>@(]Fq-ek`d:!Pn?<gT18O#!Y*"r_c!s/M?!.k3&!.k3&!1*Zr!<WN5&K2oK4@`4K>@(]Fr*b1cc=%5k
?<gT18O#!Y*"r_c!s/MB!.k3&!.k3&!0dHq!<WN5&K2oK4@`4K>@(]F@:=arb@(oh?<gT18O#!Y*"r_c
!s/ME!.k3&!.k3&!0I6k!<WN5&K2oK4@`4K>@(\;@"Vn/@1QaP>Zalq5;OZ,'+>*J!Wi6"JcLB&JcLB&
JcOO*%flb:$5"1%0K_j%<a/m<@(9X/@1ZgQ>Zalq5;OZ,'+>*J!W`:Q!.k3&!.k3&!8%8^!<WN5&K2oK
4@`4K>@(]F]4$e0%:ELI=Ah^T1FF.U$jQk8!WdrSJcLB&JcLB&eGp*\!sT)E)C."!7o35j?=70T@?"\&
?s[)?;Fs)/-QEd&$jQk9!J^Z,!.k3&!.k4!!"T)4"ptq\,VV>N:f^e,?spfZMI?`t?<gT18O#!9-QEd.
#6P#.M?&5.JcN.XJcM>A%flb:$5"1%0K_j%<a/m<@.n#\@FS]r?s[)?;Fs)/-QEd.#6P#.^AricJcLB&
JcM5>%flb:$5"1%0K_j%<a/m<@/45_@F8Ko?s[)?;Fs)/-QEd.#6P#._>o/fJcLB&JcM,;%flb:$5"1%
0K_j%<a/m<@/OGb@Er9l?s[)?;Fs)/-QEd.#6P#.`;kJiJcLB&JcM#8&HMt<$5"1%0K_j%<a/m<?t!Jq
@EW'i?s[)?;Fs)/-QEd.#6P#.a8gelJcLB&JcLo5%KQY9$5"1%0K_j%<a/m<!+:FfaC,Te?<gT18O#!Y
*"r_c!s/N%!.k3&!.k3&!.k4*!"T)4"ptq\,VV>N:f^e,?spKQP@5#1?<gT18O#!Y*"r_c!s/K'JcLB&
JcLB&JcOF'%flb:$5"1%0K_j%<a/m<@(Tj/@1?UN>Zalq5;OZ,'+>*J!<N:T!.k3&!.k3&!7_&[!<WN5
&K2oK4@`4K>@(]F^1!"0$=I1F=Ah^T1FF.U":PM;!We&VJcLB&JcLB&dJsdY!sT)E)C."!7o35j?=70W
@>\Iu?s[)?;Fs)/#:CK)$jQk9!K$l/!.k3X!.k3A!"T)4"ptq\,VV>N:f^e,?sr\:Jmm/;%q&^K=Ah^T
1FF.U$jQk9!P\Vd!.k3&!.k3>!"T)4"ptq\,VV>N:f^e,?sre=Jmm&8%q&^K=Ah^T1FF.U$jQk9!Q"hg
!.k3&!.k3;!"T)4"ptq\,VV>N:f^e,?srn@Jmlr5%q&^K=Ah^T1FF.U$jQk9!Q>%j!.k3&!.k38!"f56
"ptq\,VV>N:f^e,?smDOJmli2%q&^K=Ah^T1FF.U$jQk9!QY7m!.k3&!.k35!"K#3"ptq\,VV>N:f^e,
?iXSe@E;jf?s[)?;Fs)/-QEd.#6P#.r;_ELJcLB&JcLB&gAh`b!sT)E)C."!7o35j?=70N@?Y+2?s[)?
;Fs)/-QEd.#6P#.!.k3&!.k3&!.k4'!"T)4"ptq\,VV>N:f^e,?spTTOC8T+?<gT18O#!Y*"r_c!s&H(
KE-T(JcLB&JcO=$%flb:$5"1%0K_j%<a/m<@(p'/@1$CK>Zalq5;OZ,'*J^K!s/LY!.k3&!.k3&!7CiX
!<WN5&K2oK4@`4K>@(]F_-r40#@LkC=Ah^T1C#9I'+>*J!We/YJcLB&ZiG[XSH'0$!sT)E)C."!7o35j
?=717@=hq;@1QaP>Zalq5;OZ,'+>*J!Wg%9JcLB&JcLB&RK*j!!sT)E)C."!7o35j?=71:@=hq8@1QaP
>Zalq5;OZ,'+>*J!Wg.<JcLB&JcLB&QN.Ns!sT)E)C."!7o35j?=71=@=hq5@1QaP>Zalq5;OZ,'+>*J
!Wg7?JcLB&JcLB&PQ29r!sT)E)C."!7o35j?=7/L@=hq2@1QaP>Zalq5;OZ,'+>*J!Wg@BJcLB&JcLB&
OT5jl!sT)E)C."!7o35j?=3b@K42i0%q&^K=Ah^T1FF.U$jQk9!W<"M!.k3&!.k3&!8@Ja!<WN5&K2oK
4@`4K>@(]F\7(S0&7AgL=Ah^T1FF.U$jQk9!<@]OJcLB&JcLB&fDlE_!sT)E)C."!7o35j?=70Q@?=n,
?s[)?;Fs)/-QEd.#6Ou.!JCH)!.k3&!.k4$!"T)4"ptq\,VV>N:f^e,?sp]WNF<0%?<gT18O#!Y*"rG`
#6P#.LB)o+JcLB&JcO4!%flb:$5"1%0K_j%<a/m<@)69/@0^1H>Zalq5;NNl*"r_c!s/L\!.k3&!42`X
!1a*#!<WN5&K2oK4@`4K>@(]Fp0iP]e6rkq?<gT18O#!Y*"r_c!s/M<!.k3&!.k3&!1Elu!<WN5&K2oK
4@`4K>@(]Fq-ek`d:!Pn?<gT18O#!Y*"r_c!s/M?!.k3&!.k3&!1*Zr!<WN5&K2oK4@`4K>@(]Fr*b1c
c=%5k?<gT18O#!Y*"r_c!s/MB!.k3&!.k3&!0dHq!<WN5&K2oK4@`4K>@(]F@:=arb@(oh?<gT18O#!Y
*"r_c!s/ME!.k3&!.k3&!0I6k!<WN5&K2oK4@`4K>@(\;@"Vn/@1QaP>Zalq5;OZ,'+>*J!Wi6"JcLB&
JcLB&JcOO*%flb:$5"1%0K_j%<a/m<@(9X/@1ZgQ>Zalq5;OZ,'+>*J!W`:Q!.k3&!.k3&!8%8^!<WN5
&K2oK4@`4K>@(]F]4$e0%:ELI=Ah^T1FF.U$jQk8!WdrSJcLB&JcLB&eGp*\!sT)E)C."!7o35j?=70T
@?"\&?s[)?;Fs)/-QEd&$jQk9!J^Z,!.k3&!.k4!!"T)4"ptq\,VV>N:f^e,?spfZMI?`t?<gT18O#!9
-QEd.#6P#.M?&5.JcN.XJcM>A%flb:$5"1%0K_j%<a/m<@.n#\@FS]r?s[)?;Fs)/-QEd.#6P#.^Aric
JcLB&JcM5>%flb:$5"1%0K_j%<a/m<@/45_@F8Ko?s[)?;Fs)/-QEd.#6P#._>o/fJcLB&JcM,;%flb:
$5"1%0K_j%<a/m<@/OGb@Er9l?s[)?;Fs)/-QEd.#6P#.`;kJiJcLB&JcM#8&HMt<$5"1%0K_j%<a/m<
?t!Jq@EW'i?s[)?;Fs)/-QEd.#6P#.a8gelJcLB&JcLo5%KQY9$5"1%0K_j%<a/m<!+:FfaC,Te?<gT1
8O#!Y*"r_c!s/N%!.k3&!.k3&!.k4*!"T)4"ptq\,VV>N:f^e,?spKQP@5#1?<gT18O#!Y*"r_c!s/K'
JcLB&JcLB&JcOF'%flb:$5"1%0K_j%<a/m<@(Tj/@1?UN>Zalq5;OZ,'+>*J!<N:T!.k3&!.k3&!7_&[
!<WN5&K2oK4@`4K>@(]F^1!"0$=I1F=Ah^T1FF.U":PM;!We&VJcLB&JcLB&dJsdY!sT)E)C."!7o35j
?=70W@>\Iu?s[)?;Fs)/#:CK)$jQk9!K$l/!.k3X!.k3A!"T)4"ptq\,VV>N:f^e,?sr\:Jmm/;%q&^K
=Ah^T1FF.U$jQk9!P\Vd!.k3&!.k3>!"T)4"ptq\,VV>N:f^e,?sre=Jmm&8%q&^K=Ah^T1FF.U$jQk9
!Q"hg!.k3&!.k3;!"T)4"ptq\,VV>N:f^e,?srn@Jmlr5%q&^K=Ah^T1FF.U$jQk9!Q>%j!.k3&!.k38
!"f56"ptq\,VV>N:f^e,?smDOJmli2%q&^K=Ah^T1FF.U$jQk9!QY7m!.k3&!.k35!"K#3"ptq\,VV>N
:f^e,?iXSe@E;jf?s[)?;Fs)/-QEd.#6P#.r;_ELJcLB&JcLB&gAh`b!sT)E)C."!7o35j?=70N@?Y+2
?s[)?;Fs)/-QEd.#6P#.!.k3&!.k3&!.k4'!"T)4"ptq\,VV>N:f^e,?spTTOC8T+?<gT18O#!Y*"r_c
!s&H(KE-T(JcLB&JcO=$%flb:$5"1%0K_j%<a/m<@(p'/@1$CK>Zalq5;OZ,'*J^K!s/LY!.k3&!.k3&
!7CiX!<WN5&K2oK4@`4K>@(]F_-r40#@LkC=Ah^T1C#9I'+>*J!We/YJcLB&ZiG[XSH'0$!sT)E)C."!
7o35j?=717@=hq;@1QaP>Zalq5;OZ,'+>*J!Wg%9JcLB&JcLB&RK*j!!sT)E)C."!7o35j?=71:@=hq8
@1QaP>Zalq5;OZ,'+>*J!Wg.<JcLB&JcLB&QN.Ns!sT)E)C."!7o35j?=71=@=hq5@1QaP>Zalq5;OZ,
'+>*J!Wg7?JcLB&JcLB&PQ29r!sT)E)C."!7o35j?=7/L@=hq2@1QaP>Zalq5;OZ,'+>*J!Wg@BJcLB&
JcLB&OT5jl!sT)D)'^dr7Sd&h?=3b@K42i0%q&^K=&DLP1+!qQ$jQk9!W<"M!.k3&!.k3&!8@Ja!<WN4
&/c]F3^lhE>$YND\7(S0&7AgK=&DIN0dRbO$O-\7!<@]OJcLB&JcLB&fDlE_!sJuA(a1Ik6qpWa?!h!O
@?Ft.?sd2D<_l1I0I.PK$O-\6!WdrSJcLB&JcLB&eGp-]!X/i>(Eb4e6;(3Y>[CcF^L<.2$Xd=H=]A*`
3\DWo&-N=E!s&FX!.k3&!.k3&!7CiZ!<NB0%2Bp51d=N-<a&d8?spl\NF<0%?sd5E=&M[W2_,+U(CpfU
!W`=Z!.k3&!42`X!1a*$!<NB/$kjR+0KVZr;cm70?iFI0@=hq@@K'XG?X?u><),qH1FO7X%1!(<!PSPc
!.k3&!.k3>!"o;6!sT)D(Ek:d5=\IJ=B]!:?iFI5@=hq?@K'XI?X@#B=]J9i5r^G@)A3D_"9JV?!.k3&
!.k3&!1!Tu!<NE1%29d/0/u6g:/b4t>[:ZCrEt@gf4"Yd'OP0P>Zt6/:eF):0de"X%g`CA!<L+=JcLB&
JcLB&P5l-p!WrW6&/QE:0f_Ni9i4nm"^5/:?=.(<@#SOG@K'XM?XI,F>Zt61;GKeN4#8?0)%d8^"9JVD
!.k3&!.k3&!0@0i!<E6*#Rh=`+Xo*)5=GrP:K(7q>$G6;?=.(<@$4sN@JsRO?XI,G?!LQ8<`;gg7R9'j
.j>lG%1*1?!<N&tJcLB&JcLB&JcOI()Z^!B"pk_P)'C:[2EX;r92AGc='8^3?!^iE?i4<T@AdQ3?lNH[
?=$oB>?P$-;c$.Y6Tm@^.3]]F%giLD!Wi6"JcLB&JcLB&JcO=$*WZ<F"pkbQ(`t%T1,qE`7nZTS<*!+(
>?kE=?=$uGr*[r]W+#U3ra-[P?!U]>>$+g);GTtW6U*Re/LMYZ'FtNU"9SZ*!.k3&!.k3&!.k4!!$D:C
!X&]6%2'Er+t,$!3'BSt8PDoX<*!('>$G6;?!^k:?i+6c@B*c5@/aLS?=$oB>?Y03<`Dsn9hIlA4ukGQ
.3fiM'+P?S"9S]*!J:B(!.k3&!.k3r!$_LF!X&]6$kO*j*[<'b1,h9Z6UsaC:Jk%j='/U/>?kH>?=*S;
qI&AmY$q-6ra-dS?<piA>?Y03=&r9u:eaPP6pNjo1G1+%*uYk+%1*4A!WrK)K`H])JcN.XJcM/<'`e=:
"9f&<%M9Eo*[<$`0JtgP5XS!O8PDlU;H-Xt=BSg3>[1Q?ra,P1q-]n)s'b\1rEgpY?<piA>[(B7=BAO&
;c-=a8k2984ZPAS/LVhc)\s%r$O?q>!s/M6!.k3&!.k3&!0dHq!<E6("9o/?%MBKo*?c^X/MS)"3BTMm
77^$E:/Fhe<E<1'=^#$6>[1Q?ra,M0p0b48r*]D0r*TG0.U?=b>[(E9=]ea+<E)jn:JFJQ7RKF(3ArWF
.OH>\)AWqr$jd.B!s/K(])[E_JcLB&JcLl4%06J2!X&Z3#n%4T'Gh]1+!N$]/MT(@3^#_q77^$E:/=_b
<)lt#=BSd1>?b?;ra#J/qd8o%c!g0Nqd9;.r`q*\>[(E9=]nj.<`N*t;,C"]8k;E=5s@@i2)6d6-R0]Q
(_mVm$jd.B"9S]+!PJJb!.k3&!.k3/!!iT+!WrQ/#71bf%1j-e(`OP@,q1Au1,V$Q4[;>%7S$-F9i"S`
;cHat='&L,=^#!5>?kG3?2S%(?cZXN?N=F2?N"1/>V95b>$>'2=BAO'<)Z[l:JOSV8Ol3:5X%7h2D[$<
.4-8]*#TM*&.T'S#6b54!r`58!.k3&!.k3&!/CRR!<E6(0*DF_#RUtM&/,cq)]g+H-7LK!1,LpM4?c"s
6q0^=92&)V:f1+h<)lt"='/R-=oMV)>Q%h)?2.aW?hn%+?2\%->;KGd=]nj/=&r@%<)Z[l:esh\91h`E
770@*4?>DY1+t4/-R9iV*#TM*&Io3V#R:M9!s8H&nc47AJcLB&JcLB&cN*qF2Za'`"9o):$4ICU&el-"
*$-7J-7CAs0JYID3BKAg5sn%07nH<G9MJ;Z:f1+h<)cju<``@)=T2J%>5VV%>hr]^>l@n*>5hY`=BJX+
<`W4"<)Z[m;,C%`9h\/N7n,p75sIOq3]AoP0eP"+-R9iW*#]V.'+bW^$4-qA"U"o/rW2TjJcLB&JcLB&
JcNpnrW,"\!WrQ/"pYD@$OmUY',;<$)]^%F,UY#k/MAh72)dNW4[)+s6UX@584cEH9MJ8W:Janc;H$Ln
<;ons<rQ2#=T2G"=m9,d=oDJ%=8l8"<B4#X;c?Rk;,C%a:/+DT8kDQD7RTU15X.Cn3]K#S1,(=3.46Dd
+<DL@(DRSq%h/pS#R:P;"9S],rW2WkJcLB&JcLB&JcN^hrW,(^!WrQ/"U55=$4I@S&/#Zm(`FA8+<i'X
-n-Yu0/54=2E*WW4?Ykn5sdq,77Kd<8P2WK9MA/U:/=[b;#aDl;Z0Pj<:Nub<;fbp;Z9NV:f'q`:/4MX
9M8#N8Ou?@7RTU15sRXt4?GP_2Dm9F0.ne*-mg2`+<DL@(`!i"&J#?[$OI(D"pG,3!Wr<$o`0RDJcLB&
JcLB&^B"353!'-`!sAc3#7(VC$OmRW&JGio(E"/4*ZuXO,pt)j.kNA-0f(XD2`NfY4$5\j5<qM$6UO71
7RmDJs%*/]r_!/_rClNOrCm2`r^o:E8OuBB7n,s:6psC/5sR\"5!1qh3B/rU2)@!A0.e_).46De+s7sJ
)]BP/'b_/j%LigR#m^b?"U"r1rW<'"o`0RDJcLB&ZiG[XLB.8R!!5:b!WrQ."U52:#RLhH%1Wm\&ebuq
(`=53*?QCI,:"T`-n-Yt/M8_31,CaE2E!KR3BB5`4?Pbj5!M7s5lO(K6Ms4B7/TFO6N07j5X7Ou5!D+m
4?GVc3B/uW2Dm<I1,1I9/M&D%.3U&c,pOTV*uu=?)&O,('G:uh%LigS$4-tC"pG,4!s8T+r;ihsJcLB&
JcLB&JcGcNquQcu2?O$a"U,)8#7(VC$OdIS%hK<c'GVB"(`F>5*?H:F+X86Y-7:2j.P!##/M8\00JP:;
1G^jEr\a[5r\s^6q)S=3rAX^6)DsB/1c$pC1,1I:0.nh-/1W2!-mp>f,U4KV+<V^G*#fe6(D[`"'+tlf
%LigS$4-tD#6k>8"9\f/!Wr9#VuVDLJcLB&JcLB&q#L<nrW<*%rWFeV"pP;<#RLhG$OdIS%hK<c',2,q
()If*)B0Y:*ZcCG+X&$S,U=Z^-7:/h./k[p.fLsq/GUmp/H%*u.MjN_-n$Gj-71#a,U4KW+WqjK*ZZ4>
)AsM3(`*r&'GD)k&.]6[$k*LN#m^eA"pP57"9\f/rW;uuVZ;;KJcLB&JcLB&nc8OfrW<'$-j0YV"U5/9
#7(SA$47.K$k3[V%hK9a&eYil'bqK"(Dmu,)B'P6*$"qurZ;%\r#kSSr#kt\rZ;%Z&0)Z/)]BV4)&O/+
()7Pu',)/p&J5Qb%LrpV$k!CL#m^eA#6kA9"U"u-"9&B!!N#jK!.k3&!.k3&!9sR]!W<)u"9&H'"oef+
#QG)0$3(A4$i^Y8%K?q<&-!4@&cNFB'E/^D(&Sj?(],!H(&epH'E/XE&cWFA%g!4M%K6b9$iUM5$3(;2
#QG#-"oe`("8r;u!S.7&!.k3&!.k3&!3ZD!!W3#t"9&H&"oSZ)#Q>#/$2k51$iLJ6%/^S1%f$Y2%f6_6
%/gS5$N:A2#lY).#6"f*"T8H#!r2lH!.k3&!.k3&!.k3J!;HTl!rN/u"T/H$"ono*#PSMu$24`%#Q"`(
"oJN$"8`/p!RLgu!.k3&!.k3&!1Nu^!Vc`o"9&Do"S2fg"S`)p!qcT<!.k3&!.k3&!.k33!;$<j!Rh,>
!Q>%j!.k3&!42`X!.k3o!6kQ2!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!42`V~>

%%EndBinary
grestore
np
141.289 183.975 mo
134.089 183.975 li
134.089 182.666 li
141.289 182.666 li
141.289 183.975 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[7.85455 0 0 1.96364 16.5055 108.839 ]ct
snap_to_device
<<
/T 1
/W 24 
/H 6 
/M[24 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
188.744 238.302 mo
175.325 238.302 li
180.265 238.137 184.827 237.739 188.744 237.165 cv
188.744 238.302 li
164.929 238.302 mo
151.435 238.302 li
151.435 237.154 li
155.367 237.734 159.958 238.136 164.929 238.302 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[37.9636 0 0 1.96364 33.8509 54.5114 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 116 
/H 6 
/M[116 0 0 -6 0 6 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 116 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&UAt:$q-`Gq[pf&>eGt1$JcO*sra,M0p0bpLm:#]rr*TG0W;qMMJcPZJs',M.ra#J/qd8o%c!g0N
qd9;.ra#P/s',C$JcLB&VuR3+='&L,=^#!5>?kG3?2S%(?hn*V@/41-?N"1/>R4P<>$>'2=BAPM!.k3&
!7UuX:Jand;cHat<``C*=]t`-s',G,r*B)(emJG`qd02+rET>+%pE.>=]ed-<`W4";c6Ih:S[uB!.k1d
!(KIM8kViP:Jakb;H$Oo<E<.%='/T(=oDP%>Ph[]?2@h)>Q%b)=VY%@='&F'<E)pr;Gp@g:JOVX8kDNB
J,~>

%%EndBinary
grestore
np
grestore
gsave
137.907 191.797 mo
137.907 195.473 152.332 198.453 170.127 198.453 cv
187.922 198.453 202.348 195.473 202.348 191.797 cv
202.348 231.732 li
202.348 235.408 187.922 238.388 170.127 238.388 cv
152.332 238.388 137.907 235.408 137.907 231.732 cv
137.907 191.797 li
eclp
-117.256 -128.571 mo
602.744 -128.571 li
602.744 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 137.907 185.141 ]ct
/4 
<<
/ShadingType 2 
/BBox [-3.24057e+06 -3.98414e+06 5.90343e+06 2873862 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!/!!!!0!!!!0!!!!1!!!!1!!!!2!!!!2!!!!3!!!!4!!!!4!!!!5!!!!6!!!!7!!!!7!!!!8!!!!9
!!!!9!!!!:!!!!;!!!!;!!!!<!!!!=!!!!>!!!!>!!!!?!!!!@!!!!@!!!!A!!!!B!!!!C!!!!C!!!!D
!!!!E!!!!E!!!!F!!!!G!!!!H!!!!H!!!!I!!!!J!!!!J!!!!K!!!!L!!!!M!!!!N!!!!O!!!!P!!!!Q
!!!!Q!!!!R!!!!S!!!!T!!!!U!!!!V!!!!W!!!!X!!!!Y!!!!Z!!!!Z!!!!\!!!!]!!!!^!!!!_!!!!`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 137.907 185.141 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~%1WjX%LrsY%M''\%hB0]%hK9`&.fBa&.oKd&J>]h&eYfi&ebol',2,p'GV>t'bqGu'c%Q#()Ic'(Ddl(
(Ddo*(`4,.)&X;0)&X>2)B'P6)]Kb:*#oq<*#ot>*??1B*Zc@D*ZcCF+!2UJ+<VgN+X&!P+X&$R+sJ6V
,9nEX,9nEY,U=W],paia-71&d-71&e-RU8i-n$Jl-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t3
0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3&ilW3B9,]4$,Mc4?P_g4Ztqk5!D.o
~>
]
>>
409200 0 409200 676237 [-3.24057e+06 -3.98414e+06 5.90343e+06 2873862 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
grestore
gsave
137.907 191.797 mo
137.907 188.121 152.332 185.141 170.127 185.141 cv
187.922 185.141 202.348 188.121 202.348 191.797 cv
202.348 195.473 187.922 198.453 170.127 198.453 cv
152.332 198.453 137.907 195.473 137.907 191.797 cv
eclp
-117.256 -128.571 mo
602.744 -128.571 li
602.744 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 137.907 185.141 ]ct
/5 
<<
/ShadingType 2 
/BBox [-3.24057e+06 -3.98414e+06 5.90343e+06 2873862 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!(!!!!(!!!!)!!!!)!!!!*!!!!*!!!!*!!!!+!!!!+!!!!,!!!!,!!!!-!!!!-!!!!-!!!!.!!!!.
!!!!/!!!!/!!!!/!!!!0!!!!0!!!!1!!!!1!!!!1!!!!1!!!!1!!!!2!!!!2!!!!3!!!!3!!!!3!!!!4
!!!!4!!!!5!!!!5!!!!6!!!!6!!!!6!!!!7!!!!7!!!!8!!!!8!!!!9!!!!9!!!!:!!!!:!!!!;!!!!;
!!!!<!!!!<!!!!=!!!!=!!!!>!!!!?!!!!?!!!!@!!!!@!!!!A!!!!A!!!!B!!!!B!!!!C!!!!C!!!!D
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 137.907 185.141 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~"pP89"pYA<#6tJ=#7(S@#RC\A#RC\A#RLeD#mgnE#mq"H$47+I$4@4L$O[=M$O[=M$OdFP$k*OQ$k3XT
%1NaU%1NaU%1NdW%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fEc&J5Te&J5Te&J5Wg&eYfi
&eYfj',)#m',)#n'GM5q'GM5q'GM5r'bqGu'bqH!()@Z$()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X;1
)B'M4)B'M4)]K_8)]K_8*#oq<*??.@*??.@*Zc@D*Zc@D+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+sJ3T
~>
]
>>
409200 0 409200 676237 [-3.24057e+06 -3.98414e+06 5.90343e+06 2873862 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
grestore
202.348 191.797 mo
202.348 195.473 187.922 198.453 170.127 198.453 cv
152.332 198.453 137.906 195.473 137.906 191.797 cv
137.906 188.121 152.332 185.141 170.127 185.141 cv
187.922 185.141 202.348 188.121 202.348 191.797 cv
cp
202.348 191.797 mo
202.348 231.732 li
202.348 235.408 187.922 238.388 170.127 238.388 cv
152.332 238.388 137.906 235.408 137.906 231.732 cv
137.907 191.797 li
@
PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [20 0 0 -20 0 0 ]msf159.107 223.093 mo(M)sh%ADOBeginSubsetFont: FJGRMX+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFY+TimesNewRomanPS-BoldMT gcheck setglobal} if
1 318 3 <000100320000039c0568001c00e840248802ae02ac0303270c9503020a0b
0a0b0100051b12a016b41602161c020217010a0b081cb80160b6122f17b0
170217b80122b2011208b8ffc0b30b0d3408b80324b40e05010c03b801f4
401b000510050205dc12d30f1c01bf1c011c1a1e0f0101bf010101191dba
0158019000182b4e10e45d7110f65d714df4fd5de4003f3fed2b435c5840
130840160d3f0840170e3f0840190f3f08400d392b2b2b2b5910fd5d435c
58b90017ffc0b3160d3f17b8ffc0b3170e3f17b8ffc0b31b103f17b8ffc0
b21c113f2b2b2b2b59e4113939111239011112395d1139123911393910c9
3130015d005d212135001235342623220727363633321616151407060121
32363637330350fce2016f9d825e9a552536dc9067aa604a65feac01256c
412a22241601b5012e90698b9a0dc0b860a7498589b9feb5122b4500>PMNKFY+TimesNewRomanPS-BoldMT AddT42Char 
PMNKFY+TimesNewRomanPS-BoldMT /CharStrings get begin
/two 3 def
end
PMNKFY+TimesNewRomanPS-BoldMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFY+TimesNewRomanPS-BoldMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one /two 205{/.notdef}rp]PMNKFY+TimesNewRomanPS-BoldMT nfPMNKFY+TimesNewRomanPS-BoldMT*1 [13.3333 0 0 -13.3333 0 0 ]msf176.89 228.093 mo(2 )[6.66667 0 ]xshgsave
-117.256 411.429 mo
602.743 411.429 li
602.743 -128.571 li
-117.256 -128.571 li
-117.256 411.429 li
293.751 177.797 mo
293.751 181.473 308.177 184.452 325.972 184.452 cv
343.767 184.452 358.192 181.473 358.192 177.797 cv
358.192 217.732 li
358.192 221.408 343.767 224.388 325.972 224.388 cv
308.177 224.388 293.751 221.408 293.751 217.732 cv
293.751 177.797 li
293.751 177.797 mo
293.751 174.121 308.177 171.141 325.972 171.141 cv
343.767 171.141 358.192 174.121 358.192 177.797 cv
358.192 181.473 343.767 184.452 325.972 184.452 cv
308.177 184.452 293.751 181.473 293.751 177.797 cv
eclp
362.198 229.793 mo
317.541 229.793 li
317.496 229.665 317.451 229.537 317.406 229.41 cv
317.024 228.341 316.644 227.328 316.201 226.517 cv
315.9 225.978 315.585 225.515 315.119 225.184 cv
314.857 224.999 314.521 224.865 314.158 224.865 cv
314.156 224.865 314.154 224.865 314.152 224.865 cv
314.151 224.865 314.15 224.865 314.15 224.865 cv
313.965 224.865 313.779 224.899 313.606 224.961 cv
312.924 225.218 312.434 225.75 311.916 226.435 cv
311.406 227.125 310.899 228 310.379 229.009 cv
310.249 229.262 310.118 229.524 309.986 229.793 cv
289.871 229.793 li
289.871 168.593 li
362.198 168.593 li
362.198 229.793 li
318.956 224.229 mo
321.215 224.333 323.562 224.388 325.972 224.388 cv
328.382 224.388 330.729 224.333 332.988 224.229 cv
347.471 224.229 li
347.471 222.689 li
354.052 221.471 358.192 219.701 358.192 217.732 cv
358.192 177.797 li
358.192 177.797 li
358.192 177.797 li
358.192 177.797 li
358.192 174.121 343.767 171.141 325.972 171.141 cv
308.177 171.141 293.751 174.121 293.751 177.797 cv
293.751 177.797 li
293.751 217.732 li
293.751 219.681 297.807 221.434 304.271 222.652 cv
304.271 224.229 li
318.956 224.229 li
315.95 229.793 mo
311.663 229.793 li
312.18 228.783 312.675 227.93 313.122 227.326 cv
313.546 226.737 313.953 226.414 314.107 226.375 cv
314.152 226.365 li
314.263 226.416 li
314.34 226.468 314.458 226.582 314.585 226.757 cv
314.842 227.105 315.13 227.68 315.41 228.366 cv
315.59 228.805 315.769 229.287 315.95 229.793 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[72.9818 0 0 61.8545 172.287 63.0205 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 189 
/M[223 0 0 -189 0 189 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN.X
JcLB&[K-%&f)UC&JcLB&JcLB&JcO$q_?'<0JcLB&JcLB&JcLB&ec>:Bo)dqSo)eRcrW.]QJcLB&JcLB&
JcOR+p&Y!kq?-Nrp]^$hpBC?qq?-]ur;u]oO8sk4JcLB&JcLB&huNQRqZ?Ztr<3'&r<E0)r!<3,k6h(m
r!<6+r!*0)rrr?(quciup]8V>JcLB&JcLB&JcN%Uq>pKqrWE-&rWW9*rWiH/rX&T3rX8]6r=/`9r=Af;
mLf@.r=Al;rXJi8rX8]4rsAZ1rWiH-rWW9(r<)s!q>o.IJcLB&JcLB&JcN+WqZ6WsrWE0'rWO5F"pYA=
#RLeE$O[@O%1NdX%hK9a&J>]i',2/[(&o'K(]>3K)=e^D)?(KP(]G3M(&emd',(uk&J5Qb%h9'Y%1EUP
$47(G#RCY?"pP57rWN3&r;uish>i--JcLB&JcLB&[/g+*r<!!$rWFJM"U52:#RC_D$O[@P%1Wm[&.oNg
'GM8t(Ddo+)B'P7*$$%@"s+j.+<VgNrZ_=dr$:q]r$;7drZ_=b.j,rV+!)ID*?6";)AsD0(D[c$'GD,m
&J,H`%LigT$OR4I#RCY>"pG/5"TAN&!rE#\!.k3&!.k3&!.k3Z!;lls!\4?T"9\l3"pYA=#mq%K%1NdX
&.oNg'GVB"(`=52*$$(B+<_pR,:"Q^-RT6L.4H_r.k</%/M6rSr\+.&q(_b#r@e1'r[frX/1W5#.Ocbo
-RL,c,U4KV+WqjJ*?6":)&O/*'bh;o&J,H_%1EUO#mgkB"pP57"9\f/rW;uum/V_<JcLB&ZiG[XK`M)Q
561cd!WrN-"9eu6#7(VC$OdIS%hK<d'GVB#)&aG7*ZlLK,:"Q^-R^Dn.kE8)0/,+91,CaE2)[?O2`NcW
3W;)<4756148q;?3?'q;2`EWQ2)I-G1,1L;0.nh-.k2tr-RL,a+s@pK+!)C@)Aj8+'b_2l&.]3Y$OR1G
#R:P;"U"o0rW<$!V>u2JJcLB&JcLK)rW,4a!WiH+"9\l4#7(VC$OdIT&/#Wj()Ii,*$$+D+s\H]-n-Yt
/M8_31,CaE2E*TU3]fGe4[)(q5X@\&6:4->7/fXQ7e'"H7f>dU7/fOg6:*t(5X.Is4Zkhg3]T/Y2Dm<I
1,("-/hJS'.46Gf,9\0N*?,n6(DRVs&J#?\$k!@I#6kA9"9S`-!rW/$!.k3&!.k3&!/1FP!C-Ye!WrN-
"U52;#mq(M%hK?e'c.`+*$-4G,:+]d.P*/)0etRC2E3]X4$>bl5X@_(6q'O67n6*A8P2TJ92&%Y:&Rib
:[_-X:]4&f:&[ft91qlL8OuBB7Rfg76UF+*5V,)^4?GSa2`<NL1,(=4.k)kn,U4HS*?,n6().Do&.T-W
$4-tC"pG,3!s/Q'!O;]W!.k3&!.k3(!<3'`!<N<)"9\l5#RLhH%M'-b'c.`,*?QFL,pt,l/MAh71c@<R
4$5\k5sdq,77Kd<8P2WL9heAY:Jakb;,U<k;uTbn<V]\g=85ho<W,l+;c?Rl;,L.d:JX_\9h[<991hcH
7n,p86U<t%4Zkbc2`3EI0J4n+-mg2`+<DL@(`!eu&.]3X$4$k@"U"o0!Wr?%\,_*\JcLB&JcLE'!!,(\
!<N?*"9f#9$4@:R&JGlq)B9eA,:+`f/1rY52)dNW4[)+s6UXC684lNK9hnJ[:f1+g;cH^r<W6&!=8c8"
=o)=_>P_P%=oMP&<ruE'<B!oW<)Z^n;,L.c:/+DT8kDQD779I.5<V+i3&WTK0J4k)-R9lY*?,k3'G:re
$jm:G"pG,3!Wr?%mf7q>JcLB&JcLB&cN#s+!<N<)"9eu8$4@:S&el-"*$6=L-RgT"0f(^I3]oSk6:=:5
8P2WM:/=\`;H$Oo<E<.%='/R-=oMV'>Pqb&?2n3g?MRn)>l@n+>5hY]=BJX+<`N.!;c6Ii:JOVX91h`F
770@+5!1ha2)?p=.ju_h+<DI=()%8j%1<II"pG,3!r`5m!.k3&!.k3&!.k3r!&FWV!WiH,"pYGB%1j-e
(`OM>,UY&n0/>CE3^#\n6UaL:8k_rT:f1+h<)lt#='/U.>$Co0r`oA,qd0,+pg<5mnmD6"rE]A,1L"'e
>$5!1=BAO(<E)mp;,9q]91h`E6pa.&4?5>W0eP"*,pFEN)&<nu%h&dN#6b54!r`5r!.k3&!.k3&!.k3q
!<*!M!WrQ0#RUtN&JZ*$*[2mY/2&b93'0;h6UaL:92//X;,U@n<``@)=^#!5>Q.n,?2S%*?he$p@/OHn
@/41-?N+4b>[1K;>$>'3=BAO'<)Z[l:JOSU84H!65<V%d1bgU4-R0`S)AWtt%LWRJ"U"o/!<N-!JcLB&
JcLB&JcNso.ffYP!sAf6$4RLZ()e5;,q1E"1cIHZ5XS"38k_uV;H$Op='&L,>$G39>lJ%.?Me+%@/XNS
@Imn)?i=:_?!U]?>?b97=]ea+<E)jn:JFMS7n#a/4?5;U0.SCq+<245&Io0T#6b53!W`9%K)gK'JcN.X
JcM,;'EJ49"9f#:$kO'g)]p=R/2/n?4?jKG77^$F:Jk"h<EE:*>$>-8>[:Y7?Mn1*@&m`7@/F@0?iOI3
>p`f\>?Y03=&r=";G^+^8Ol074utVY0.S@n*Z>e,%LWOH"9S]+!P&2^!.k3&!.k39!"o;5!sAf6$P*me
*$?OW0/GOK58-CR8PDlU;H-Xt=BSg3>[1Q??=*S;q-]q*q-j),rEgmX?<piA>[(B7=B8F#;GU"[84>g.
3]8]E-mKcO'bLl^#6b22!<Kk6JcLB&JcLB&P5l-p!<WH/#n7I^)^$FW0JtmT&OJrY9M\Ma<EE:*>$G6;
?!^k:?i"0%@IIY$@/aLW?=$oC>[(B7=B8C!:ejYS6pWpp1G1+$*Z5Y&$O?q=!W`><!.k3&!.k3&!0I6k
!<E6)#7:qS(`jqP0Jtp&5X\.9:/Otj='8^2>[:WAra5P1RpkGfr*]M2+'r8Z?!LT;=BAL$:eaPO69[Cc
/LM\]((gr]"p=u.!Q>%j!.k3&!.k32!"/f/"9o2C'H/)A/i4/$5Xe7=:fC@q=^#$7?!^iE?i4<"@GYGj
?l`T]?=$oB>?Y-0<)QLb7mfI"1+OUk(D.)^"Tnf,q>c*IJcLB&JcLB&f`2ok!WrW5%MTg*.5<eG6qL*M
<*!+)>?tN@?XN_=b$h,TrF#V3(g^KQ>?P'.;bp(W69I+X-6F':$j["=!<N0"JcLB&JcLB&JcOC&(]aX=
"UGMM)'LIb3^H80:fLM!>?kH??XNb>a^LcLrEpFK?=$oB>$+g(:J+&>2_QL!(D$rY"9JUU!.k3&!.k3&
!7Uu`!<N?-$4n!q.5EqN8PW2b=^,-;?=3Y=a^LQFra6@G?X@#C>$+d%9L_6*/gVJO%L<.?!s&FW!.k3&
!.k3&!7:c[!<NB0%29d.00)?j:K1G">[CcEra<iVP%">t$t!=H>Zk**9h%?).j>08&ISdF!We,XJcLB&
ZiG[XSH'9'!<WK4&/QK?2*XW-<*3@1?=3\>r*b1cg0stg&RSjM>$"Tq76<4O*>Aqg"9JV<!.k3&!.k3&
!1Em#!<N?-$PF@'002Kp;cm70?XR:>@=hq<@K'XG?X-c8;+X#2.j,W=#mCD3!Q"hg!.k3&!.k3;!"f55
":#>L*@N^-85N>j?!guIraCCecs[Mo?s[)@<)#bA/gD5F$3gS6!Q>%j!.k3&!.k38!"f55":,GO+"B07
8lAbr?=.,LJmll3&7AjO>?4Ni4Y\6%&dnmG!Wg@BJcLB&JcLB&OT5jl!X/i>(*G.e6VLE]?![M=K42i0
%q&^K=&DOQ1FF.U$jHh9!W<"M!.k3&!.k3&!8@Ja!<WK3%Mp9?3CHS@=^>BB\7(S0&7AjM=AhaV1aj@X
$jQn:!<@]OJcLB&JcLB&fDlE_!sJuA(Ek@j6qpZb?=.*P@?=n,?sd2B;bB;3-lj!2#6Y&/!JCH)!.k3&
!.k4$!"T)4"UP\V+tboF:/tJ(?XUTVNF<0%?X6f590kEa*Y\_d#6Y)/LB)o+JcLB&JcO4!%flb9#nIjs
/ilEr<E`^9@)69/@0^1I?!1*!5rAlr*Y]%g"9JU]!.k3&!42`X!1a*#!<WK3%i?KC3^leD>$bQDp0iP]
e6rkq?X6f590kEa*Y]%g"9JV=!.k3&!.k3&!1Elu!<WK3%i?KC3^leD>$bQDq-ek`d:!Pn?X6f590kEa
*Y]%g"9JV@!.k3&!.k3&!1*Zr!<WK3%i?KC3^leD>$bQDr*b1cc=%5k?X6f590kEa*Y]%g"9JVC!.k3&
!.k3&!0dHq!<WK3%i?KC3^leD>$bQD@:=arb@(oh?X6f590kEa*Y]%g"9JVF!.k3&!.k3&!0I6k!<WK3
%i?KC3^leD>$bP9@"Vn/@1QaQ?!1*!5rC)4'Fb9M!Wi6"JcLB&JcLB&JcOO*%flb9#nIjs/ilEr<E`^9
@(9X/@1ZgR?!1*!5rC)4'Fb9M!W`:Q!.k3&!.k3&!8%8^!<WK3%i?KC3^leD>$bQD]4$e0%:EOK=]7sZ
2(9R\%0m":!WdrSJcLB&JcLB&eGp*\!sJuA(a:Rn78?id?=.*S@?"\&?sd2B;bKD6.390+%0m";!J^Z,
!.k3&!.k4!!"T)4"UP\V+tboF:/tJ(?XU]YMI?`t?X6f590kE?.3904#6Y)/M?&5.JcN.XJcM>A%flb9
#nIjs/ilEr<E`^9@.n#\@FS]r?sd2B;bKD6.3904#6Y)/^AricJcLB&JcM5>%flb9#nIjs/ilEr<E`^9
@/45_@F8Ko?sd2B;bKD6.3904#6Y)/_>o/fJcLB&JcM,;%flb9#nIjs/ilEr<E`^9@/OGb@Er9l?sd2B
;bKD6.3904#6Y)/`;kJiJcLB&JcM#8&HMt;#nIjs/ilEr<E`^9?t!Jq@EW'i?sd2B;bKD6.3904#6Y)/
a8gelJcLB&JcLo5%KQY8#nIjs/ilEr<E`^9!+:FfaC,Te?X6f590kEa*Y]%g"9JW&!.k3&!.k3&!.k4*
!"T)4"UP\V+tboF:/tJ(?XUBPP@5#1?X6f590kEa*Y]%g"9JT(JcLB&JcLB&JcOF'%flb9#nIjs/ilEr
<E`^9@(Tj/@1?UO?!1*!5rC)4'Fb9M!<N:T!.k3&!.k3&!7_&[!<WK3%i?KC3^leD>$bQD^1!"0$=I4H
=]7sZ2(9R\":YS=!We&VJcLB&JcLB&dJsdY!sJuA(a:Rn78?id?=.*V@>\Iu?sd2B;bKD6#:U].%0m";
!K$l/!.k3X!.k3A!"T)4"UP\V+tboF:/tJ(?XWS9Jmm/;%q&aM=]7sZ2(9R\%0m";!P\Vd!.k3&!.k3>
!"T)4"UP\V+tboF:/tJ(?XW\<Jmm&8%q&aM=]7sZ2(9R\%0m";!Q"hg!.k3&!.k3;!"T)4"UP\V+tboF
:/tJ(?XWe?Jmlr5%q&aM=]7sZ2(9R\%0m";!Q>%j!.k3&!.k38!"f56"UP\V+tboF:/tJ(?XR;NJmli2
%q&aM=]7sZ2(9R\%0m";!QY7m!.k3&!.k35!"K#3"UP\V+tboF:/tJ(?N=Jd@E;jf?sd2B;bKD6.3904
#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuA(a:Rn78?id?=.*M@?Y+2?sd2B;bKD6.3904#6Y)/!.k3&!.k3&
!.k4'!"T)4"UP\V+tboF:/tJ(?XUKSOC8T+?X6f590kEa*Y]%g"9AQ)KE-T(JcLB&JcO=$%flb9#nIjs
/ilEr<E`^9@(p'/@1$CL?!1*!5rC)4'EejM"9JUZ!.k3&!.k3&!7CiX!<WK3%i?KC3^leD>$bQD_-r40
#@LnE=]7sZ2$YQO'Fb9M!We/YJcLB&ZiG[XSH'0$!sJuA(a:Rn78?id?=.+6@=hq;@1QaQ?!1*!5rC)4
'Fb9M!Wg%9JcLB&JcLB&RK*j!!sJuA(a:Rn78?id?=.+9@=hq8@1QaQ?!1*!5rC)4'Fb9M!Wg.<JcLB&
JcLB&QN.Ns!sJuA(a:Rn78?id?=.+<@=hq5@1QaQ?!1*!5rC)4'Fb9M!Wg7?JcLB&JcLB&PQ29r!sJuA
(a:Rn78?id?=.)K@=hq2@1QaQ?!1*!5rC)4'Fb9M!Wg@BJcLB&JcLB&OT5jl!sJuA(a:Rn78?id?=*\?
K42i0%q&aM=]7sZ2(9R\%0m";!W<"M!.k3&!.k3&!8@Ja!<WK3%i?KC3^leD>$bQD\7(S0&7AjN=]7sZ
2(9R\%0m";!<@]OJcLB&JcLB&fDlE_!sJuA(a:Rn78?id?=.*P@?=n,?sd2B;bKD6.3904#6Y&/!JCH)
!.k3&!.k4$!"T)4"UP\V+tboF:/tJ(?XUTVNF<0%?X6f590kEa*Y\_d#6Y)/LB)o+JcLB&JcO4!%flb9
#nIjs/ilEr<E`^9@)69/@0^1I?!1*!5rAlr*Y]%g"9JU]!.k3&!42`X!1a*#!<WK3%i?KC3^leD>$bQD
p0iP]e6rkq?X6f590kEa*Y]%g"9JV=!.k3&!.k3&!1Elu!<WK3%i?KC3^leD>$bQDq-ek`d:!Pn?X6f5
90kEa*Y]%g"9JV@!.k3&!.k3&!1*Zr!<WK3%i?KC3^leD>$bQDr*b1cc=%5k?X6f590kEa*Y]%g"9JVC
!.k3&!.k3&!0dHq!<WK3%i?KC3^leD>$bQD@:=arb@(oh?X6f590kEa*Y]%g"9JVF!.k3&!.k3&!0I6k
!<WK3%i?KC3^leD>$bP9@"Vn/@1QaQ?!1*!5rC)4'Fb9M!Wi6"JcLB&JcLB&JcOO*%flb9#nIjs/ilEr
<E`^9@(9X/@1ZgR?!1*!5rC)4'Fb9M!W`:Q!.k3&!.k3&!8%8^!<WK3%i?KC3^leD>$bQD]4$e0%:EOK
=]7sZ2(9R\%0m":!WdrSJcLB&JcLB&eGp*\!sJuA(a:Rn78?id?=.*S@?"\&?sd2B;bKD6.390+%0m";
!J^Z,!.k3&!.k4!!"T)4"UP\V+tboF:/tJ(?XU]YMI?`t?X6f590kE?.3904#6Y)/M?&5.JcN.XJcM>A
%flb9#nIjs/ilEr<E`^9@.n#\@FS]r?sd2B;bKD6.3904#6Y)/^AricJcLB&JcM5>%flb9#nIjs/ilEr
<E`^9@/45_@F8Ko?sd2B;bKD6.3904#6Y)/_>o/fJcLB&JcM,;%flb9#nIjs/ilEr<E`^9@/OGb@Er9l
?sd2B;bKD6.3904#6Y)/`;kJiJcLB&JcM#8&HMt;#nIjs/ilEr<E`^9?t!Jq@EW'i?sd2B;bKD6.3904
#6Y)/a8gelJcLB&JcLo5%KQY8#nIjs/ilEr<E`^9!+:FfaC,Te?X6f590kEa*Y]%g"9JW&!.k3&!.k3&
!.k4*!"T)4"UP\V+tboF:/tJ(?XUBPP@5#1?X6f590kEa*Y]%g"9JT(JcLB&JcLB&JcOF'%flb9#nIjs
/ilEr<E`^9@(Tj/@1?UO?!1*!5rC)4'Fb9M!<N:T!.k3&!.k3&!7_&[!<WK3%i?KC3^leD>$bQD^1!"0
$=I4H=]7sZ2(9R\":YS=!We&VJcLB&JcLB&dJsdY!sJuA(a:Rn78?id?=.*V@>\Iu?sd2B;bKD6#:U].
%0m";!K$l/!.k3X!.k3A!"T)4"UP\V+tboF:/tJ(?XWS9Jmm/;%q&aM=]7sZ2(9R\%0m";!P\Vd!.k3&
!.k3>!"T)4"UP\V+tboF:/tJ(?XW\<Jmm&8%q&aM=]7sZ2(9R\%0m";!Q"hg!.k3&!.k3;!"T)4"UP\V
+tboF:/tJ(?XWe?Jmlr5%q&aM=]7sZ2(9R\%0m";!Q>%j!.k3&!.k38!"f56"UP\V+tboF:/tJ(?XR;N
Jmli2%q&aM=]7sZ2(9R\%0m";!QY7m!.k3&!.k35!"K#3"UP\V+tboF:/tJ(?N=Jd@E;jf?sd2B;bKD6
.3904#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuA(a:Rn78?id?=.*M@?Y+2?sd2B;bKD6.3904#6Y)/!.k3&
!.k3&!.k4'!"T)4"UP\V+tboF:/tJ(?XUKSOC8T+?X6f590kEa*Y]%g"9AQ)KE-T(JcLB&JcO=$%flb9
#nIjs/ilEr<E`^9@(p'/@1$CL?!1*!5rC)4'EejM"9JUZ!.k3&!.k3&!7CiX!<WK3%i?KC3^leD>$bQD
_-r40#@LnE=]7sZ2$YQO'Fb9M!We/YJcLB&ZiG[XSH'0$!sJuA(a:Rn78?id?=.+6@=hq;@1QaQ?!1*!
5rC)4'Fb9M!Wg%9JcLB&JcLB&RK*j!!sJuA(a:Rn78?id?=.+9@=hq8@1QaQ?!1*!5rC)4'Fb9M!Wg.<
JcLB&JcLB&QN.Ns!sJuA(a:Rn78?id?=.+<@=hq5@1QaQ?!1*!5rC)4'Fb9M!Wg7?JcLB&JcLB&PQ29r
!sJuA(a:Rn78?id?=.)K@=hq2@1QaQ?!1*!5rC)4'Fb9M!Wg@BJcLB&JcLB&OT5jl!sJuA(a:Rn78?id
?=*\?K42i0%q&aM=]7sZ2(9R\%0m";!W<"M!.k3&!.k3&!8@Ja!<WK3%i?KC3^leD>$bQD\7(S0&7AjN
=]7sZ2(9R\%0m";!<@]OJcLB&JcLB&fDlE_!sJuA(a:Rn78?id?=.*P@?=n,?sd2B;bKD6.3904#6Y&/
!JCH)!.k3&!.k4$!"T)4"UP\V+tboF:/tJ(?XUTVNF<0%?X6f590kEa*Y\_d#6Y)/LB)o+JcLB&JcO4!
%flb9#nIjs/ilEr<E`^9@)69/@0^1I?!1*!5rAlr*Y]%g"9JU]!.k3&!42`X!1a*#!<WK3%i?KC3^leD
>$bQDp0iP]e6rkq?X6f590kEa*Y]%g"9JV=!.k3&!.k3&!1Elu!<WK3%i?KC3^leD>$bQDq-ek`d:!Pn
?X6f590kEa*Y]%g"9JV@!.k3&!.k3&!1*Zr!<WK3%i?KC3^leD>$bQDr*b1cc=%5k?X6f590kEa*Y]%g
"9JVC!.k3&!.k3&!0dHq!<WK3%i?KC3^leD>$bQD@:=arb@(oh?X6f590kEa*Y]%g"9JVF!.k3&!.k3&
!0I6k!<WK3%i?KC3^leD>$bP9@"Vn/@1QaQ?!1*!5rC)4'Fb9M!Wi6"JcLB&JcLB&JcOO*%flb9#nIjs
/ilEr<E`^9@(9X/@1ZgR?!1*!5rC)4'Fb9M!W`:Q!.k3&!.k3&!8%8^!<WK3%i?KC3^leD>$bQD]4$e0
%:EOK=]7sZ2(9R\%0m":!WdrSJcLB&JcLB&eGp*\!sJuA(a:Rn78?id?=.*S@?"\&?sd2B;bKD6.390+
%0m";!J^Z,!.k3&!.k4!!"T)4"UP\V+tboF:/tJ(?XU]YMI?`t?X6f590kE?.3904#6Y)/M?&5.JcN.X
JcM>A%flb9#nIjs/ilEr<E`^9@.n#\@FS]r?sd2B;bKD6.3904#6Y)/^AricJcLB&JcM5>%flb9#nIjs
/ilEr<E`^9@/45_@F8Ko?sd2B;bKD6.3904#6Y)/_>o/fJcLB&JcM,;%flb9#nIjs/ilEr<E`^9@/OGb
@Er9l?sd2B;bKD6.3904#6Y)/`;kJiJcLB&JcM#8&HMt;#nIjs/ilEr<E`^9?t!Jq@EW'i?sd2B;bKD6
.3904#6Y)/a8gelJcLB&JcLo5%KQY8#nIjs/ilEr<E`^9!+:FfaC,Te?X6f590kEa*Y]%g"9JW&!.k3&
!.k3&!.k4*!"T)4"UP\V+tboF:/tJ(?XUBPP@5#1?X6f590kEa*Y]%g"9JT(JcLB&JcLB&JcOF'%flb9
#nIjs/ilEr<E`^9@(Tj/@1?UO?!1*!5rC)4'Fb9M!<N:T!.k3&!.k3&!7_&[!<WK3%i?KC3^leD>$bQD
^1!"0$=I4H=]7sZ2(9R\":YS=!We&VJcLB&JcLB&dJsdY!sJuA(a:Rn78?id?=.*V@>\Iu?sd2B;bKD6
#:U].%0m";!K$l/!.k3X!.k3A!"T)4"UP\V+tboF:/tJ(?XWS9Jmm/;%q&aM=]7sZ2(9R\%0m";!P\Vd
!.k3&!.k3>!"T)4"UP\V+tboF:/tJ(?XW\<Jmm&8%q&aM=]7sZ2(9R\%0m";!Q"hg!.k3&!.k3;!"T)4
"UP\V+tboF:/tJ(?XWe?Jmlr5%q&aM=]7sZ2(9R\%0m";!Q>%j!.k3&!.k38!"f56"UP\V+tboF:/tJ(
?XR;NJmli2%q&aM=]7sZ2(9R\%0m";!QY7m!.k3&!.k35!"K#3"UP\V+tboF:/tJ(?N=Jd@E;jf?sd2B
;bKD6.3904#6Y)/r;_ELJcLB&JcLB&gAh`b!sJuA(a:Rn78?id?=.*M@?Y+2?sd2B;bKD6.3904#6Y)/
!.k3&!.k3&!.k4'!"T)4"UP\V+tboF:/tJ(?XUKSOC8T+?X6f590kEa*Y]%g"9AQ)KE-T(JcLB&JcO=$
%flb9#nIjs/ilEr<E`^9@(p'/@1$CL?!1*!5rC)4'EejM"9JUZ!.k3&!.k3&!7CiX!<WK3%i?KC3^leD
>$bQD_-r40#@LnE=]7sZ2$YQO'Fb9M!We/YJcLB&ZiG[XSH'0$!sJuA(a:Rn78?id?=.+6@=hq;@1QaQ
?!1*!5rC)4'Fb9M!Wg%9JcLB&JcLB&RK*j!!sJuA(a:Rn78?id?=.+9@=hq8@1QaQ?!1*!5rC)4'Fb9M
!Wg.<JcLB&JcLB&QN.Ns!sJuA(a:Rn78?id?=.+<@=hq5@1QaQ?!1*!5rC)4'Fb9M!Wg7?JcLB&JcLB&
PQ29r!sJuA(a:Rn78?id?=.)K@=hq2@1QaQ?!1*!5rC)4'Fb9M!Wg@BJcLB&JcLB&OT5jl!sJuA(a:Rn
78?id?=*\?K42i0%q&aM=]7sZ2(9R\%0m";!W<"M!.k3&!.k3&!8@Ja!<WK3%i?KC3^leD>$bQD\7(S0
&7AjN=]7sZ2(9R\%0m";!<@]OJcLB&JcLB&fDlE_!sJuA(a:Rn78?id?=.*P@?=n,?sd2B;bKD6.3904
#6Y&/!JCH)!.k3&!.k4$!"T)4"UP\V+tboF:/tJ(?XUTVNF<0%?X6f590kEa*Y\_d#6Y)/LB)o+JcLB&
JcO4!%flb9#nIjs/ilEr<E`^9@)69/@0^1I?!1*!5rAlr*Y]%g"9JU]!.k3&!42`X!1a*#!<WK3%i?KC
3^leD>$bQDp0iP]e6rkq?X6f590kEa*Y]%g"9JV=!.k3&!.k3&!1Elu!<WK3%i?KC3^leD>$bQDq-ek`
d:!Pn?X6f590kEa*Y]%g"9JV@!.k3&!.k3&!1*Zr!<WK3%i?KC3^leD>$bQDr*b1cc=%5k?X6f590kEa
*Y]%g"9JVC!.k3&!.k3&!0dHq!<WK3%i?KC3^leD>$bQD@:=arb@(oh?X6f590kEa*Y]%g"9JVF!.k3&
!.k3&!0I6k!<WK3%i6B@3CHSA>$bP9@"Vn/@1QaQ?!1)u5Vsl0'Fb9M!Wi6"JcLB&JcLB&JcOO*%flb9
#n@ap/NH3n<*<L6@(9X/@1ZgR>Zalr5Vsl0'+>*K!W`:Q!.k3&!.k3&!8%8^!<WK2%Mg0;2aU2:=^>?A
]4$e0%:ELI=&DLP1++%T$jHh8!WdrSJcLB&JcLB&eGp-]!X&c<'d"n_5Y=pU>[CcF^L<.2$Xd=I>#nEh
4>A-$&d/RH!s/LY!.k3&!.k3&!7CiZ!<NB/$ks^01Hn<)<E`[7?spl\N+!$#?s[)@<)#b@/dEU=&./UD
!<J&XJcLB&ZiG[XSH'3%!WrW7&fN#K3^ZS==Bf'<ra>S2Jmm;?'4>3T?<gZ7:e<o1.j,T<#mCD3!P\Vd
!.k3&!.k3>!"o;5!sJuA(Eb1b5"A@I=Bf';?iFI5@=hq>@K'XH?X?u@<`2UZ4#&'%'Fb<N!Wg+;JcLB&
JcLB&Q2hR!!X&c<'-&;N3'g)2;cd.-?!^n;@"i%@@JsRI?X@#B=]SEo7QrXZ+W(e!"p4o-_uPAhJcLB&
JcLu7&-2h7"ptnX+"/j)5tFaK<`fN0>[:ZC?iFGk@Feld?l!*V?<pf>=B/0k76WU],TIL-#R(;2!QP1l
!.k3&!.k33!"8l0"UGML)'LF`3C$%@92JPf=B\s8?=.(<@$+mL@JsRN?XI,F?!CK7<DlR`6p3F\-6<p6
$3gV7!W)kK!.k3&!.k3&!8.>h!<N?-#n7Oc+Xf!&4[Vb6:fCCs>$G6;?N+=1@*2oS@JsRQ?XI,G?!LQ9
=&i-o91D3/1bC!p(D.&]"9SZ*rW%NMJcLB&JcLB&eGpTj!X&]7%MK^%-7q#65=A%9:Jt1o=B\p6?!^iE
?i+6Z@AdQ3@/aLQ?<piA>?P'/<)HC`7RB6s0e+Cg(D.&]"Tnf,!.k3&!.k3&!.k4!!$;4B!X&]6%2'Ht
,:P6%3^,o$8kr2]<EE:+>?kH>?=*V<qdA,dWF>[3ra-[P?<pf?>$4s.<)QLc8OYp.3&3'4+<)%,$j["=
!ri:S!.k3&!.k3&!6tQg!<E6)"pk\L'cJ/>.PEV<4[DM-928;^<*!+(>$G6:?!^k9?i"0j@B<o6@/aLT
?=$oC>[1K:=BAO&;GU"Z7mfL&2_ls5+rqL6%grXH!s8T*!JUT+!.k3X!.k3<!#5M8!X&]5$P!db)BU4R
/M]4F5!h\/%SKMl;H$Rr=BSg3>?kH>ra,P1q-]k(rF,M0rEoP1,[FY[>?Y03=&r:!;,9kX7moU*3AiKA
-R'QK'G(][#6b22!<Kb3JcLB&JcLB&PQ29r!<N?,#71eL&f)B,+t"lo1D_u25!_S,8PDlU;H$Rr='/U/
>?b?;?![G9rEo8+Y$q?<q-a,-ra%$Z?!LW=>$>'2=&i3t;,9nZ84Gs34ZPAS/L_th*>oS(%LWOH"9S]+
!PADa!.k3&!.k34!"Ar0!WrQ/#7:kM&eu9(*Zu^V.k`\:3BTMm77TpB9i"Va;cQk"=BSd1>?b?;ra#M0
qd8r&`aSRKra>Y2rEfJ/.9p+^>?Y03='&C$;c6Fe9hS&I6pX!u3&NEC.OH>])]'2#%LWRI"Tni*!PSPc
!.k3&!.k3/!!iT+!WrQ0#71bb%M9Bk)BBqG-Rp`'1cIHX5=.b-84lQM:Jaqf<)lt#=BJ^0>$G51>lJ%,
?MRsF@/F=2?i470?2e(^>?b96=]ea,<`N*s;,C"^91_WB6U<mt3ArZI/1Dni*ul.5&eGKZ#R:M9!s/K(
^AricJcLB&JcLQ+rW*$$""aWZ#7(YG%hTKl)B9hC,q(8r0f1dK4$Gnr6q0^=92//W:f1+h<)lt#='/U.
r`]>+r`oA,qHiSso3gunqHj2-ra#J-1g=0f>$5!1=BAO(<E)mp;,C%_9M.lH770@*4ZYP[1GCC1-R9iV
)]0>(&.T*U#R1G8!s8H&o)O@BJcLB&JcLB&cN#p*!<N<)"9eu7#n%1Q&JGos)]g+H,q(8q0JYID3BKAg
5sn%084cEI9hnJ\;,U=l<)lt"='&L+r`T5(rEK2)r*B2*k[+!hqcs)(r`];(2-<s^=&r=$<)Z[m;,C%`
9M7uK7n,m55X%:k3&WTJ0.\S#,U+<M)Aa,$&.T*U#R:P:!s8W(!V?AD!.k3&!.k3&!6P<@!BU>a!sAc3
#71bH%M06e()\&3+!MsW.4Zu'1,LmK3BKAg5XIh,7Rp!A92&&T:/=\`;GpFl<)cjt<`]3$rE0)&s&o,#
m9B?hr)s#$r`B)"3E9'Y<)Z^n;,L.c:/+DT8kDQD779L/5X%:l3B&fO0eY(--mg/^*ZQ(8'b_/i%1ERL
#6k>7!s/Q'!VHGE!.k3&!.k3&!6"s;!C$Ve!s8Z0"pYD@$OmRW&el)u)B9e@+s\K`.P*2*0f([F3'',a
5!M>"6UX@47n?3D92&#R:/4S\:f("d;H!Kmr)EPnlrO!`rD`bpr_bjU;,C(b:JOVY9M7uM8Ou?@779L/
5X.Fp4#o5X1bpd=/Lr7t,pOQT*?,k4'b_/i%L`^O#R:P;"9S],rW2ZlJcLB&JcLB&JcNOcrW,"\!WrN-
"U,)9#mq%K%M'-b'G_N')]]tB+s\K_.4Zr%0/54=2)dKT3]oMg5<qM$6:4.07Rfm=8H29]9)hQ`9`7]`
:@:pU:Amoe9`@[I8kMZH84Q0>77BU36:!k$5!;"i3]T,W2)@!A0.e_)-mp;c+WqgG)As>+'G:rf%1EUN
#R:P;"9\f.!rW/n!.k3&!.k3X!.k3+!<*$!!^$Md!sAc3"pYD?$4I@R%hTEf'c%W()]Tn@+X/0X-7C;n
/1iJ.0etOA2)[BQ3BB5`4?Ykl5<hD!5sdp;6iBFO7I`kF7K,^S6Q8?Y5s[b$5<h=p4Zkee3B9&X2Dm<I
1,(@6/Lr"p.46Gf,9e6P*?5t8(D[\u&eGQ_$k!CK#R:P;"9\f/!Wr<$W;qMMJcLB&JcLB&!!)rurW4t[
!sA`1"pYA=#mq%K%1Wm\&ebro(Dn#.*$$(B+<i$U,pjuf.4Qi!/M8\10JP==1GgsH2E(Ons#C!<rAsI1
r&Xg;s#C!:(,e$-1c.!D1,1I9/hJY+.k2tr-RL,a+!MjN+!)C@)As>,'bh8m&.]6[$k!CK#R:P<"U"r1
"9&B#!N?'N!.k3&!.k3&!;Z]n!WE0"""sc\"U5/9#RC_D$OdIS%M'*_&ebro()If*)B0Y:*ZlLI+X/-V
,palc-R^Dm.OtEJs"+.$r@[Rmr@\($(b@3g.k3"t.4?Sl-71#a,U4KV+<M[H*?6(=)AsA.()7Ms&ePZc
%LigS$OR1G#6tG:"U"r1"9&B"!N6!M!.k3&!.k3&!:p3f!WE0"""OKW"U,)7#6tM@#mq%J$k3[V%hK<b
&ebom'c%Q$(`4,/)B0Y9*??1B+!:J)rZV4aq]kt`qBPq_ruq@aru_4]%36E.)]K\6)&O/+()7Q"'GD,m
&J,H`%LigT$OR4I#RCY?"pG20"TJT&!rN(s!.k3&!.k3&!.k4:!;cfq!r`<$"TJZ)"rIRM#RC_C$47.L
$k3XU%M'']&.oKe&ebrX'`SpI(B#'I)"SXB)#b?N(B,'J'`SjH')rRD&H<7R%LrpV$k!FM$4."E#R:S=
"pG20"TAN%!rE#M!.k3&!.k3&!.k3U!;QZo!rW6#"TAT(#6"l,#lb51$N:G4%/gV8%fQt9&+'r*&,d";
%K6e7$i^S5$2t51#Q=r,"oST'"8i5s!S%1%!.k3&!.k3&!2fhm!W)rr"8rB$"oJT&#Q"f'$1SAu$2b)+
#Q4l*"oJN$"8i5q!R^t"!.k3&!.k3&!1a,`!Vuln!rrK""Q9OZ"Si/q!qlZ?!.k3&!.k3&!.k35!:g0\
!p]sX!qHB5!.k3&!.k3X!.k3&!6tSa!Up)@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3X!.Y~>

%%EndBinary
grestore
np
317.541 229.793 mo
315.95 229.793 li
315.769 229.287 315.59 228.805 315.41 228.366 cv
315.13 227.68 314.842 227.105 314.585 226.757 cv
314.458 226.582 314.34 226.468 314.263 226.416 cv
314.152 226.365 li
314.107 226.375 li
313.953 226.414 313.546 226.737 313.122 227.326 cv
312.675 227.93 312.18 228.783 311.663 229.793 cv
309.986 229.793 li
310.118 229.524 310.249 229.262 310.379 229.009 cv
310.899 228 311.406 227.125 311.916 226.435 cv
312.434 225.75 312.924 225.218 313.606 224.961 cv
313.779 224.899 313.965 224.865 314.15 224.865 cv
314.15 224.865 314.151 224.865 314.152 224.865 cv
314.154 224.865 314.156 224.865 314.158 224.865 cv
314.521 224.865 314.857 224.999 315.119 225.184 cv
315.585 225.515 315.9 225.978 316.201 226.517 cv
316.644 227.328 317.024 228.341 317.406 229.41 cv
317.451 229.537 317.496 229.665 317.541 229.793 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[8.50909 0 0 5.56364 192.251 63.0205 ]ct
snap_to_device
<<
/T 1
/W 26 
/H 17 
/M[26 0 0 -17 0 17 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
347.471 224.229 mo
332.988 224.229 li
338.472 223.978 343.432 223.437 347.471 222.689 cv
347.471 224.229 li
318.956 224.229 mo
304.271 224.229 li
304.271 222.652 li
308.346 223.419 313.38 223.974 318.956 224.229 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[43.8545 0 0 2.29091 186.687 68.5841 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 134 
/H 7 
/M[134 0 0 -7 0 7 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 134 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 134 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 134 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 134 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcP-;ra5M0Tjd@tqI'>1ScF?BJcO-ts'>V1rEoA.`*q>-q-a/.ra#S1\c@<^JcN.X#?b57>?kE=
?2e1/?hRml@E)aM@/OC2?3X\@>[1K:>1N\*!.k3<!"2_*<``C+=^#$6>[786ra,P1s'PA*`aSIHr*TD/
r`ok9>[(E9=]ea,<E/MhJcLB&JcPZJ&55eo:f:4k<E<1'=BSg2>?h)3ra#G.q-V!Hq-X&+ra#M.!aAl4
$s?_8='&F&<)QRi:/-cLJcLB&hZ+?W6q0^=92//W:f1+h<)lt#='/U.r`]>+r`oA,qHiSso3gunqHj)*
rEL1D>?Y35=]ed-<`W4";c6Ih:JFMT8Ol3:WrR_OJcN[g*&fl>4[25"6q0^=8k_rS:Jand;cH^r<`W:'
=BPQ*r`]8)r*8r$pKmDspKdZ$rEK8)r`L1B=BAR)<E3!s;Gp@g:JOSV8k;HA6pa.&4?>HP~>

%%EndBinary
grestore
np
grestore
gsave
293.751 177.797 mo
293.751 181.473 308.177 184.452 325.972 184.452 cv
343.767 184.452 358.192 181.473 358.192 177.797 cv
358.192 217.732 li
358.192 221.408 343.767 224.388 325.972 224.388 cv
308.177 224.388 293.751 221.408 293.751 217.732 cv
293.751 177.797 li
eclp
-117.256 -128.57 mo
602.743 -128.57 li
602.743 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 293.751 171.141 ]ct
/6 
<<
/ShadingType 2 
/BBox [-5.2198e+06 -3.80634e+06 3.9242e+06 3.05166e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!/!!!!0!!!!0!!!!1!!!!1!!!!2!!!!2!!!!3!!!!4!!!!4!!!!5!!!!6!!!!7!!!!7!!!!8!!!!9
!!!!9!!!!:!!!!;!!!!;!!!!<!!!!=!!!!>!!!!>!!!!?!!!!@!!!!@!!!!A!!!!B!!!!C!!!!C!!!!D
!!!!E!!!!E!!!!F!!!!G!!!!H!!!!H!!!!I!!!!J!!!!J!!!!K!!!!L!!!!M!!!!N!!!!O!!!!P!!!!Q
!!!!Q!!!!R!!!!S!!!!T!!!!U!!!!V!!!!W!!!!X!!!!Y!!!!Z!!!!Z!!!!\!!!!]!!!!^!!!!_!!!!`
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 293.751 171.141 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~%1WjX%LrsY%M''\%hB0]%hK9`&.fBa&.oKd&J>]h&eYfi&ebol',2,p'GV>t'bqGu'c%Q#()Ic'(Ddl(
(Ddo*(`4,.)&X;0)&X>2)B'P6)]Kb:*#oq<*#ot>*??1B*Zc@D*ZcCF+!2UJ+<VgN+X&!P+X&$R+sJ6V
,9nEX,9nEY,U=W],paia-71&d-71&e-RU8i-n$Jl-n$Jm.4H\q.Olnu.k<,$/1`>(/M/P,/hSb00/"t3
0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`EZS3&ilW3&ilW3B9,]4$,Mc4?P_g4Ztqk5!D.o
~>
]
>>
409200 0 409200 676237 [-5.2198e+06 -3.80634e+06 3.9242e+06 3.05166e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
grestore
gsave
293.751 177.797 mo
293.751 174.121 308.177 171.141 325.972 171.141 cv
343.767 171.141 358.192 174.121 358.192 177.797 cv
358.192 181.473 343.767 184.452 325.972 184.452 cv
308.177 184.452 293.751 181.473 293.751 177.797 cv
eclp
-117.256 -128.57 mo
602.743 -128.57 li
602.743 411.429 li
-117.256 411.429 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 293.751 171.141 ]ct
/7 
<<
/ShadingType 2 
/BBox [-5.2198e+06 -3.80634e+06 3.9242e+06 3.05166e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [409200 0 409200 676237 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!(!!!!(!!!!)!!!!)!!!!*!!!!*!!!!*!!!!+!!!!+!!!!,!!!!,!!!!-!!!!-!!!!-!!!!.!!!!.
!!!!/!!!!/!!!!/!!!!0!!!!0!!!!1!!!!1!!!!1!!!!1!!!!1!!!!2!!!!2!!!!3!!!!3!!!!3!!!!4
!!!!4!!!!5!!!!5!!!!6!!!!6!!!!6!!!!7!!!!7!!!!8!!!!8!!!!9!!!!9!!!!:!!!!:!!!!;!!!!;
!!!!<!!!!<!!!!=!!!!=!!!!>!!!!?!!!!?!!!!@!!!!@!!!!A!!!!A!!!!B!!!!B!!!!C!!!!C!!!!D
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 293.751 171.141 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~"pP89"pYA<#6tJ=#7(S@#RC\A#RC\A#RLeD#mgnE#mq"H$47+I$4@4L$O[=M$O[=M$OdFP$k*OQ$k3XT
%1NaU%1NaU%1NdW%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fEc&J5Te&J5Te&J5Wg&eYfi
&eYfj',)#m',)#n'GM5q'GM5q'GM5r'bqGu'bqH!()@Z$()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X;1
)B'M4)B'M4)]K_8)]K_8*#oq<*??.@*??.@*Zc@D*Zc@D+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+sJ3T
~>
]
>>
409200 0 409200 676237 [-5.2198e+06 -3.80634e+06 3.9242e+06 3.05166e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
grestore
gsave
-117.256 411.429 mo
602.743 411.429 li
602.743 -128.571 li
-117.256 -128.571 li
-117.256 411.429 li
clp
358.192 177.797 mo
358.192 181.473 343.767 184.452 325.972 184.452 cv
308.177 184.452 293.751 181.473 293.751 177.797 cv
293.751 174.121 308.177 171.141 325.972 171.141 cv
343.767 171.141 358.192 174.121 358.192 177.797 cv
cp
358.192 177.797 mo
358.192 217.732 li
358.192 221.408 343.767 224.388 325.972 224.388 cv
308.177 224.388 293.751 221.408 293.751 217.732 cv
293.751 177.797 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: VRKQMX+TimesNewRomanPS-BoldItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFX+TimesNewRomanPS-BoldItalicMT gcheck setglobal} if
1 386 3 <00010008000003dd0568001e00ec4032c604c11902260c3004330c350d30
17301948044805440c440d481648174a1d481e67009500960c11040c140c
1416030c0d1ebb01a8001a001a01bc40171dfb0f1e1f1e021e0d0c030307
020d0c03030a1a191717b801674012040214040402041902171407020117
190a1ab8ffc0b20f391abb016f0001000a0394b51105010c0102b8020640
0d1f07da20144014601403141a20ba0130020100182b4e10f65d4ded10f6
3c003f3fed10ed2bb10602435458b4901aa01a02005d5911393911390111
1239123939870e2e2b057d10c400111217390111121739182e5dedec0010
f50110c93130015d5d712121350037363635342623220727363736333216
151406070601213236373302d8fd300119c1a25373568b63253453739b90
bd5c906efeb001057e652c2f250104dab5bf615b729911944d6ab27567c9
9874fee13956>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 2506 8 <00010014fff505cb039f005001c840ad123e457a0f02592d572e593c5546
ef52050f52df520200241024262426253718363737484718462446384645
474858155d4e5d4f770c783c873987448f5295089514973b9a3c9052a408
a90ca614a92da93cb719fa3cf84621454646000c010047241d1a23270a0c
37093a01004624d3042301c423d4230223a4151a1a362a2f142f40140c3f
2a2a2f093a3a2b3b3e143e40140c3f3b3b3e0046462b474a144a40140c3f
47474a4ed34f7e5033bb030000120041030040291206500600074746463b
3b3a0a28233f2340239023a023b0230523a7270b2a51282f2a3e3b4a4710
52b80349400b1aa7042a01c02ad42a022ab8032a40093aa7043b01c03b01
3bb8032a401646a7474f2a4eeb4ab24719512a173b1747172a510a64b903
4900182b2b103c2b2b2b4e10f44df4f4e410edf45d71edf45d71fdfc2b10
3c103c103c2b10c0003f7ae95d182f2b3f3c103c103c3f003c3c103ced10
ed10f4ed87052e012b2b7d10c4872e012b182b0e7d10c4870e2e012b182b
0e7d10c40118f65d71ed111239111239392b11123900393911123939870e
7d10c43130015d7172005d01435c58400d2d0a11393d1e11394a14103947
b8ffecb2103918b8ffd8b20f113e2b2b2b2b2b5901033637363633321615
140707363736373633321615140703061514163332373637363717060623
222635343713363534262322070e03070723133635342623220706070323
133635342626233725022080813b577139413a1b2d823958412d3335471e
6f190d080b08242809122245a5463d4a1971170e070d0d134f94391c3dfd
bb0f0d0725507a6451ffbc1c1024330a0155039ffe52c645653e4e2f315f
a1c84266241a47394066fe8b5318080e071d380c19168178432d2b570186
5114070d060a54d97a61ce028d3514070c6196d3fee102835f2810170d26
3b00>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
1 3198 9 <0001001afff40407039f0034013e4097123d297904025820532a5036030b
200b2c30367036042518370c470c46295c325c3367089608992ca608aa2c
b70ee0360d0418141802292a2a002d2c2b2b2e0e171a0a01290129002a18
d317a4090e0e361d22142240140c3f1d1d222a0000362e2b142e40140c3f
2e2e2b253306060032d3337e343400072b2a0a173f1740179017a0170417
a71a0b1d3528221d2e2b100ea7c41d011db8032a40122b332a32eb2eb22b
19351d172b171d350a64b9034900182b2b103c2b2b4e10f44df4f4e410f4
5ded2b103c103c2b10c0003f7ae95d182f3f3c3f3c10f4ed103c10ed8705
2e012b2b7d10c4870e2e18012b2b0e7d10c40118f6ed111239390039392b
111239870e7d10c4c4870e10c43130015d5d7172005d01435c58b9000cff
e2b30f113e1fb8ffec400f0f113e211e11392d1e10392c1e0f392b2b2b2b
2b5901033637363633321615140703061514163332373637363717062322
2635343713363534262322070603032313363534262623372502237c7d3e
5b843a344a1880100f080a0b232409142693a23e46187d0d120c26368a81
52ffbb1b1024320b0151039ffe53bc4564484d3e3850fe5538110a10081d
350e1c17f740302a5301ab2a140b113484fefbfed702825f2811170d263b
>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
PMNKFX+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/two 3 def
/m 8 def
/n 9 def
end
PMNKFX+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 50 /two put
dup 109 /m put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one /two 26{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 25{/.notdef}rp /m /n 2{/.notdef}rp /q 142{/.notdef}rp]PMNKFX+TimesNewRomanPS-BoldItalicMT nfPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [20 0 0 -20 0 0 ]msf311.951 209.092 mo(M)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [13.3333 0 0 -13.3333 0 0 ]msf329.734 214.092 mo(m )[10.3707 0 ]xsh%ADOBeginSubsetFont: YORQMX+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.016
 256 array 0 1 255 {1 index exch /.notdef put} for  /YORQMX+Arial-BoldMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000075a6670
676d0000000000000818000005d7676c79660000000000002078000000e0
686561640000000000000df000000036686865610000000000000e280000
0024686d74780000000000000e4c000000086c6f63610000000000000e54
000000066d6178700000000000000e5c000000206e616d65000000000000
0e7c00000028707265700000000000000ea4000011d26764697200000000
000000000000000005ba001c05ba001c05a7001c0426001c0000ffe40000
ffe40000ffe4fe69ffe405ba001cfe69ffe402ea0000011d0000011d0000
00000000000000b200ac00d70128012000b301fa001700f8011901310049
000400f7000300af00fd0095001400540096011200240016005500490104
0119012b008c019bff76ffe9003d009200a2ffb70182ffaa0016008f00c6
00f8001c00de04010037004e00550055006500e903e50059ff9a00080087
000b003b00520116006100d600d600f500000093009400be017cfff80004
001400820092003c00410041ffc1fffc002a008c049005d809b5009100bb
0106ff63ff69001e0022008a022bffd6ffdf0026005900a300ac0104012b
01c004480021006b00850098011903c6006b009500a400fe010c025d0343
05bf000000490056006e0077008a00aa00ca0112015005d805f0ff7bffe7
0006001300280061006900e90135014d02a5040cff3effda005b00b900c8
01190119011901c0045b04a7055bfe3fff9dffc2001500b7010a01bc01c1
0532058efd81ffa1ffae000c00260031003d004e00560062008300c100c9
00f100f2027fff7f00480053007700c5011d01200126012801d60219027e
027e03d3002e0041005d006b0075009f00b000b200ba00bb00bd00d600db
00e000e50114011b014a0162019101f2020c026402cf039b03b403d40401
04a9001600230025002a007400a500b600cc00cd00cf0105012001300150
016a016f0197019d01e002b002ec02f70408048304fb04fd0526fee0fefb
ff4efff50018001a004c007a007f009100a300b300b400ce00d500f200f3
00f601100138016801a101b001e001ec02090222024f0270029602a502ad
034e039103c104350442046b04cd04da0586058b076107fefca6fe93fead
fed1ffb7ffd10003000e00180026004600690081008f00a500bf00d300d5
00d900dd00e20119012b0138013b015a015e016801730188019401ad01c5
01d101ea01f20200020002000222023b0244024f026f0272027e02820293
029402a502cf02cf02d002da02dd02eb02f5030503220336037103a103b0
03b803d003e604100426042e0431044f045a04ff053205320547055305a8
05ab05c205f0063c0664067006e80782078408ccfd2afddefe00fe68feb0
feb3ffaa00080059007a0091009e00a200af00b400bb00ca00cc00ce00d9
00e000f40114011a01210127012b01390146014b014d0157015c01650182
018701920198019b01a201ae01c501c501d102070222022b024102530261
026502840287028d02b402b402ba02c902d602d802ed02f503170323032b
03310349035a035b036e03710374037e03840391039103aa03cf03d303e7
03e803ed04080417041e0475047a049904a704b404d1054c056d056d05a2
05bf05c005d105fc05fc0602061a061c062f066a06a806e2070607360750
078907d407f30870011c012a011a01200000000000000000000000000219
000b001e02aa0214047f01ed0000001d0104000f0091002b018801530112
01f3003f03fe0168010e047f01ed036e03150219041300000000064004b0
0000027401bb003501c5007f06020301000004e000b201dc02e004c3023d
00d50160011904a7036e05ca022100ab0426009002bc02bb014200b4023c
0256029c030001e501a800e5006b00780094016b017300ab01ed013a017d
0137017f00d4021603530184003cffa202040109014901f0006e03150081
0464005e0000000000000000000000000000000000000000000000000000
00000000013900dc00e9fe9e040d047c012b00b80096005900ac00df01a9
00fa0105ffec00170003005500610004008c00a3008500280120005d00d6
007f012601190104016c06cf00b4010600000737063e047a00f000f900e9
05ba042604420000ffe7fe69049e04e3ff37ff2d01200105012000a80074
0068004700f200e500d900bd00a800680047005c0048000a002800320041
0050005a0064007d00870091ffb0ff9cff83ff79ff6f00cb012000fa012c
01fa01a000d500b8005c003c00c800c8008f00d9018b00b3004700000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000fe6400c000ea01180125
013203b003ed0576059005aa05b405be05cd063100780084009b00cc00e2
00f4010a0120016300d100ea00f7010801420019002c0034004100380048
0058006c025903bd0043011a007000d30028003700420050005a00640073
00780082008c009c00a500bd00ce00f00110015c00be00d801020117012c
016300ea01080041004b0055005f007300a60109018301b300410064001e
002a00eb00fa010e01380274002c00400082009600b600c000cc00dc00e6
00f000ff010a0120012c013b01440156016300f700570064011001360050
01b10000ffb60039004e004403cc00e5002401100042012201a400f00060
00e0000e001d003905e30102002cfe4eff38026903bd011600ff000e00a0
0054001b003d01710041000f005000fd0015014f0035fe52002c00d30103
04b001d200b600c000990265ff870377fe6c00cb00a9005c004004760744
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0c05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8023623701020b802364520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b0035158b00425b004
25012046b01060482046b0106048590a21211b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b8fff0
60482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b
2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab01243
5c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a
58381b2121592d2c462346608a8a462320468a608a61b8ff806223201023
8ab902a702a78a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b202020243604259b1
2401885458b2022002436042004b014b5258b2020802436042591bb94000
0080885458b202040243604259b94000008063b80100885458b202080243
604259b94000010063b80200885458b2021002436042595959592d000001
000000050f5cae4d87c55f0f3cf50819080000000000a2e33c1d00000000
c59b6255fafafcfd1000082400010009000100000000000000010000073e
fe4e00431000fafafa7a1000000100000000000000000000000000000002
06000100080000c9000000360070000000010000000200f2003c008f0006
00020010002f00550000073c02c200050002000000010012000100000000
000600130000574c47554a422b417269616c2d426f6c644d54000000b154
80410d03ac00af03ac0002001003ac002003ac00a003ac0003004003acb3
070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340b803
acb32d943280bc03ab005f0033ffc003abb2553340b803abb340443240b8
03abb3333b3240b803abb32f313240b803abb2083340b803abb30714321f
411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab
00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40b803
a5b208330f411403a50001004003a500cf03a500ff03a50003002003a500
af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b208330f41
1b03a30001000f03a3001003a3008003a300af03a300cf03a30005006f03
a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f1041
0a039e007f039e0002039a000f0101001fffc00398b310143240b80399b3
0f1332404110039500500395000200b0034d00c0034d0002006f0391007f
03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b
0080038b000300a0038b00010020038b0040038b0002ffc0038bb3131632
40b80383b20f1132b9ffc0037bb2303432b9ffc0037bb310183250411403
7800010365036e0023001f037e036e001e001f0363036e001d001f036203
64000d001fffc00340b30f1032804110033f0001033f03150029001f0341
03160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a
32410a034303180032001f030f030d0034001f03080307b2321f20bb0340
000100400388b3090b3240b80388b2101532bd038503070014001f038003
07b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a003
540002001f036e0001009f036e00010040036eb2090b3241110345031c00
16001f036b031d0015001f0346031e0015001f03a703a10046001f039db3
261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033eb30d
0e32c04109033e000100b0038e00c0038e0002ffc00390b3263832004126
03280030032800020020037f0030037f00020010038a0030038a0050038a
006f038a007f038a009f038a000600000389003003890002002f037a0070
037700900377009f037a0004ffc00315b20f1032b9ffc00315b2242832b9
03190318b2321f10bb031a0001ffc0031ab3090e3240b80318b2121332b9
ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb032a
00010040032cb3181b3240b80370b2090c32bd031703160032001fffc003
16b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001000f
031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f02cb
02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b3090c32
40b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02c300
30001f02da02b80032001f02d902b9003f001f02d802b80064001f02b902
b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002
c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b212
1632412502c202c1001c001f02d702c10024001f02c102c00022001f02bf
02c00018001f02c0027400c8001f02b50235003b001f02b40235003b001f
02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c81fb8
02afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02
adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a02a1
015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc201fb9
029002904018374025402d40a6033025302d30a6032025202d203720a620
4110028e0005009f028b0001028b028b0037002002890030028900400289
00900289b20437b041fd027400c0027400020080027400a0027400020060
0274007002740002000002740010027400020080027400f002740002003f
0285004f028500020090027e0090027f009002800090028100040090027a
0090027b0090027c0090027d000400900274009002750090027700030070
027e0070027f007002800070028100040070027a0070027b0070027c0070
027d000400700274007002750070027700030060027e0060027f00600280
0060028100040060027a0060027b0060027c0060027d0004006002740060
02750060027700030050027e0050027f005002800050028100040050027a
0050027b0050027c0050027d000400500274005002750050027700030040
027e0040027f004002800040028100040040027a0040027b0040027c0040
027d000400400274004002750040027700030030027e0030027f00300280
0030028100040030027a0030027b0030027c0030027d0004003002740030
02750030027700030020027e0020027f002002800020028100040020027a
0020027b0020027c0020027d000400200274002002750020027700030010
027e0010027f001002800010028100040010027a0010027b0010027c0010
027d0004001002740010027500100277000300e0027e00e0027f00e00280
00e00281000400e0027a00e0027b00e0027c00e0027d000400e0027400e0
027500e00277b103d041c5027e00d0027f00d0028000d00281000400d002
7a00d0027b00d0027c00d0027d000400d0027400d0027500d00277000300
30027400400274000200c0027e00c0027f00c0028000c00281000400c002
7a00c0027b00c0027c00c0027d000400c0027400c0027500c00277000300
b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b0027c00
b0027d000400b0027400b0027500b00277000300a0027e00a0027f00a002
8000a00281000400a0027a00a0027b00a0027c00a0027d000400a0027400
a0027500a0027700030090027e0090027f00900280009002810004009002
7a0090027b0090027c0090027d0004009002740090027500900277000300
20027e0020027f002002800020028100040020027a0020027b0020027c00
20027d00040020027400200275002002770003028101580801001f028001
290801001f027f00ec0801001f027e00d80801001f027d00b10801001f02
7c00a60801001f027b00820801001f027a00370801001f02770026080100
1f027500200801001f0274001f0801b21f370f41160235004f0235005f02
35006f0235009f023500af023500bf0235000700af023500cf023500df02
3500ff02354022040f074f079f07af07bf0705af07e007020f064f069f06
af06bf0605af06e0060220411b020d0001005f02350001008f0235000100
7f023500ef02350002002f0235003f02350002003f0234004f0234000202
350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a0141090247
0104001e001f022000370201001f0158400c263e1fd8263e1f3726273e1f
b8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26361f
b126361fa626361f8226361f3726361f3226361f2d26361f2526361f1f26
361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f21263e1f
20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bcb227
281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b6002701
01001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb
1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f0401
001f0154001f0401001f0153001f0201001f0152b21f561fb80151b21f29
1fb8012bb227261f410d012a00270125001f0129015800e4001f0125001f
0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d01080027
0801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb90158
0401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b8
0156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401001f
00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db80801b5
1f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de41f73
1f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb61f50
25891f491fb80125b21f4725b80401400b1f461f791f401f271f3920bc02
ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f341f
2a25b80801b21f5537b80111402a07f00790075b0742073b07230722071e
071d071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b10100858d1bb900010119858d5959001816763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
4660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d4544
b9020e020d45445958b90470020f455258b9020f04704459594bb0e45320
5c58b90020020e4544b90027020e45445958b908420020455258b9002008
424459594bb8012553205c58b90026020f4544b90021020f45445958b90a
0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b12020
45445958b9250000d8455258b900d825004459594bb8040153205c58b901
5800264544b1262645445958b923200158455258b9015823204459594bb0
2953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f010d
4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f455258
b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958b914
28001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523
456023456560234560b08b766818b080622020b17e754565234520b00326
6062636820b003266165b075236544b07e234420b131c34565234520b003
266062636820b003266165b0c3236544b0312344b100c3455458b1c34065
44b23140314523614459b33f3c5841456523456023456560234560b08976
6818b080622020b1583c4565234520b003266062636820b003266165b03c
236544b058234420b13f414565234520b003266062636820b003266165b0
41236544b03f2344b10041455458b141406544b23f403f45236144594569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b
2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b04061445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418
004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b
2b0073737373737373737373737373737373737373737373747474747474
7474747474747474747474747474747575757374757575752b7300004bb0
2a534bb036515a58b1070745b040604459004bb02e534bb036515a58b103
0345b0406044b1090945b8ffc06044592b4569440174007373732b456944
2b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326fbd02
77007f02770002ffc00277b22f3132b9ffc00277b322253240b80274b32f
353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3
251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ffc0b6
a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b7374
59002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73
012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b
73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b
2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b73
2b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74752b
000000>
[225 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 108 1 <000300c900000738011900030007000b003e402406050201040a380b0b07
070404000a022601f2072605f20b26200840080208190ccdab182b4e10f4
5d4dfdf6fdf6ed003f3c103c103c10ed1732313021112111211121112111
2111061e011afc3c0119fc3c01190119fee70119fee70119fee7>YORQMX+Arial-BoldMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>YORQMX+Arial-BoldMT AddT42Char 
YORQMX+Arial-BoldMT /CharStrings get begin
/elipsis 1 def
end
YORQMX+Arial-BoldMT /Encoding get
dup 33 /elipsis put
pop
end
%ADOEndSubsetFont
/PMNKGA+Arial-BoldMT /YORQMX+Arial-BoldMT findfont ct_VMDictPut/PMNKGA+Arial-BoldMT*1 [33{/.notdef}rp /elipsis 222{/.notdef}rp]PMNKGA+Arial-BoldMT nfPMNKGA+Arial-BoldMT*1 [24 0 0 -24 0 0 ]msf226.364 216.404 mo(!)sh%ADOBeginSubsetFont: DDLBAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.016
 256 array 0 1 255 {1 index exch /.notdef put} for  /DDLBAA+Arial-BoldMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000075a6670
676d0000000000000818000005d7676c796600000000000020780000006c
686561640000000000000df000000036686865610000000000000e280000
0024686d74780000000000000e4c000000086c6f63610000000000000e54
000000066d6178700000000000000e5c000000206e616d65000000000000
0e7c00000028707265700000000000000ea4000011d26764697200000000
000000000000000005ba001c05ba001c05a7001c0426001c0000ffe40000
ffe40000ffe4fe69ffe405ba001cfe69ffe402ea0000011d0000011d0000
00000000000000b200ac00d70128012000b301fa001700f8011901310049
000400f7000300af00fd0095001400540096011200240016005500490104
0119012b008c019bff76ffe9003d009200a2ffb70182ffaa0016008f00c6
00f8001c00de04010037004e00550055006500e903e50059ff9a00080087
000b003b00520116006100d600d600f500000093009400be017cfff80004
001400820092003c00410041ffc1fffc002a008c049005d809b5009100bb
0106ff63ff69001e0022008a022bffd6ffdf0026005900a300ac0104012b
01c004480021006b00850098011903c6006b009500a400fe010c025d0343
05bf000000490056006e0077008a00aa00ca0112015005d805f0ff7bffe7
0006001300280061006900e90135014d02a5040cff3effda005b00b900c8
01190119011901c0045b04a7055bfe3fff9dffc2001500b7010a01bc01c1
0532058efd81ffa1ffae000c00260031003d004e00560062008300c100c9
00f100f2027fff7f00480053007700c5011d01200126012801d60219027e
027e03d3002e0041005d006b0075009f00b000b200ba00bb00bd00d600db
00e000e50114011b014a0162019101f2020c026402cf039b03b403d40401
04a9001600230025002a007400a500b600cc00cd00cf0105012001300150
016a016f0197019d01e002b002ec02f70408048304fb04fd0526fee0fefb
ff4efff50018001a004c007a007f009100a300b300b400ce00d500f200f3
00f601100138016801a101b001e001ec02090222024f0270029602a502ad
034e039103c104350442046b04cd04da0586058b076107fefca6fe93fead
fed1ffb7ffd10003000e00180026004600690081008f00a500bf00d300d5
00d900dd00e20119012b0138013b015a015e016801730188019401ad01c5
01d101ea01f20200020002000222023b0244024f026f0272027e02820293
029402a502cf02cf02d002da02dd02eb02f5030503220336037103a103b0
03b803d003e604100426042e0431044f045a04ff053205320547055305a8
05ab05c205f0063c0664067006e80782078408ccfd2afddefe00fe68feb0
feb3ffaa00080059007a0091009e00a200af00b400bb00ca00cc00ce00d9
00e000f40114011a01210127012b01390146014b014d0157015c01650182
018701920198019b01a201ae01c501c501d102070222022b024102530261
026502840287028d02b402b402ba02c902d602d802ed02f503170323032b
03310349035a035b036e03710374037e03840391039103aa03cf03d303e7
03e803ed04080417041e0475047a049904a704b404d1054c056d056d05a2
05bf05c005d105fc05fc0602061a061c062f066a06a806e2070607360750
078907d407f30870011c012a011a01200000000000000000000000000219
000b001e02aa0214047f01ed0000001d0104000f0091002b018801530112
01f3003f03fe0168010e047f01ed036e03150219041300000000064004b0
0000027401bb003501c5007f06020301000004e000b201dc02e004c3023d
00d50160011904a7036e05ca022100ab0426009002bc02bb014200b4023c
0256029c030001e501a800e5006b00780094016b017300ab01ed013a017d
0137017f00d4021603530184003cffa202040109014901f0006e03150081
0464005e0000000000000000000000000000000000000000000000000000
00000000013900dc00e9fe9e040d047c012b00b80096005900ac00df01a9
00fa0105ffec00170003005500610004008c00a3008500280120005d00d6
007f012601190104016c06cf00b4010600000737063e047a00f000f900e9
05ba042604420000ffe7fe69049e04e3ff37ff2d01200105012000a80074
0068004700f200e500d900bd00a800680047005c0048000a002800320041
0050005a0064007d00870091ffb0ff9cff83ff79ff6f00cb012000fa012c
01fa01a000d500b8005c003c00c800c8008f00d9018b00b3004700000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000fe6400c000ea01180125
013203b003ed0576059005aa05b405be05cd063100780084009b00cc00e2
00f4010a0120016300d100ea00f7010801420019002c0034004100380048
0058006c025903bd0043011a007000d30028003700420050005a00640073
00780082008c009c00a500bd00ce00f00110015c00be00d801020117012c
016300ea01080041004b0055005f007300a60109018301b300410064001e
002a00eb00fa010e01380274002c00400082009600b600c000cc00dc00e6
00f000ff010a0120012c013b01440156016300f700570064011001360050
01b10000ffb60039004e004403cc00e5002401100042012201a400f00060
00e0000e001d003905e30102002cfe4eff38026903bd011600ff000e00a0
0054001b003d01710041000f005000fd0015014f0035fe52002c00d30103
04b001d200b600c000990265ff870377fe6c00cb00a9005c004004760744
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0c05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8023623701020b802364520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b0035158b00425b004
25012046b01060482046b0106048590a21211b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b8fff0
60482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b
2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab01243
5c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a
58381b2121592d2c462346608a8a462320468a608a61b8ff806223201023
8ab902a702a78a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b202020243604259b1
2401885458b2022002436042004b014b5258b2020802436042591bb94000
0080885458b202040243604259b94000008063b80100885458b202080243
604259b94000010063b80200885458b2021002436042595959592d000001
000000050f5cae4d87c55f0f3cf50819080000000000a2e33c1d00000000
c59b6255fafafcfd1000082400010009000100000000000000010000073e
fe4e00431000fafafa7a1000000100000000000000000000000000000002
0600010002390000000000360036000000010000000200f2003c008f0006
00020010002f00550000073c02c200050002000000010012000100000000
0006001300004557565950462b417269616c2d426f6c644d54000000b154
80410d03ac00af03ac0002001003ac002003ac00a003ac0003004003acb3
070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340b803
acb32d943280bc03ab005f0033ffc003abb2553340b803abb340443240b8
03abb3333b3240b803abb32f313240b803abb2083340b803abb30714321f
411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab
00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40b803
a5b208330f411403a50001004003a500cf03a500ff03a50003002003a500
af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b208330f41
1b03a30001000f03a3001003a3008003a300af03a300cf03a30005006f03
a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f1041
0a039e007f039e0002039a000f0101001fffc00398b310143240b80399b3
0f1332404110039500500395000200b0034d00c0034d0002006f0391007f
03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b
0080038b000300a0038b00010020038b0040038b0002ffc0038bb3131632
40b80383b20f1132b9ffc0037bb2303432b9ffc0037bb310183250411403
7800010365036e0023001f037e036e001e001f0363036e001d001f036203
64000d001fffc00340b30f1032804110033f0001033f03150029001f0341
03160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a
32410a034303180032001f030f030d0034001f03080307b2321f20bb0340
000100400388b3090b3240b80388b2101532bd038503070014001f038003
07b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a003
540002001f036e0001009f036e00010040036eb2090b3241110345031c00
16001f036b031d0015001f0346031e0015001f03a703a10046001f039db3
261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033eb30d
0e32c04109033e000100b0038e00c0038e0002ffc00390b3263832004126
03280030032800020020037f0030037f00020010038a0030038a0050038a
006f038a007f038a009f038a000600000389003003890002002f037a0070
037700900377009f037a0004ffc00315b20f1032b9ffc00315b2242832b9
03190318b2321f10bb031a0001ffc0031ab3090e3240b80318b2121332b9
ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb032a
00010040032cb3181b3240b80370b2090c32bd031703160032001fffc003
16b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001000f
031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f02cb
02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b3090c32
40b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02c300
30001f02da02b80032001f02d902b9003f001f02d802b80064001f02b902
b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002
c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b212
1632412502c202c1001c001f02d702c10024001f02c102c00022001f02bf
02c00018001f02c0027400c8001f02b50235003b001f02b40235003b001f
02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c81fb8
02afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02
adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a02a1
015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc201fb9
029002904018374025402d40a6033025302d30a6032025202d203720a620
4110028e0005009f028b0001028b028b0037002002890030028900400289
00900289b20437b041fd027400c0027400020080027400a0027400020060
0274007002740002000002740010027400020080027400f002740002003f
0285004f028500020090027e0090027f009002800090028100040090027a
0090027b0090027c0090027d000400900274009002750090027700030070
027e0070027f007002800070028100040070027a0070027b0070027c0070
027d000400700274007002750070027700030060027e0060027f00600280
0060028100040060027a0060027b0060027c0060027d0004006002740060
02750060027700030050027e0050027f005002800050028100040050027a
0050027b0050027c0050027d000400500274005002750050027700030040
027e0040027f004002800040028100040040027a0040027b0040027c0040
027d000400400274004002750040027700030030027e0030027f00300280
0030028100040030027a0030027b0030027c0030027d0004003002740030
02750030027700030020027e0020027f002002800020028100040020027a
0020027b0020027c0020027d000400200274002002750020027700030010
027e0010027f001002800010028100040010027a0010027b0010027c0010
027d0004001002740010027500100277000300e0027e00e0027f00e00280
00e00281000400e0027a00e0027b00e0027c00e0027d000400e0027400e0
027500e00277b103d041c5027e00d0027f00d0028000d00281000400d002
7a00d0027b00d0027c00d0027d000400d0027400d0027500d00277000300
30027400400274000200c0027e00c0027f00c0028000c00281000400c002
7a00c0027b00c0027c00c0027d000400c0027400c0027500c00277000300
b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b0027c00
b0027d000400b0027400b0027500b00277000300a0027e00a0027f00a002
8000a00281000400a0027a00a0027b00a0027c00a0027d000400a0027400
a0027500a0027700030090027e0090027f00900280009002810004009002
7a0090027b0090027c0090027d0004009002740090027500900277000300
20027e0020027f002002800020028100040020027a0020027b0020027c00
20027d00040020027400200275002002770003028101580801001f028001
290801001f027f00ec0801001f027e00d80801001f027d00b10801001f02
7c00a60801001f027b00820801001f027a00370801001f02770026080100
1f027500200801001f0274001f0801b21f370f41160235004f0235005f02
35006f0235009f023500af023500bf0235000700af023500cf023500df02
3500ff02354022040f074f079f07af07bf0705af07e007020f064f069f06
af06bf0605af06e0060220411b020d0001005f02350001008f0235000100
7f023500ef02350002002f0235003f02350002003f0234004f0234000202
350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a0141090247
0104001e001f022000370201001f0158400c263e1fd8263e1f3726273e1f
b8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26361f
b126361fa626361f8226361f3726361f3226361f2d26361f2526361f1f26
361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f21263e1f
20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bcb227
281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b6002701
01001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb
1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f0401
001f0154001f0401001f0153001f0201001f0152b21f561fb80151b21f29
1fb8012bb227261f410d012a00270125001f0129015800e4001f0125001f
0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d01080027
0801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb90158
0401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b8
0156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401001f
00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db80801b5
1f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de41f73
1f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb61f50
25891f491fb80125b21f4725b80401400b1f461f791f401f271f3920bc02
ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f341f
2a25b80801b21f5537b80111402a07f00790075b0742073b07230722071e
071d071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b10100858d1bb900010119858d5959001816763f183f
123e113946443e113946443e113946443e113946443e11394660443e1139
4660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d4544
b9020e020d45445958b90470020f455258b9020f04704459594bb0e45320
5c58b90020020e4544b90027020e45445958b908420020455258b9002008
424459594bb8012553205c58b90026020f4544b90021020f45445958b90a
0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b12020
45445958b9250000d8455258b900d825004459594bb8040153205c58b901
5800264544b1262645445958b923200158455258b9015823204459594bb0
2953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f010d
4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f455258
b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958b914
28001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523
456023456560234560b08b766818b080622020b17e754565234520b00326
6062636820b003266165b075236544b07e234420b131c34565234520b003
266062636820b003266165b0c3236544b0312344b100c3455458b1c34065
44b23140314523614459b33f3c5841456523456023456560234560b08976
6818b080622020b1583c4565234520b003266062636820b003266165b03c
236544b058234420b13f414565234520b003266062636820b003266165b0
41236544b03f2344b10041455458b141406544b23f403f45236144594569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b
2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b04061445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418
004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b
2b0073737373737373737373737373737373737373737373747474747474
7474747474747474747474747474747575757374757575752b7300004bb0
2a534bb036515a58b1070745b040604459004bb02e534bb036515a58b103
0345b0406044b1090945b8ffc06044592b4569440174007373732b456944
2b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326fbd02
77007f02770002ffc00277b22f3132b9ffc00277b322253240b80274b32f
353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3
251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ffc0b6
a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b7374
59002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73
012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b
73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b
2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b73
2b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74752b
000000>
[109 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> DDLBAA+Arial-BoldMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>DDLBAA+Arial-BoldMT AddT42Char 
DDLBAA+Arial-BoldMT /CharStrings get begin
/space 1 def
end
DDLBAA+Arial-BoldMT /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/PMNKGB+Arial-BoldMT /DDLBAA+Arial-BoldMT findfont ct_VMDictPut/PMNKGB+Arial-BoldMT*1 [32{/.notdef}rp /space 223{/.notdef}rp]PMNKGB+Arial-BoldMT nfPMNKGB+Arial-BoldMT*1 [24 0 0 -24 0 0 ]msf250.364 216.404 mo( )shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [16 0 0 -16 0 0 ]msf376.918 45.0877 mo(S)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [10.6667 0 0 -10.6667 0 0 ]msf385.816 49.0877 mo(q2 )shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [16 0 0 -16 0 0 ]msf377.293 77.3377 mo(S)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [10.6667 0 0 -10.6667 0 0 ]msf386.191 81.3377 mo(qn)[5.33331 0 ]xsh397.457 81.3377 mo( )shPMNKFZ+TimesNewRomanPSMT*1 [0 14 14 0 0 0 ]msf79.4813 92.8499 mo(... )[3.5 3.5 3.5 0 ]ysh71.1054 250.713 mo(... )[3.5 3.49998 3.5 0 ]ysh372.272 256.65 mo(... )[3.5 3.5 3.5 0 ]ysh246.998 92.3385 mo
223.434 92.3385 li
223.434 7.24763 li
246.998 7.24763 li
246.998 92.3385 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 117.256 293.141 ]ct
[24.2182 0 0 85.7454 105.851 200.475 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 74 
/H 262 
/M[74 0 0 -262 0 262 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 74 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnn,^Z3JcMVIqZ6KorWE*#rW2]mJcLB&r;ccsrW<'$r<2s#"p>&2
!s/K(U&]cFec>[MrrW3&rri?*rs&K.rs8H-#7(P="Tnf,!R1Ur!3H56!<E6'!sAc3#7(VC$O[@P%1WmG
%g`^T$OI%B"9JT)p],mGK`M)Q&HW%;"pYGA$k3^Y&J>`k'c%S_(CClk&Io0S"p=u.!Mf^I!8@Jg!<E6(
"9o,=$k<j_'c.]*)]Tk>+!CM*$QpK1(_dMi#R(;2!R:[s!3lM=!<N?,#71eL',DH)*ZuXP,pt)i.OtBI
$RmGK*uYh($3gV7!VcYH!/LUY!<N?,#7;"P&f2K/+seWe/1rV21,CaDr\Y-A1+t.)*uGV!#R(81!Mf^I
!;ccW!#>S9!X&`8%hom',Ub2s1,LmJ3BB2_48h8N3]T&O.O,lH%LE:@!<L7AJcN@^&HMq8"pkbR)BgI[
1,V$Q4?Yn-5Q*hX5<h:m2`!!1*#/qi"Tnc+nc47AO8o^j!X/i<&fDi@0JtmS56*tH62a%[5<h=o3]8]C
,9.C-#mCD3!M'4B!9O81!<N?-$4dmn-SID@5XIh)6:!k$5!;"j4$,J_2`3<A-Qj9?%1!+=!<L4@JcNF`
.00JP#7D._,:k]75sn%-5sIIm3B&iR1c$mA0J>"--6X<C&.8^G!W`>l!.k36!"T)3":,GN*%!@"5X\%/
5s6&F2)?p=/1W2!-mp>f,9\*H'bLi["Tnf,RfJ$?k5Zn2!X&f>(*=t]4@2G(5s.(\/L`"l+sA$M*ZZ4>
)Aj5'%h&aK"9JT)`;kJi]`9D\!sJuA(Eb4c4[MP'4Z>&D,Tn'F(`*r&'bh;o&J,H^$4$h=!s&Gj!.k37
!"]/5"UYbW+Y5N86:3su1+FI_*#KA&&.]6\%1N^S$OR1G"pG,3!WeYgJcP!7('+L@$4n$u/N,dZ5s7+Y
,TIR3%1ERMrWrK."pP88"9\f.rW0k9JcNLb('+L@$4n(!/N,dY5W^eQ+W(e##mUY<quls#rrW0#l2ZD9
PQ29r!sK#C)'UXj4[D:n1+=7Z%Kd%B"U+Z'qZ2l\JcP$8'`eC?$4n(!/N,aW5<1GG*#&hf"9S`#!P&2^
!5ALK!<WK4&/cZD2Ea;h3%u^"'+>-L!Wh!TJcPZJRfF0(!sK#C)'UXj4[;1j0I@_O$O6b8!WE(N!.k4?
!#5M:"UYeY+tY]95X%.]-6!R*#6P#.W;qMM`W-_S!sK#C)'UXj4[;1j0I@_O$O6b8!Rh%#!1X$(!<WK4
&/cZD2Ea;h3%uZu&dnpH!Wi6"JcLB&nGj:)!sK#C)'UXj4[;1j0I@_O$O6b8!N6!M!65'S!<WK4&/cZD
2Ea;h3%uZu&dnpH!Wg^LJcM>A'`eC?$4n(!/N,aW4ub5C)\NM`!s/N$!.k3&!:g+)!<WK4&/cZD2Ea;h
3%uZu&dnpH!Wf2!JcNjl'`eC?$4n(!/N,aW4ub5C)\NM`!s/MN!.k3B!#5M:"UYeY+tY]95X%.]-6!R*
#6P#.qZ)3JJcPBB'`eC?$4n(!/N,aW4ub5C)\NM`!s/M#!.k3m!#5M:"UYeY+tY]95X%.]-6!R*#6P#.
ciAXtT)]T,!sK#C)'UXj4[;1j0I@_O$O6b8!VueJ!.k4C!#5M:"UYeY+tY]95X%.]-6!R*#6P#.V#^Am
JcO-t'`eC?$4n(!/N,aW4ub5C)\NM`!s/MF!.k3J!#5M:"UYeY+tY]95X%.]-6!R*#6P#.o)O@BJcPZJ
'`eC?$4n(!/N,aW4ub5C)\NM`!s/Lp!.k3u!#5M:"UYeY+tY]95X%.]-6!R*#6P#.a8gelVZ7G4!sK#C
)'UXj4[;1j0I@_O$O6b8!V-5B!.k4K!#5M:"UYeY+tY]95X%.]-6!R*#6P#.SH+6AdJt!_!sK#C)'UXj
4[;1j0I@_O$O6b8!QP1l!2ol4!<WK4&/cZD2Ea;h3%uZu&dnpH!WhfkJcLB&r;[Q5!sK#C)'UXj4[;1j
0I@_O$O6b8!Ls.A!7Lo_!<WK4&/cZD2Ea;h3%uZu&dnpH!Wg:@JcMbM'`eC?$4n(!/N,aW4ub5C)\NM`
!s/Mm!.k3&!<)s5!<WK4&/cZD2Ea;h3%uZu&dnpH!WebjJcO:#'`eC?$4n(!/N,aW4ub5C)\NM`!s/MB
!.k3N!#5M:"UYeY+tY]95X%.]-6!R*#6P#.mf<4bJcLN*!s&K-$5!ge+tY]95X%.]-6!R*#6P#.PQ6:8
gAhrh!sK#C)'UXj4[;1j0I@_O$O6b8!PSPc!3lM=!<WK4&/cZD2Ea;h3%uZu&dnpH!WhKbJcLQ+"9AT.
$4mad+tY]95X%.]-6!R*#6P#.P5p17g]/&i!sK#C)'UXj4[;1j0I@_O$O6b8!PJJb!3uS>!<WK4&/cZD
2Ea;h3%uZu&dnpH!WhHaJcLT,"T\]/$4n'c+tY]95X%.]-6!R*#6P#.OoU(6h#J/j!sK#C)'UXj4[;1j
0I@_O$O6b8!PADa!4)Y?!<WK4&/cZD2Ea;h3%uZu&dnpH!WhE`JcLW-"p"f0$4n(!%P9S%5X%.]-6!R*
#6P#.OT9t5h>e8k!sK#C)'UXj4[;1j0I@_O$O6b8!P8>`!42_@!<WK4&/cZD2Ea;h3%uZu&dnpH!WhB_
JcLZ.#6=o1$4n(!/IaU$5X%.]-6!R*#6P#.O8sk4qZ,^X'`eC?$4n(!/N,aW4ub5C)\NM`!s/M1!.k3_
!#5M:"UYeY+tY]95X%.]-6!R*#6P#.h>i--OT5jl!sK#C)'UXj4[;1j0I?uC&dnpH!We,XJcOp5'`eC?
$4n(!/N,aW4ub5C)\NM`!s/M0!.k3`!#5M:"UYeY+tY]95X%.]-6!R*#6P#.h#N$,OoQ!n!sK#C)'UXj
4[;1j0I@_B&dnpH!We)WJcOs6'`eC?$4n(!/N,aW4ub5C)\NM`!s/M/!.k3a!#5M:"UYeY+tY]95X%.]
-6!R*#6P#.g]2p+P5l-p!sK#C)'UXj4[;1j0I@_O":GG:!We&VJcP!7'`eC?$4n(!/N,aW4ub5C)\NM`
!s/M.!.k3b!#5M:"UYeY+tY]95X%.]-6!R*#6P#.gAlg*PQ29r!sK#C)'UXj4[;1j0I@_O$NgV9!We#U
JcP$8'`eC?$4n(!/N,aW4ub5C)\NM`!s/M-!.k3c!#5M:"UYeY+tY]95X%.]-6!R*#6P#.g&Q^)qZ*)c
'`eC?$4n(!/N,aW4ub5C)\NM`!s/N&!.k3&!:Tt'!<WK4&/cZD2Ea;h3%uZu&dnpH!Wf8#JcNdj'`eC?
$4n(!/N,aW4ub5C)\NM`!s/MP!.k3@!#5M:"UYeY+tY]95X%.]-6!R*#6P#.r;_ELJcP<@'`eC?$4n(!
/N,aW4ub5C)\NM`!s/M%!.k3k!#5M:"UYeY+tY]95X%.]-6!R*#6P#.dK"k!SH'B*!sK#C)'UXj4[;1j
0I@_O$O6b8!W2qL!.k4A!#5M:"UYeY+tY]95X%.]-6!R*#6P#.VZ;;Ka8cqU!sK#C)'UXj4[;1j0I@_O
$O6b8!RUn!!1j0*!<WK4&/cZD2Ea;h3%uZu&dnpH!Wi/uJcLB&o)KL+!sK#C)'UXj4[;1j0I@_O$O6b8
!N#jK!6G3U!<WK4&/cZD2Ea;h3%uZu&dnpH!WgXJJcMDC'`eC?$4n(!/N,aW4ub5C)\NM`!s/N"!.k3&
!;$7+!<WK4&/cZD2Ea;h3%uZu&dnpH!Wf+tqZ)3Jci=d]!sK#C)'UXj4[;1j0I@_O$O6b8!Qb=n!2]`2
!<WK4&/cZD2Ea;h3%uZu&dnpH!WhlmJcLB&qZ%?3!sK#C)'UXj4[;1j0I@_O$O6b8!M0:C!7:c]!<WK4
&/cZD2Ea;h3%uZu&dnpH!Wg@BJcM\K'`eC?$4n(!/N,aW4ub5C)\NM`!s/Mo!.k3&!;lg3!<WK4&/cZD
2Ea;h3%uZu&dnpH!WehlJcO4!'`eC?$4n(!/N,aW4ub5C)\NM`!s/MD!.k3L!#5M:"UYeY+tY]95X%.]
-6!R*#6P#.nGn.@JcP`L'`eC?$4n(!/N,aW4ub5C)\NM`!s/Ln!.k4"!#5M:"UYeY+tY]95X%.]-6!R*
#6P#.`W1SjW;mY6!sK#C)'UXj4[;1j0I@_O$O6b8!Up)@!.k4M!#5M:"UYeY+tY]95X%.]-6!R*#6P#.
RfJ$?e,U3a!sK#C)'UXj4[;1j0I@_O$O6b8!Q>%j!3-#6!<WK4&/cZD2Ea;h3%uZu&dnpH!Wh`iqZ)3J
L&_;V!sK#D&/cZD2Ea;h3%uZu&dnpH!WeMcJcOO*'`eC?$4n(!/N,aW4ub5C)\NM`!s/M;!.k3U!#5M:
"UYeY+tY]95X%.]-6!R*#6P#.kQ$27LB%GX!sK#C&/cZD2Ea;h3%uZu&dnpH!WeJbJcOR+'`eC?$4n(!
/N,aW4ub5C)\NM`!s/M:!.k3V!#5M:"UYeY+tY]95X%.]-6!R*#6P#.k5^)6L]@SZ!sK#C)%RoC2Ea;h
3%uZu&dnpH!WeGaJcOU,'`eC?$4n(!/N,aW4ub5C)\NM`!s/M9!.k3W!#5M:"UYeY+tY]95X%.]-6!R*
#6P#.joBu5O9#+X"p+o3$P=:%%PB\(5X%.]-6!R*#6P#.OT9t5li?e]quRT8"UGPN*$d0s5!_@l0I@_O
$O6b8!P8>`!5nm9!WE/u"8r?;"pbPH'cn\V3Boeo3%uZu&dnpH!WhB_JcM8?#QXr-!WrQ."U4l0rW``8
#RLnL',_rC1CZE269dF`-6!R*#6P#.O8sk4qZ-?j$3://!sAc4#RLeErX0SP$k3[W&el3*-S@>A6:4!t
0I7VM$O6b8!OMiY!6tQm!<E6("U>>A%1Wm[&J>`j'GVB")BBtJ/MoRU6ps:"0-qMK$3gS6!T!g.!2TZ>
!<E6("U>AD&/,cp)&aG6*$$(B+XABb0/YgW77Tg43%cH\)%d2[!s/L[!.k4I!%@pL!sAi9%MKWt*ZuXP
,pjuf.4Ql%0f:sT6:XU=7mK!b+rCjt"p+f+ZN,RWci>Kq!WrW5%20R",:=rl/hf"81GgsJ3BTMm7S-9J
91M6*/0Pf?#mCA2!Sma-!2]`@!<NB/$P4'o,UtH'2)mTW4$>bl5sn(28ki)X:eaJF2(Kdb"V(eA!W`=X
!.k4K!%@pL!X&c;&fDi@0/YaP5!VD#6UaI78P;cR;,U=i:.RT+.N]B8#R(81YlK@UdJt]s!<WK2%20X)
.PWkE5=%Y)77Kg>8k_uV;,^Fn;GKbI1asI\%1!(<!S[U+!2olD!<E9+#Rh@b+t53(3^#_o6UX@47nH?I
:/Fhe;c6@]5;Xf2'b1<O"9JUY!.k4K!%@pM":#;H(`t%T0f:pP4?Ykm5sdq-7nQHM:f1%`83\s]*u5=l
"Te]*YlK@UdJt]s!WrW6%hop),q:K#1,CaE2`NfZ4[28%84uZP9Lh?+.j5]>#mCA2!S[U+!2olD!<N?,
#R_1Y)'0qH-7C;m.kE8)0JbRH4@)D-8kMT=2_?3j&.&FB!W`=V!.k4L!%@pL!WrW4$kEsd(`FA7*ZlLJ
+sSB^.P<M:5!qe17R/pc,8h%""p4o-YQ07TdJtZr!<NB.#RUtN&/#Wj'bqK#(`=85+=&Ej2a'Jr76igc
,T77%"p4o-g&Q^)qZ*_u-NO5L"9eu8#mq%K%1NdW%hB3a'Gh`4.53bH6UO*u0-qMK$O6b8!WE(N!.k1X
!<E6("9\l4"pYD4#T*jS$4@=T'cSAJ1d"&j5<(>D)\NM`!s/M&!.k4%!<*$!!r`<""TAQ>#71bL(*=nY
3^5qq3%uZu&dnpH!WgaMJcMeNquQWq(BXaB"pbYO*$m6t5!_Cm0I@_O$O6b8!W<"M!.k4K!;6F.!X&`:
&fW&J2a0Jj3%uZu&dnpH!Wf5"JcNgk'`nLB$P=:%/iGjX4ub5C)\NM`!s/MO!.k3A!#5M:"UYeY+tY]9
5X%.]-6!R*#6P#.quD<KJcP?A'`eC?$4n(!/N,aW4ub5C)\NM`!s/M$!.k3l!#5M:"UYeY+tY]95X%.]
-6!R*#6P#.d/\auScBK+!sK#C)'UXj4[;1j0I@_O$O6b8!W)kK!.k4B!#5M:"UYeY+tY]95X%.]-6!R*
#6P#.V>u2JaT*%V!sK#C)'UXj4[;1j0I@_O$O6b8!RLgu!1s6+!<WK4&/cZD2Ea;h3%uZu&dnpH!Wi,t
JcLB&oDfU,!sK#C)'UXj4[;1j0I@_O$O6b8!Moen!.k3t!#5M:"UYeY+tY]95X%.]-6!R*#6P#.aT-nm
V>q>3!sK#C)'UXj4[;1j0I@_O$O6b8!V6;C!.k4J!#5M:"UYeY+tY]95X%.]-6!R*#6P#.ScF?Bd/Xm^
!sK#C)'UXj4[;1j0I@_O$O6b8!QY7m!2ff3!<WK4&/cZD2Ea;h3%uZu&dnpH!WhilJcLB&qu@H4!sK#C
)'UXj4[;1j0I@_O$O6b8!M'4B!7Ci^!<WK4&/cZD2Ea;h3%uZu&dnpH!Wg=AJcM_L'`eC?$4n(!/N,aW
4ub5C)\NM`!s/Mn!.k3&!;um4!<WK4&/cZD2Ea;h3%uZu&dnpH!WeekJcO7"'`eC?$4n(!/N,aW4ub5C
)\NM`!s/MC!.k3M!#5M:"UYeY+tY]95X%.]-6!R*#6P#.n,S%?JcPcM'`eC?$4n(!/N,aW4ub5C)\NM`
!s/Lm!.k4#!#5M:"UYeY+tY]95X%.]-6!R*#6P#.`;kJiWW3b7!sK#C)'UXj4[;1j0I@_O$O6b8!Ug$c
!.k3*!!<6("UYhQ)'UXj4[;1j0I@_O$O6b8!L*S9!8@Jg!<WK4&/cZD2Ea;h3%uZu&dnpH!Wg"8JcN%U
'`eC?$4n(!/N,aW4ub5C)\NM`!s/Me!.k3+!!E<)"UYeP)'UXj4[;1j0I@_O$O6b8!L!M8!8IPh!<WK4
&/cZD2Ea;h3%uZu&dnpH!Wft7JcN(V'`eC?$4n(!/N,aW4ub5C)\NM`!s/Md!.k3,!!NB*"UYeY%jES`
4[;1j0I@_O$O6b8!KmG7!8RVi!<WK4&/cZD2Ea;h3%uZu&dnpH!Wfq6JcN+W'`eC?$4n(!/N,aW4ub5C
)\NM`!s/Mc!.k3-!!WH+"UYeY+q?1_4[;1j0I@_O$O6b8!KdA6!8[\j!<WK4&/cZD2Ea;h3%uZu&dnpH
!Wfn5JcN.X'`eC?$4n(!/N,aW4ub5C)\NM`!s/Mb!.k3.!!`N,"UYeY+tX6^4[;1j0I@_O$O6b8!K[;5
!;ccX!#5M:"UYeY+tY]95X%.]-6!R*#6P#.ZiG[X])WQH!sK#C)'UXj4[;1j0I@_O$O6b8!T!g.!0I6k
!<WK4&/cZD2Ea;h3%uZ`)\NM`!s/L[!.k45!#5M:"UYeY+tY]95X%.]-6!R*#6P#.ZN,RW]DrZI!sK#C
)'UXj4[;1j0I@_O$O6b8!Sma-!0R<m!<WK4&/cZD2Ea;h3%uZu"VM1J!s/LZ!.k46!#5M:"UYeY+tY]9
5X%.]-6!R*#6P#.Z2fIV]`8cJ!sK#C)'UXj4[;1j0I@_O$O6b8!Sd[,!0[Bo!<WK4&/cZD2Ea;h3%uZu
&d/RI!s/LY!.k47!#5M:"UYeY+tY]95X%.]-6!R*#6P#.YlK@U^&SlK!sK#C)'UXj4[;1j0I@_O$O6b8
!S[U+!0dHq!<WK4&/cZD2Ea;h3%uZu&dndH!s/LX!.k48!#5M:"UYeY+tY]95X%.]-6!R*#6P#.YQ07T
^AnuL!sK#C)'UXj4[;1j0I@_O$O6b8!SRO*!;cbc!#5M:"UYeY+tY]95X%.]-6!R*#6P#.rW%NMJcP9?
'`eC?$4n(!/N,aW4ub5C)\NM`!s/M&!.k3j!#5M:"UYeY+tY]95X%.]-6!R*#6P#.df=t"S,a9)!sK#C
)'UXj4[;1j0I@_O$O6b8!W<"M!.k4@!#5M:"UYeY+tY]95X%.]-6!R*#6P#.VuVDL`rHhT!sK#C)'UXj
4[;1j0I@_O$O6b8!R^t"!1a*)!<WK4&/cZD2Ea;h3%uZu&dnpH!Wi3!JcLB&nc0C*!sK#C)'UXj4[;1j
0I@_O$O6b8!N,pL!6>-T!<WK4&/cZD2Ea;h3%uZu&dnpH!Wg[KJcMAB'`eC?$4n(!/N,aW4ub5C)\NM`
!s/N#!.k3&!:p1*!<WK4&/cZD2Ea;h3%uZu&dnpH!Wf.uJcNmm'`eC?$4n(!/N,aW4ub5C)\NM`!s/MM
!.k3C!#5M:"UYeY+tY]95X%.]-6!R*#6P#.q>c*IJcPEC'`eC?$4n(!/N,aW4ub5C)\NM`!s/M"!;cbJ
!71]\!<WK4&/cZD2Ea;h3%uZu&dnpH!WgCCJcMYJ'`eC?$4n(!/N,aW4ub5C)\NM`!s/Mp!.k3&!;ca2
!<WK4&/cZD2Ea;h3%uZu&dnpH!WekmJcO0u'`eC?$4n(!/N,aW4ub5C)\NM`!s/ME!.k3K!#5M:"UYeY
+tY]95X%.]-6!R*#6P#.nc47AJcP]K'`eC?$4n(!/N,aW4ub5C)\NM`!s/Lo!.k4!!#5M:"UYeY+tY]9
5X%.]-6!R*#6P#.`rL\kVuRP5!sK#C)'UXj4[;1j0I@_O$O6b8!V$/A!.k4L!#5M:"UYeY+tY]95X%.]
-6!R*#6P#.S,e-@df:*`!sK#C)'UXj4[;1j0I@_O$O6b8!QG+k!3#r5!<WK4&/cZD2Ea;h3%uZu&dnpH
!WhcjJcLB&rW!Z6!sK#C)'UXj4[;1j0I@_O$O6b8!Lj(@!7Uu`!<WK4&/cZD2Ea;h3%uZu&dnpH!Wg7?
JcMeN'`eC?$4n(!/N,aW4ub5C)\NM`!s/Ml!;cbJ!/:IU!<WK4&J,g(/N,aW4ub5C)\NM`!s/Lf!.k4*
!#5M:"UYeY+tY]95X%.]-6!R*#6P#.^&W`bYlGL>!sK#C)'UXj4[;1j0I@_O$O6b8!U'N8!/COW!<WK4
&.f^'/N,aW4ub5C)\NM`!s/Le!.k4+!#5M:"UYeY+tY]95X%.]-6!R*#6P#.]`<WaZ2bU?!sK#C)'UXj
4[;1j0I@_O$O6b8!TsH7!/LUY!<WK4&/c!&/N,aW4ub5C)\NM`!s/Ld!.k4,!#5M:"UYeY+tY]95X%.]
-6!R*#6P#.]E!N`ZN(^@!sK#C)'UXj4[;1j0I@_O$O6b8!TjB6!/U[[!<WK4&/cZ%/N,aW4ub5C)\NM`
!s/Lc!.k4-!#5M:"UYeY+tY]95X%.]-6!R*#6P#.])[E_ZiCgA!sK#C)'UXj4[;1j0I@_O$O6b8!Ta<5
!/^a]!<WK4&/cZD%5p@74ub5C)\NM`!s/Lb!.k4J!9F1q!<WK4&/cZD2Ea;h3%uZu&dnpH!WfY.JcNC_
'`eC?$4n(!/N,aW4ub5C)\NM`!s/M[!.k35!"K#3"UYeY+tY]95X%1_-O(P($jZt<!rN(Z!.k45!#5M:
"UYeY+tY]95sI@b-lj!3#mCG6rW;iq^Aric]Dr`K!sK#C)'UXj5!_Fp1FaL`&.AgK"U"u*"9&B#!UKf<
!0R<m!<WK4&/cZD2EjGn4>nc9#9+?g$jm:G#Q4l+"U5)4!s/N)!LNk=!9X>"!<WK4%i?H@2EjGo4uk>G
+;tt,&.T-X$Ocq@#mgkC#6b54!W`>>!.k3a!%.dL"UP\U+Y,E56:4%$2(g7"*>oY.'GD)l&J5Qb%LidP
#6b22!<MTgJcLu7&-2k9#n@^m.Ps7S6pj4$1bTXp-6aQS*?6":)AsA.'b_,f$4$e;!W`=j!.k47!%7jL
":,GO*@ER&5t"+.5<CbY0.\S%-RL,c,9n?S*ZGn/%grXH!s&G@!.k3b!%7jL":#>K)^I$p5!hY*6U3dq
3&WTL0eb:7/hJS'-R0ZM'+P?R"9JVl!.k38!"f55!sT)D(Eb.^3Bf_r6UF(((HsuE4$#A]3&``P1+t.(
*Z,Lu#Qt20!La"?!9aCk!<NE1%29a+.l'(H5Q!hH5SH@H5!D+l4#o/P.O#fG%LE:@!<L+=JcNLb&HMq9
"ptnW*$d!f2*!`]5!M:-5Rp"A4#\rH,TIO/#mCD3!U]r>!;cbb!#GY:!sJr=&/H60-S-r-2)dNV4$5Vg
4['E@5!;"h2DQd.*#/qi"Tnc+P5p17mJnU8!WrT3$kO-k*[2p[/1rV31GgsI2`E]U2`<NJ/LVb['+G3N
!W`>8!.k3h!#>S9!WrT3$P!da)&s_A,UOlf.P!&%0)dL5/hJP#+rh@0$O6e9!<M?`JcM2=('+F;!sJo9
$k<j_()Rr0*?QCI+sS?Y%OEDH,9\*I((gu^"p4o-OT9t5m/SC4!<N?+"U>>A$k<g\',2/s(Dn#.)B0V6
)Aj5(&.JpM"9JT)])[E__>sQ9&-;q:"U52;$4@7O%Ls!\&J=sS$5!g[%1<IH"9S]+j8ac3Q2pmb$N^D4
"9er5#6tM@$2t;3$iUM?$4-tC"U"o/!<J5]JcP$8rW3!"rr`6'rWW*%#6b86!s/N)!Or,]!5&=0!W3#n
"9&B$!T=$1!0.'P!<<2t!K$l/!8@ML!O)QU!.k3&!.k3&!.k3&!;cbJ!29ID~>

%%EndBinary
grestore
np
2 lw
243.424 86.1128 mo
239.189 86.1128 235.757 85.5407 235.757 84.835 cv
235.757 49.3905 li
235.757 48.6848 232.324 48.1128 228.09 48.1128 cv
232.324 48.1128 235.757 47.5407 235.757 46.8351 cv
235.757 11.3905 li
235.757 10.6848 239.189 10.1128 243.424 10.1128 cv
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: VRKQMX+TimesNewRomanPS-BoldItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFX+TimesNewRomanPS-BoldItalicMT gcheck setglobal} if
1 1736 6 <0002006dfe5605be056b0027003800dd400b332a0a0c34342a0a0c342cb8
fff0b30b0c342bb8ffcc404e0a0c342f082f0c2f103a0f86138714961396
14080a0b141310131a0f0504032e0a0b22360a0300010121141514141415
141a15010003362e010b1303030e28351e03312715114011133411c70306
b8ffc0400911133406c7af0e010eba0335000303a24014151500092e4d40
1a011a1939364d221a3a7a6c182b4e10f64de94e10f4714df9003f3c10f4
fd5ded2b10ed2b10ed3fed1112173901111217391239872e2b7d10c40011
3901111239391217391139390010c90110c93130005d012b2b2b2b050736
333204333237363717060423222423220727012627262635341200333216
1615140200070613220e020215141633323736123534260264b0633f5701
3c5b645535381e65feeed075fec85c495313017182455e68ff01add37ade
7aaefed79766e14f6f787c6d6a536e4d99c1671fa014542416351c7b8343
16190145163040df76de01c3010e7adf78b3fe87fee83f2b052e3986f9fe
548f7a7d49910231db897b00>PMNKFX+TimesNewRomanPS-BoldItalicMT AddT42Char 
PMNKFX+TimesNewRomanPS-BoldItalicMT /CharStrings get begin
/Q 6 def
end
PMNKFX+TimesNewRomanPS-BoldItalicMT /Encoding get
dup 81 /Q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 [32{/.notdef}rp /space 16{/.notdef}rp /one /two 26{/.notdef}rp /M 2{/.notdef}rp /P /Q /.notdef /S 25{/.notdef}rp /m /n 2{/.notdef}rp /q 142{/.notdef}rp]PMNKFX+TimesNewRomanPS-BoldItalicMT nfPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [16 0 0 -16 0 0 ]msf209.548 52.3836 mo(Q)shPMNKFX+TimesNewRomanPS-BoldItalicMT*1 [10.6667 0 0 -10.6667 0 0 ]msf221.102 56.3836 mo( )sh1.5 lw
14.9557 113.068 mo
17.0055 105.932 19.0553 98.8516 20.6449 98.0219 cv
22.2346 97.1921 23.1967 103.498 24.4517 108.089 cv
25.7066 112.681 26.9616 126.067 28.2166 125.625 cv
29.4716 125.182 30.7684 107.204 32.0233 105.545 cv
33.2783 103.885 33.9476 115.612 35.8301 115.612 cv
37.7125 115.612 41.1846 106.375 43.4017 105.545 cv
45.6188 104.715 46.581 108.477 49.0909 110.579 cv
51.6008 112.681 56.0769 118.931 58.5868 118.102 cv
61.0968 117.272 61.0968 105.987 64.276 105.545 cv
67.4553 105.102 75.0688 115.17 77.5787 115.612 cv
80.0886 116.055 77.5787 108.089 79.4612 108.089 cv
81.3436 108.089 85.7778 115.17 88.9571 115.612 cv
92.1364 116.055 95.9431 111.021 98.4531 110.579 cv
100.963 110.136 102.26 111.408 104.142 113.068 cv
106.025 114.727 107.28 121.033 109.831 120.646 cv
112.383 120.259 115.855 112.681 119.327 110.579 cv
122.799 108.477 126.732 108.255 130.706 108.089 cv
@
%ADOBeginSubsetFont: BQDQMX+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PMNKFZ+TimesNewRomanPSMT gcheck setglobal} if
1 206 3 <00010080ffe10405056b00380257401912952c010f010f020b03000f0428
0029052b4f014f0209113ab8014640d03638361a031b045f185f195f1a5f
1b06050d050e002ac03a04740b740d740e760f701e701f702f7030890886
0b870d870e840f872ba804a83310120d330d340d351d331d341d352f012f
022d04201e201f29292d333e013e023f043019301e301f30213d343d3548
0d482a540b560d57105629562b1d1f011f021b331f351b3654185419541a
59325c335c345c355c365a370e030b0b29130b1b29230b203a3b29303a72
12721389249807982f9930a82fc028c12ac62bc03af03a144e08381b006f
021baf01cf0102017f010101ba00b8034b400d359a311c1b1d6f1f1b1e1e
ba1db8034b4034199a142a2b2b3c0c0e140c0c0e2b0c2a0e0426092b0c2a
0e04062301fd0000062831032328140902ac01401e223401011f260126b8
012340102f11bf1102df11012011af11df110311b80287b71fac1e2b1009
0109b80123401f9f2e01bf2eef2eff2e032e404735402ecf2eef2e03002e
202e302ec02e042ebc014600390146011800182b4e10f45d5d2b71724ded
72f4edfd5d7172fd72392f2bed003fed3fed3c10ed111217390111121739
870e2e2b0e7d10c4180010ecf4ed0110edf4ed0010ecf4ed5d011071edf4
ed3130437940362430071328260b2c093300290f26330124132633010730
0933000a2d0c33000b0c2c2b27102a33010f0e292a2512233300082f0633
01002b2b103c103c2b103c103c2b012b2b2b2b2b8181015d00725d435840
09630b660d6710632b045d595d0171722b0071005d435c58400c0b180f39
04300f3933300f39002b2b2b590111232e0223220615141716171e021514
062322272626232206072311331e02333236353426272624262635343633
3217163332363703ab25125dac5c68882b3ee9be8b4befbc3b341fc31a19
1d0725251a58b56c7d91373a27fea4934ce0ad6c7938171a210a056bfe2b
87a05e7f513e334b7d666d94519adf09053f1e2f01d1929160845a32662c
1ec3748c5492d335191f2f00>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 968 4 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 1986 5 <00010046ffe4034a03af002101f5b2080401b102024354584020021a060c
10100255060c0f0f0255060c0d0d02550616250f0907602170210221b8ff
c0b513130255211db8ffd4b4131402551db8ffcab6121202551d3103002f
ed2b2bc42b5d3fc4ed012f2b2b2bcdc431301bb11223b8ffc040732a2d34
0023430d5d36170d5705021c135404530553065407581b581c0767057605
80008021b41bc520d020e000e50509370147015618551c5f236018601c76
18721c8a128e1390119018a601a402af23b301c101c707c719e908e41cea
20f4011806024a1257128b1f8b208023f02307112001bcffe00020ffe000
1fffe0b2001d00b803464030102101602180210200211021202150216021
70219021a021b021c021d021e021f0210d21661ddf0f010fc7162509071d
b8ffd8b214391db8ffd8403812391d31030b21cc1f0c014f0c8f0c020c2f
100030004000600070009000b000c000e00009300040000200aa731a831a
02501a019f1a011ab8010c4012f006010006100620063006400605064322
43b9029100182b4e10f472714ded5d7271fd715de47172ed003fed2b2b3f
eded7110f45d7172e412b10602435458400a531d631d731d03931d01005d
7159393130383838013801715d005d017200722b2b435c58b4001018391b
b8fff0b613390510103901b8ffc0b2103920b8ffc0b11039002b2b2b2b01
2b5959017101060623220235340033321615140623222726262726232207
061514163332373637034a25d8839ce80101b487ae312c3b1e110b23233e
643d51a189624e3734015cb5c30106dfd8010e8f4d262f2615761f1e4a62
a1a4fb432e79>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 2592 6 <0002004cffe4035303b00014001d037db10202435458402808161415000c
0f100255000e0c0f1002550e0c0d0d02550e153040000120003000020000
10000200b8ffc0b41314025500b8ffc040111111025500000b1b25110700
0710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ffd6b41314
025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed12392f2b
2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d158000a0
00b0000320003000400003000010000200000b1b2511070807b8ffc04024
1010065510072007b00703000760078007a00704079204a204b204030431
0b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655000c0f0f
0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd2b2bc011
12392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31301b4019
125f185d1960006014d6030519201c3917201c3916401c391fb8ffc0400a
434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e341b061909
58135e165f175a185b1a07010309060709080c0515490689028c06870c8a
10851da302ab18b513d402d90fda10f402f3031312600760087007800789
09c107c80ff007080401070d84020309baffe00006ffe0404a3609460247
094f1f5402540962027202891389199913a409a40ab808b509b00ac702e7
02e00cf40a1408d007010007d007027107010007100720079007a007b007
06077d041400301615b8ffc040131239125f157f159f15df150415151bd3
040104b8ffd0b2143904b8ffe8b2133904b8ffd84048123904310b0b5c1b
011b25110707cc0816281b390f16016f167f168f160316f4141480080130
0890080230088f08df08031008400860087008b008e0080608aa0e150400
89000200b8032c4012300e400e500e03000e100e200e03f00e010eb8ffc0
4009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d715d713c
10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15015d592b
3cfd3c10f45d5d7172393130015d00383800715d014358b4060001020271
5971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c402d390d40
2d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ffc0b21b39
08b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2093908b8
ffc0400e093915101939192011390d201139002b2b012b002b2b2b2b2b2b
2b2b2b2b2b2b595959130617163332363717060623220235341233321615
252126272626232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701
a805101963365383023bcc747463781489e10101d9eb0107cbaa3a582438
4081>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 3584 7 <0001000d000003f3058e0036028fb10202435458401d384012120255100a
110a080d0d02550a182412120255181a0d0d025518b8fff8b40f0f025518
b8ffe0400c10100255180e131302551826b8ffea401f1010025526213435
272d0121040c0c025521080d0d0255212d18121202552db8fffab40c0c02
552db8fff6b40d0d02552db8fff4b40f0f02552db8ffec400f101002552d
0e131302552d0120040f410a03e2001203e2002503e2002803e200270034
03e2400f3540090d025535360027111d2c0407003fed2f2f3fdd2bed10ed
edecec123939012f2b2b2b2b2b2bdd2b2bc010c4c63210c42b2f2b2b2b2b
2bcd2bc410c431302b1bb106024354584058341210100655351210100655
01200427343536001d2c040711270a02101006550a060f0f06550a0c0d0d
06550a18021010065518060f0f0655180c0d0d0655181838370121021010
065521060f0f0655210c0d0d0655212db8fff0b4101006552db8fff2b40f
0f06552db8fffcb70d0d06552d2d38371112392f2b2b2bdd2b2b2bc01112
392f2b2b2bcd2b2b2b002f2f3fed3fddcd111239393130012b2b1b402f38
402a350a38600d5d360f250f268038903804b038c038d038032b06015038
60387038903804403801200818291e11b8030f4011222d291e274a220a29
1e104a2321291e26b8030e402e2335272e41341e35440120273600001d2c
04072726261111100a19182409900a01b00a010f0a700a9f0acf0a040ab8
02bd40252d0021242e1f2d502d602d702d04802d902d02b02d01002d102d
c02dd02d042d6037a67f182b10f65d5d71723cfd3c10fd5d71723cfd3c00
3f3c103c103c3fed3f3c113939f5edfc01f52b2b2b2b3130437940141a1c
050806251b261c05191c0107081a071d1c012b01103c2b2b2b8181017172
005d015d712b2b5959011136363332161716151114171616331521353332
363736351134262623220607111416163315213532373636351134262623
22072725014d6f82414e701b130e0a3040fe3e1540320a031f4430316a4a
153946fe3a3d2314180f1f1a152f0e0112058efd627a45565c40aafebc57
20181c24242726104e0144965e2f344ffe1c5e2e1f2424130a3856033d9d
481a10237000>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 4400 8 <0002003c00000207058e000b00220249b10202435458b90024ffc0401d0d
0d0255120d080d0d02550d21181010025521180f0f02552113180309b8ff
eeb41313025509b8ffe0b40d0d025509b8ffd6b40f0f025509b8ffceb610
100255090d18b8fff4b41313025518b8ffe2b40d0d025518b8ffe0b40f0f
025518b8ffd6b5101002551820b803e240174f216f217f210321226f0001
0060060106400f0f025506b8ffc0b71313025506220613002f3fd62b2b5d
cd5d10dd5ded012f2b2b2b2bcd2f2b2b2b2bcd10c4c62b2b102bc4313001
2b1bb10602435458400d20121010065521121010065506b8ffc0b44b4b06
5506b8ffc0b44141065506b8ffc04019373706554006010006a006026006
0106000020212207130309b8fff6401c10100655090924230d0210100655
0d020f0f06550d0c0d0d06550d18b8fff0b41010065518b8fff6b40f0f06
5518b8fff0b70d0d0655181824231112392f2b2b2bcd2b2b2b1112392f2b
cd002f3fddcd3fcd5d71722b2b2b3130012b2b1b40199024016024702490
24a024f024052024502402402450240224b8ffc0b332323424b8ffc0b338
3a3424b8ffc0b32d303424b8ffc0b323253424b8ffc0402e191a3418291e
134a220d291e124a2321271941201e21440c190c1390060106390000220c
0713120a900901093903b8ffc0b2433503b8ffc0400f3f35036b0c0c0d19
0d2418402b3918b8ffc0401a363a34901801501801601870189018a018f0
180518b223b2a3182b10f65d71722b2bed3c103c10f42b2bed72003f3c3f
3c3fed7211123910f5edfc01f52b2b3130012b2b2b2b2b015d715d017259
590132161514062322263534361311141616331521353236363511342726
26232207272501292a3b3b2a2a3c3b7e193141fe43432e1b09071e1a1c28
0e0114058e3b2a2a3c3c2a2a3bfe21fd2056391c24241a3c550161952c20
190f2470>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 5094 9 <0001003d0000020f058e00150191b10202435458b90017fff6401d0d0d02
55140c06010701080d0d025501040f0f025501060c0c0255010cb8fff2b4
131302550cb8ffeab40c0c02550cb8ffe2b40d0d02550cb8ffd6b4101002
550cb8ffdeb50f0f02550c05bd03e2000803e20007001303e2400b131440
090d025514150007002f3fdd2b32ed10eded012f2b2b2b2b2bcd2b2b2bc4
10c410c631302b1bb1060243545840271312101006551414101006551314
1500000007010c0d0d065501021010065501040f0f0655010cb8fff0b410
1006550cb8fff4b40f0f06550cb8fff0b70d0d06550c0c17161112392f2b
2b2bcd2b2b2b002f3f3fddcd3130012b2b1bb79017c017f0170317b8ffc0
b33f463417b8ffc0403a393b340117b20d64365017014017501760177017
9017a017f017070c291e074a2201291e06272314270d41131e1444150000
07060a0001240d0cb8ffc0b33f46340cb8ffc0401a353b34900c01500c01
600c700c900ca00cf00c050cb216b2a3182b10f65d71722b2b3cfd3c003f
3c3f3cf5edfc01f52b2b3130015d0171012b012b2b017259590111141616
3315213532363635113426262322072725017b193447fe3f3f2e1a0e1f18
1a28110111058efb4156381d24241a3c5503409b471a10237000>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 5570 10 <000100110000063003af005703d3b1020243545840175940121202555940
0d0d02551711080d0d025511554c30b8fff4b40f0f025530b8ffeab41010
025530b8fff4400f13130255302b080d0d02552b313746b8fff4b40f0f02
5546b8ffeab41010025546b8fff440211313025546414741080d0d025541
040f0f025541060c0c0255414c14121202554cb8fff4b40f0f02554cb8ff
f6b40d0d02554cb8ffeab4101002554cb8fffa40190c0c02554c0a131302
554c2b040f0f02552b060c0c02552b37b8fff0400b0f0f025537100d0d02
5537b8ffd4400b10100255371c1212025537b8ffea401f0c0c025537020d
0d02553702131302553711040f0f025511060c0c02551120b8ffe8400b0f
0f025520300d0d025520b8ffc2400b10100255202a1212025520b8ffda40
0b0c0c025520020d0d025520b8fffc400b131302552016192f324548b803
e24020475455400c0c02552f55014f556f557f5503555606473118252c0b
073c2c0507003fed3fed2f2f2f3fdd5d5d2bcd10fdc0c0c0c0c0012f2b2b
2b2b2b2b2bcd2b2b2f2b2b2b2b2b2b2bcd2b2b2f2b2b2b2b2b2bcd2b2b2b
c410c42b2b2b10c4102bc42b2b2b10c6102bc431302b2b1bb10602435458
403c252c0b3c2c050b070507545556071831471102101006551120041010
0655202b060f0f06552b02101006552b3741060f0f065541021010065541
4c20b8ffeab70d0d065520205837b8fff8b41010065537b8fff8b40f0f06
5537b8fff2b70d0d06553737584cb8ffeeb40f0f06554cb8fff0b4101006
554cb8fff8b70d0d06554c4c59581112392f2b2b2b11392f2b2b2b11392f
2b10cd2b2b10cd2b2b102bcd2b002f2f2f3fddcd3f3f10ed10ed313001b0
0d4b5458bf0046ffe80045ffe8002fffe80030ffe8b51a18191818183838
3838383838591b401c3407d059ef16038059011159600d5d362b0d019059
01200820291e18b802fcb42237291e31b802fc400b224c291e474a221129
1e17b8030eb4232b291e30b8030db42341291e46b8030d403e2355274d41
541e55440829374d4039292808000725475657073c2c05252c0c0a0b0706
0405074746313018170a5917171a101124213020017020b0200220b80135
400f37292e2b24383037017037b0370237b8013540164d5741244c4c1f4d
504d02804d904d02004d104d024db8ffc0b61416344d605859b8025ab321
a67f18b80164852b2b4ef42b5d71723c4d10fd3c10f471723cfde410f471
723cfd3c4e456544e6003f3c3c3c3c3c3f3c3c3f3c3c4ded10ed3f3c1112
17390111123900f5edfc01f52b2b2b2b2b2b31304379401422240c0f0d25
2326240c211c010e0f220e251c012b01103c2b2b2b81810172005d2b0171
5d5959013637363633321617363633321617161511141716163315213533
323736373635113427262322060707171114161633152135323637363511
342726232207060711141616331521353236363511342726262322072725
33015064122d6833567c15678e4b497121160d0a363dfe3c133b21170a04
1b2756356b4c0202153a46fe314c390b05212c4f3635532d19314bfe3b3f
321a09071e1a1c270f01142b02ec640f262a645f784b4b553a7cfe765620
161f24241710231150018a702e4035480b2bfe4b5e2e1f24242424115201
8a7031401d2c37fe155a361b24241b3b55015e972c21190f2470>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 6796 11 <0001000c000003f703af003302d3b102024354584017354012120255300c
10100255310c101002550e080f1623b8ffea402e10100255231d24290808
0d0d025508040f0f025508060c0c025508162412120255161a0d0d025516
0c1313025516b8fff4b40f0f025516b8ffdeb41010025516b8ffee40260c
0c025516001d040f0f02551d080d0d02551d060c0c02551d291812120255
290e1313025529b8ffeeb41010025529b8fff0b40f0f025529b8fff6b40d
0d025529b8fffa400a0c0c025529001c022430b803e24009314009100255
31320dbe03e2001003e2002203e2002503e24009240f2432071a2c020700
3fed3f2f2f10ededecec10dd2bed11123939012f2b2b2b2b2b2bdd2b2b2b
c02f2b2b2b2b2b2bcd2b2b2b10c410c42b10c410c431302b2b2b1bb10602
435458405e2f1610100655300c10100655311610100655001c0224303132
071a2c02070f24080c0d0d065508021010065508060f0f06550816020d0d
065516021010065516080f0f065516163534001d0c0d0d06551d080f0f06
551d02101006551d29b8fff0b40d0d065529b8fff0b41010065529b8fff2
b70f0f0655292935341112392f2b2b2bdd2b2b2bc01112392f2b2b2bcd2b
2b2b002f2f3fed3fddcd111239393130012b2b2b1b403a35402a35083560
0d5d3630355035603570359035052d040140356035703580359035b03506
b035d03502b0350160358035c035031d0816291e0fb8030f40112229291e
244a2208291e0e4a231d291e23b8030e402e2331272a41301e31441c0023
3233071a2c02072423230f0f0e0a17162407900801b008010f0870089f08
cf080408b802bd401b29331d242a1f295029602970290480299029b02903
002910290229b8ffc04009141634296034a67f182b10f62b5d71723cfd3c
10fd5d71723cfd3c003f3c103c103c3fed3f3c113939f5edfc01f52b2b2b
2b3130437940121819030604251903171c01050618051a1c012b01103c2b
2b8181015d71015d71005d01722b2b595901363332161716151114171616
331521353332363736351134262322071114171616331521353332363511
342626232207272533014ba1924b6c20160e0b3142fe3b1340330a04414d
77760b0e314bfe3b1446310f1f1a1c270f01142b02edc24b563c7cfe7957
1f191c242427260f4f01777d7182fe1d5d161d1b242447640154a5481a0f
2470>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 7668 12 <00020045ffe403b903af000f001d020cb10202435458401c140c06101002
550c0c0f0f02550c0c0d0d02550c100b0b02550c1a04b8fff4b410100255
04b8fff440130b0b0255040c0f0f0255041725080b10250007003fed3fed
012f2b2b2bcd2f2b2b2b2bcd31301bb10602435458400910250007172508
0b1ab8fff4401b0d0d06551a04140c0d0d0655140c100f0f06550c100d0d
06550c04b8fff0400b0d0d065504041e0c0c1f1e1112392f11392f2b102b
2bcd2b10cd2b003fed3fed31301b404512801501a716b616c501c909c41d
d9090612e70a0148094516571585018c09890fd91b071f403235041f430d
5d369f1f01c615c91a02401f014908102500071725080b1204b8ffc0402b
120b3f4f0401400401d0040140045004600470049004b0040604ec0c4012
0b3f400c9f0c020c431e434b182b4e10f4722b4ded5d5d71722b4bb02853
4bb050515ab10c1e49b11f0449525a58bd000cffc00004ffc0001fffc038
3838594358bc001a0332000400140332e910e91bbc001a03320004001403
32ed10ed59003fed3fed313043794036011d12250e2602251c260a250626
110f1420001d011a2001160914200018071a2001130d1020011b03102001
150b17200019051720002b2b2b2b012b2b2b2b2b2b2b2b2b2b8101720171
722b2b71015d0143584011750275067a0a7a0e7a1278167518751c085d59
5d005d435c5840091c1011391b10113915b8fff0b10b39002b2b2b595959
013217161514060623222726353436361722060615141233323635342726
0200d07e6b76cf7fcf7a677dcc53356b429f82617e694703af9e87af7bfc
80a58bad7ef977413f9e7cc8fedea0c3f48c6000>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 8288 13 <0001000d000002b703af002801b5b1020243545840282a4013130255061f
171127040f0f025527181f0111080d0d025511040f0f025511060c0c0255
111fb8fff4b40f0f02551fb8fff6b40d0d02551fb8ffee4011101002551f
14121202551f0e131302551fb8fffc400b0f0f02551f011003181619bb03
e20018002603e2400e4f276f277f2703272807180c0307003fcd2f3fdd5d
ed10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10c410c431
302b1bb10602435458402301100318262728076f097f0902090c03071806
1f01110c0d0d0655110410100655111fb8fffab40d0d06551fb8ffeab40f
0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd2b2bc010c400
2f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f4002400f82
0407402a015f2a011f291e18272211291e17862327272041261e2744000a
0b2a111420100104188009010939100c010c590303000718170a5f060140
0601062e1f2a012a0011241f1f1f2001802090200200201020b020c020d0
2005206029a66e182b4e10f45d71723c4d10fd3c1072e47172003f3c3f3c
10ed72ed5d11173901111239390010f5edfc01f52b2b3130017271005d59
590115363332161514062322262322070607111417161633152135323736
373635113426262322072725014c73793748342423571512152d30130d42
3efe2b4622190a050d231a1f270a011503afcece432c27364514295efe49
4c271b24242416102311500163a03d1c0f247000>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 8848 14 <00010064ffe402d503af00310434b1020243545840273340131302553340
0b0b02550201181010025501180f0f0255010f1b1a08270c0b0b02552721
0fb8ffe0b4101002550fb8fff440320f0f02550f310708270f2104122b05
017905016c050105252f0101012a0719771e01631e011e25201a01601a70
1a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f012f2b2bcd
2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f2708042a16
1e122e05022a3107601a701a021a19124b05016b057b050205252a07441e
01641e741e021e25120b01210fb8fff2401a0d0d06550f0f33321a080e0d
0d06550827120d0d0655272733321112392f2bcd2bc41112392f2bcdc400
3fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b4029092c
192c0212122e400b392c280b391814590c5a269b109424050a070a280a29
603370338033060f33b8012040870d5d36cb0dcb0ec424c425d723d624d9
2ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f038015801a80
1b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c03161412
1c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f335f3378
29782c860ea823af33e803e61c0c2908311e00bd021e011f012f010201b8
012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a021ab801
2bb219bd16b8011a4022121224230d0b040f2724230d0b04051e01c7002e
2f2a31000005252a071a7e191918b803464014162f1e25120b02cc120101
12cf21df21ef210321b80314400b700f01600f700f900f030fb801364019
271a192e1f0801082c9f270160277027802703202730270227ba01200032
0120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2ff21015d
59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c10e410ed
1112173901111217394358400a242323240d0b140d0d0b870e2e2b0e7d10
c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4edb1060243
5458b42e20090d34002b5931304379401c28291f20101106071f11211c01
0629081c0020101e1c000728051c01002b2b012b2b81818181015d435840
09fb07f610f611fb28045d5901720071005d435840199f019f029f039f0b
9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b2b435840
0b2f232f248b2c9b249b2c055d59435c584011282019390928193901400a
3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c400a392c40
09390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b2193924b8ffe8
b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b212391ab8
ffc0400f123901401239024012392c20123924b8fff0400f0f392c180f39
03100d392e400d3923b8fff040120d390c100d392c200d392c1811392c18
1139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b59005d59590111232626232206151417161717161514062322
272623220723113316163332363534262427263534363332171633323637
02902126775c4656201f5f92cbbd75546c2115170d21211c9e62455761fe
de2d2d9b7b364d331110120c03affec8936a4a2d3828292e4763a27d991e
0a1a01478c8e5139455e903a39577198170f0e18>PMNKFZ+TimesNewRomanPSMT AddT42Char 
1 10068 15 <00010011ffe403ed0394002002c1b10202435458b60909001a120614be03
e2001103e2002003e2000203e2b10006003fededecec3f2f1239012f3130
1bb106024354584031180a091b080909222109001a0b1416101006551413
06112a10100655111206021610100655020106201610100655200006003f
cd2b3fcd2b3fcd2b3fcd2b3f1239011112392fddcd10ddcd31301b400912
530a58185b190319b8ffd8b20b3522b8ffc0406115351419141a2309220a
2111201224182019201a3a09390a3a12391835193a1a4a084909440a4518
4519491a69089c0899099d1a9a1b9f22a900a808a509a219a21aa81bbe08
b509b60ab618b719ba1abb1bc022d518f60af618fb1a2d9f090122b8ffc0
b332603422b8ffc0b32b313422b8ffc0b31e293422b8ffc0b347473422b8
ffc0b327273422b8ffc0b323233422b8ffc0b311113422b8ffc04040191c
340f227c007201720270057c20810585118f22093a08340a3418391bc606
c021d81a07880a891887190337124818021318141e13001b201e00120a11
1e12b8ff86402c091a192018191930090a1409090a1b1a1a240908140909
08070605040408021e01131212010100061a190b18b8011d40125f0a0110
0a240a9f0ab60ad40a050a7d091bb80167401040062fa008b908ce080308
7d0919751abb011b00200009ffc0b30f123409b8ffc0b3191d3409b8ffc0
b2323509b8ffc0b70c350009c0090209b801bfb610220180220122b8ffc0
b3191d3422b8ffc0b60f133421ab89182b19102b2b7172f45d2b2b2b2b1a
fd18e61910f45d18f41aed1910f45d7218ed003f3c3f3c103c103c10ed01
111739872e2b0e7d10c487052e182b0e7d10c42b180010ed0110c00010ed
0110c00010ed0110c03130015d5d5d712b2b2b2b2b2b2b2b005d015d2b2b
0172435c58b50a20160d3f08b8ffe8b7160d3f09240b3918b8ffe0b21339
0ab8ffe0400a1339082013391b201339012b2b2b2b002b012b2b59595913
211523220615141713133635342726262335211506070607012301262627
26271101af1c272915d5d617080b2234012b3414231cfebb29feb916281f
113203942526202330fe06020d381d0e090f0b252504111e46fcee030536
2f100908>PMNKFZ+TimesNewRomanPSMT AddT42Char 
PMNKFZ+TimesNewRomanPSMT /CharStrings get begin
/S 3 def
/a 4 def
/c 5 def
/e 6 def
/h 7 def
/i 8 def
/l 9 def
/m 10 def
/n 11 def
/o 12 def
/r 13 def
/s 14 def
/v 15 def
end
PMNKFZ+TimesNewRomanPSMT /Encoding get
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PMNKFZ+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 36{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]PMNKFZ+TimesNewRomanPSMT nfPMNKFZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf314.485 104.627 mo(Server)[10.0116 7.98843 5.99387 9 7.9884 0 ]xsh%ADOBeginSubsetFont: RFKBAA+PMingLiU-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (RFKBAA+PMingLiU)%%Title: (RFKBAA+PMingLiU Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /RFKBAA+PMingLiU def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {0 -198 999 801} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE3100AAC671FFC18DDB3764E95ECE8020311F82848570B1358F8FCDF8604B> |1 <001C60D8A8C9B8666C32> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /RFKBAA+PMingLiU-Identity-H /Identity-H 0 [/RFKBAA+PMingLiU] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PMNKGC+PMingLiU /RFKBAA+PMingLiU-Identity-H findfont ct_VMDictPutPMNKGC+PMingLiU [18 0 0 -18 0 0 ]msf361.462 104.627 mo(\000\001)shPMNKFZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf187.002 254.363 mo(local machines)[5.0004 9 7.9884 7.9884 5.0004 4.5 14.0004 7.9884 7.98839 9 5.00043 9 7.9884 0 ]xshPMNKGC+PMingLiU [18 0 0 -18 0 0 ]msf294.457 254.363 mo(\000\001)sh309.705 273.722 mo
311.853 266.586 314 259.505 315.665 258.676 cv
317.33 257.846 318.338 264.152 319.653 268.743 cv
320.967 273.334 322.282 286.721 323.596 286.278 cv
324.911 285.836 326.269 267.858 327.584 266.199 cv
328.899 264.539 329.6 276.266 331.572 276.266 cv
333.543 276.266 337.181 267.028 339.503 266.199 cv
341.825 265.369 342.833 269.13 345.463 271.232 cv
348.092 273.334 352.78 279.585 355.41 278.755 cv
358.039 277.926 358.039 266.641 361.369 266.199 cv
364.7 265.756 372.675 275.824 375.304 276.266 cv
377.933 276.709 375.304 268.743 377.276 268.743 cv
379.248 268.743 383.893 275.824 387.223 276.266 cv
390.553 276.709 394.541 271.675 397.17 271.232 cv
399.799 270.79 401.158 272.062 403.13 273.722 cv
405.102 275.381 406.416 281.687 409.089 281.3 cv
411.762 280.913 415.399 273.334 419.036 271.232 cv
422.673 269.13 426.792 268.909 430.955 268.743 cv
@
14.9552 276.44 mo
17.6872 276.764 20.4191 277.134 22.227 276.44 cv
24.0349 275.746 24.6777 271.533 25.8829 272.228 cv
27.0882 272.922 27.972 280.652 29.4987 280.652 cv
31.0254 280.652 33.4761 273.292 35.0027 272.228 cv
36.5294 271.163 37.4133 273.663 38.6185 274.357 cv
39.8238 275.051 41.0692 277.134 42.2745 276.44 cv
43.4797 275.746 44.7252 269.08 45.9304 270.145 cv
47.1357 271.209 48.3409 283.059 49.5462 282.735 cv
50.7515 282.411 51.9969 269.45 53.2021 268.062 cv
54.4074 266.673 54.7288 273.292 56.8581 274.357 cv
58.9874 275.422 63.8486 275.746 65.9779 274.357 cv
68.1072 272.968 67.7858 265.608 69.5937 265.932 cv
71.4016 266.256 74.4951 276.81 76.9056 276.44 cv
79.3161 276.07 82.6507 265.238 84.1773 263.849 cv
85.704 262.461 85.1014 265.608 86.0254 268.062 cv
86.9494 270.515 88.4359 275.746 89.6412 278.523 cv
90.8464 281.3 92.3731 285.929 93.2971 284.865 cv
94.2211 283.8 94.181 275.375 95.105 272.228 cv
96.029 269.08 97.2343 265.562 98.761 265.932 cv
100.288 266.303 102.417 272.968 104.225 274.357 cv
106.033 275.746 106.957 275.746 109.689 274.357 cv
112.421 272.968 117.884 268.756 120.616 265.932 cv
123.348 263.109 124.714 260.331 126.08 257.554 cv
@
.75 lw
278.718 151.251 mo
139.271 151.879 li
@
274.732 154.269 mo
280.718 151.242 li
274.705 148.27 li
cp
ef
143.258 148.861 mo
137.271 151.888 li
143.285 154.861 li
cp
ef
278.806 151.829 mo
172.039 184.555 li
@
275.861 155.869 mo
280.718 151.242 li
274.102 150.133 li
cp
ef
174.985 180.515 mo
170.127 185.141 li
176.743 186.251 li
cp
ef
282.549 152.047 mo
324.137 170.313 li
@
285.005 156.402 mo
280.718 151.242 li
287.418 150.909 li
cp
ef
321.681 165.958 mo
325.968 171.117 li
319.268 171.451 li
cp
ef
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
/PMNKGB+Arial-BoldMT*1 uf/PMNKGB+Arial-BoldMT uf/DDLBAA+Arial-BoldMT uf/PMNKGC+PMingLiU-Identity-H uf/PMNKGC+PMingLiU /CIDFont ur/PMNKGA+Arial-BoldMT*1 uf/PMNKGA+Arial-BoldMT uf/YORQMX+Arial-BoldMT uf/PMNKFX+TimesNewRomanPS-BoldItalicMT*1 uf/PMNKFX+TimesNewRomanPS-BoldItalicMT uf/VRKQMX+TimesNewRomanPS-BoldItalicMT uf/PMNKFZ+TimesNewRomanPSMT*1 uf/PMNKFZ+TimesNewRomanPSMT uf/BQDQMX+TimesNewRomanPSMT uf/PMNKFY+TimesNewRomanPS-BoldMT*1 uf/PMNKFY+TimesNewRomanPS-BoldMT uf/FJGRMX+TimesNewRomanPS-BoldMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
